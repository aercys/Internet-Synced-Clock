
Builds/main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000001a4  00800100  00002ee6  00002f7a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002ee6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000048  008002a4  008002a4  0000311e  2**0
                  ALLOC
  3 .stab         000033e4  00000000  00000000  00003120  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00001a28  00000000  00000000  00006504  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      00000011  00000000  00000000  00007f2c  2**0
                  CONTENTS, READONLY
  6 .debug_aranges 000001c0  00000000  00000000  00007f40  2**3
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00000a64  00000000  00000000  00008100  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000118  00000000  00000000  00008b64  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000591  00000000  00000000  00008c7c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 fc 00 	jmp	0x1f8	; 0x1f8 <__ctors_end>
       4:	0c 94 19 01 	jmp	0x232	; 0x232 <__bad_interrupt>
       8:	0c 94 19 01 	jmp	0x232	; 0x232 <__bad_interrupt>
       c:	0c 94 19 01 	jmp	0x232	; 0x232 <__bad_interrupt>
      10:	0c 94 19 01 	jmp	0x232	; 0x232 <__bad_interrupt>
      14:	0c 94 19 01 	jmp	0x232	; 0x232 <__bad_interrupt>
      18:	0c 94 19 01 	jmp	0x232	; 0x232 <__bad_interrupt>
      1c:	0c 94 19 01 	jmp	0x232	; 0x232 <__bad_interrupt>
      20:	0c 94 19 01 	jmp	0x232	; 0x232 <__bad_interrupt>
      24:	0c 94 6d 06 	jmp	0xcda	; 0xcda <__vector_9>
      28:	0c 94 19 01 	jmp	0x232	; 0x232 <__bad_interrupt>
      2c:	0c 94 19 01 	jmp	0x232	; 0x232 <__bad_interrupt>
      30:	0c 94 19 01 	jmp	0x232	; 0x232 <__bad_interrupt>
      34:	0c 94 19 01 	jmp	0x232	; 0x232 <__bad_interrupt>
      38:	0c 94 19 01 	jmp	0x232	; 0x232 <__bad_interrupt>
      3c:	0c 94 19 01 	jmp	0x232	; 0x232 <__bad_interrupt>
      40:	0c 94 19 01 	jmp	0x232	; 0x232 <__bad_interrupt>
      44:	0c 94 19 01 	jmp	0x232	; 0x232 <__bad_interrupt>
      48:	0c 94 19 01 	jmp	0x232	; 0x232 <__bad_interrupt>
      4c:	0c 94 19 01 	jmp	0x232	; 0x232 <__bad_interrupt>
      50:	0c 94 19 01 	jmp	0x232	; 0x232 <__bad_interrupt>
      54:	0c 94 19 01 	jmp	0x232	; 0x232 <__bad_interrupt>
      58:	0c 94 19 01 	jmp	0x232	; 0x232 <__bad_interrupt>
      5c:	0c 94 19 01 	jmp	0x232	; 0x232 <__bad_interrupt>
      60:	0c 94 19 01 	jmp	0x232	; 0x232 <__bad_interrupt>
      64:	0c 94 19 01 	jmp	0x232	; 0x232 <__bad_interrupt>
      68:	07 63       	ori	r16, 0x37	; 55
      6a:	42 36       	cpi	r20, 0x62	; 98
      6c:	b7 9b       	sbis	0x16, 7	; 22
      6e:	d8 a7       	std	Y+40, r29	; 0x28
      70:	1a 39       	cpi	r17, 0x9A	; 154
      72:	68 56       	subi	r22, 0x68	; 104
      74:	18 ae       	std	Y+56, r1	; 0x38
      76:	ba ab       	std	Y+50, r27	; 0x32
      78:	55 8c       	ldd	r5, Z+29	; 0x1d
      7a:	1d 3c       	cpi	r17, 0xCD	; 205
      7c:	b7 cc       	rjmp	.-1682   	; 0xfffff9ec <__eeprom_end+0xff7ef9ec>
      7e:	57 63       	ori	r21, 0x37	; 55
      80:	bd 6d       	ori	r27, 0xDD	; 221
      82:	ed fd       	.word	0xfded	; ????
      84:	75 3e       	cpi	r23, 0xE5	; 229
      86:	f6 17       	cp	r31, r22
      88:	72 31       	cpi	r23, 0x12	; 18
      8a:	bf 00       	.word	0x00bf	; ????
      8c:	00 00       	nop
      8e:	80 3f       	cpi	r24, 0xF0	; 240
      90:	08 00       	.word	0x0008	; ????
      92:	00 00       	nop
      94:	be 92       	st	-X, r11
      96:	24 49       	sbci	r18, 0x94	; 148
      98:	12 3e       	cpi	r17, 0xE2	; 226
      9a:	ab aa       	std	Y+51, r10	; 0x33
      9c:	aa 2a       	or	r10, r26
      9e:	be cd       	rjmp	.-1156   	; 0xfffffc1c <__eeprom_end+0xff7efc1c>
      a0:	cc cc       	rjmp	.-1640   	; 0xfffffa3a <__eeprom_end+0xff7efa3a>
      a2:	4c 3e       	cpi	r20, 0xEC	; 236
      a4:	00 00       	nop
      a6:	00 80       	ld	r0, Z
      a8:	be ab       	std	Y+54, r27	; 0x36
      aa:	aa aa       	std	Y+50, r10	; 0x32
      ac:	aa 3e       	cpi	r26, 0xEA	; 234
      ae:	00 00       	nop
      b0:	00 00       	nop
      b2:	bf 00       	.word	0x00bf	; ????
      b4:	00 00       	nop
      b6:	80 3f       	cpi	r24, 0xF0	; 240
      b8:	00 00       	nop
      ba:	00 00       	nop
      bc:	00 08       	sbc	r0, r0
      be:	41 78       	andi	r20, 0x81	; 129
      c0:	d3 bb       	out	0x13, r29	; 19
      c2:	43 87       	std	Z+11, r20	; 0x0b
      c4:	d1 13       	cpse	r29, r17
      c6:	3d 19       	sub	r19, r13
      c8:	0e 3c       	cpi	r16, 0xCE	; 206
      ca:	c3 bd       	out	0x23, r28	; 35
      cc:	42 82       	std	Z+2, r4	; 0x02
      ce:	ad 2b       	or	r26, r29
      d0:	3e 68       	ori	r19, 0x8E	; 142
      d2:	ec 82       	std	Y+4, r14	; 0x04
      d4:	76 be       	out	0x36, r7	; 54
      d6:	d9 8f       	std	Y+25, r29	; 0x19
      d8:	e1 a9       	ldd	r30, Z+49	; 0x31
      da:	3e 4c       	sbci	r19, 0xCE	; 206
      dc:	80 ef       	ldi	r24, 0xF0	; 240
      de:	ff be       	out	0x3f, r15	; 63
      e0:	01 c4       	rjmp	.+2050   	; 0x8e4 <read_coeffs+0x100>
      e2:	ff 7f       	andi	r31, 0xFF	; 255
      e4:	3f 00       	.word	0x003f	; ????
      e6:	00 00       	nop
	...

000000ea <__trampolines_end>:
      ea:	6e 61       	ori	r22, 0x1E	; 30
      ec:	6e 00       	.word	0x006e	; ????

000000ee <__c.2128>:
      ee:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      fe:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
     10e:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
     11e:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
     12e:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
     13e:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
     14e:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     15e:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     16e:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     17e:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     18e:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     19e:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     1ae:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     1be:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     1ce:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     1de:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

000001ec <__c.2268>:
     1ec:	63 64 69 6e 6f 70 73 75 78 58 5b 00                 cdinopsuxX[.

000001f8 <__ctors_end>:
     1f8:	11 24       	eor	r1, r1
     1fa:	1f be       	out	0x3f, r1	; 63
     1fc:	cf ef       	ldi	r28, 0xFF	; 255
     1fe:	d8 e0       	ldi	r29, 0x08	; 8
     200:	de bf       	out	0x3e, r29	; 62
     202:	cd bf       	out	0x3d, r28	; 61

00000204 <__do_copy_data>:
     204:	12 e0       	ldi	r17, 0x02	; 2
     206:	a0 e0       	ldi	r26, 0x00	; 0
     208:	b1 e0       	ldi	r27, 0x01	; 1
     20a:	e6 ee       	ldi	r30, 0xE6	; 230
     20c:	fe e2       	ldi	r31, 0x2E	; 46
     20e:	02 c0       	rjmp	.+4      	; 0x214 <__do_copy_data+0x10>
     210:	05 90       	lpm	r0, Z+
     212:	0d 92       	st	X+, r0
     214:	a4 3a       	cpi	r26, 0xA4	; 164
     216:	b1 07       	cpc	r27, r17
     218:	d9 f7       	brne	.-10     	; 0x210 <__do_copy_data+0xc>

0000021a <__do_clear_bss>:
     21a:	22 e0       	ldi	r18, 0x02	; 2
     21c:	a4 ea       	ldi	r26, 0xA4	; 164
     21e:	b2 e0       	ldi	r27, 0x02	; 2
     220:	01 c0       	rjmp	.+2      	; 0x224 <.do_clear_bss_start>

00000222 <.do_clear_bss_loop>:
     222:	1d 92       	st	X+, r1

00000224 <.do_clear_bss_start>:
     224:	ac 3e       	cpi	r26, 0xEC	; 236
     226:	b2 07       	cpc	r27, r18
     228:	e1 f7       	brne	.-8      	; 0x222 <.do_clear_bss_loop>
     22a:	0e 94 59 09 	call	0x12b2	; 0x12b2 <main>
     22e:	0c 94 71 17 	jmp	0x2ee2	; 0x2ee2 <_exit>

00000232 <__bad_interrupt>:
     232:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000236 <calculate_altitude>:
    X2 = (-7357 * _pressure) >> 16;
    bmp_180.pressure = _pressure + ((X1 + X2 + 3791) >> 4);
}

void calculate_altitude() {
    bmp_180.altitude = (float) 44330 * (1 - pow(((float) bmp_180.pressure / pressure_sea_level), 0.1903));
     236:	60 91 be 02 	lds	r22, 0x02BE
     23a:	70 91 bf 02 	lds	r23, 0x02BF
     23e:	80 91 c0 02 	lds	r24, 0x02C0
     242:	90 91 c1 02 	lds	r25, 0x02C1
     246:	0e 94 e7 0d 	call	0x1bce	; 0x1bce <__floatsisf>
     24a:	20 e8       	ldi	r18, 0x80	; 128
     24c:	36 ee       	ldi	r19, 0xE6	; 230
     24e:	45 ec       	ldi	r20, 0xC5	; 197
     250:	57 e4       	ldi	r21, 0x47	; 71
     252:	0e 94 4c 0d 	call	0x1a98	; 0x1a98 <__divsf3>
     256:	21 e0       	ldi	r18, 0x01	; 1
     258:	3e ed       	ldi	r19, 0xDE	; 222
     25a:	42 e4       	ldi	r20, 0x42	; 66
     25c:	5e e3       	ldi	r21, 0x3E	; 62
     25e:	0e 94 d6 0e 	call	0x1dac	; 0x1dac <pow>
     262:	9b 01       	movw	r18, r22
     264:	ac 01       	movw	r20, r24
     266:	60 e0       	ldi	r22, 0x00	; 0
     268:	70 e0       	ldi	r23, 0x00	; 0
     26a:	80 e8       	ldi	r24, 0x80	; 128
     26c:	9f e3       	ldi	r25, 0x3F	; 63
     26e:	0e 94 e7 0c 	call	0x19ce	; 0x19ce <__subsf3>
     272:	20 e0       	ldi	r18, 0x00	; 0
     274:	3a e2       	ldi	r19, 0x2A	; 42
     276:	4d e2       	ldi	r20, 0x2D	; 45
     278:	57 e4       	ldi	r21, 0x47	; 71
     27a:	0e 94 73 0e 	call	0x1ce6	; 0x1ce6 <__mulsf3>
     27e:	60 93 c2 02 	sts	0x02C2, r22
     282:	70 93 c3 02 	sts	0x02C3, r23
     286:	80 93 c4 02 	sts	0x02C4, r24
     28a:	90 93 c5 02 	sts	0x02C5, r25
     28e:	08 95       	ret

00000290 <read_temperature>:
}

long read_temperature() {
     290:	cf 93       	push	r28
     292:	df 93       	push	r29
    short _temperature;
    
    start_transmission();
     294:	0e 94 19 05 	call	0xa32	; 0xa32 <start_transmission>
    send_addr(bmp180_write_addr);
     298:	8e ee       	ldi	r24, 0xEE	; 238
     29a:	0e 94 49 05 	call	0xa92	; 0xa92 <send_addr>
    send_data(control_reg_addr);
     29e:	84 ef       	ldi	r24, 0xF4	; 244
     2a0:	0e 94 5f 05 	call	0xabe	; 0xabe <send_data>
    send_data(temperature_sel);
     2a4:	8e e2       	ldi	r24, 0x2E	; 46
     2a6:	0e 94 5f 05 	call	0xabe	; 0xabe <send_data>
    end_transmission();
     2aa:	0e 94 26 05 	call	0xa4c	; 0xa4c <end_transmission>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     2ae:	87 e2       	ldi	r24, 0x27	; 39
     2b0:	93 e2       	ldi	r25, 0x23	; 35
     2b2:	01 97       	sbiw	r24, 0x01	; 1
     2b4:	f1 f7       	brne	.-4      	; 0x2b2 <read_temperature+0x22>
     2b6:	00 c0       	rjmp	.+0      	; 0x2b8 <read_temperature+0x28>
     2b8:	00 00       	nop
    
    _delay_ms(wait_temperature);
    
    start_transmission();
     2ba:	0e 94 19 05 	call	0xa32	; 0xa32 <start_transmission>
    send_addr(bmp180_write_addr);
     2be:	8e ee       	ldi	r24, 0xEE	; 238
     2c0:	0e 94 49 05 	call	0xa92	; 0xa92 <send_addr>
    send_data(out_msb);
     2c4:	86 ef       	ldi	r24, 0xF6	; 246
     2c6:	0e 94 5f 05 	call	0xabe	; 0xabe <send_data>
    send_data(out_lsb);
     2ca:	87 ef       	ldi	r24, 0xF7	; 247
     2cc:	0e 94 5f 05 	call	0xabe	; 0xabe <send_data>
    restart();
     2d0:	0e 94 38 05 	call	0xa70	; 0xa70 <restart>
    send_addr(bmp180_read_addr);
     2d4:	8f ee       	ldi	r24, 0xEF	; 239
     2d6:	0e 94 49 05 	call	0xa92	; 0xa92 <send_addr>
    _temperature = read_data(1) << 8;
     2da:	81 e0       	ldi	r24, 0x01	; 1
     2dc:	90 e0       	ldi	r25, 0x00	; 0
     2de:	0e 94 2a 05 	call	0xa54	; 0xa54 <read_data>
     2e2:	68 2f       	mov	r22, r24
     2e4:	70 e0       	ldi	r23, 0x00	; 0
     2e6:	d6 2f       	mov	r29, r22
     2e8:	cc 27       	eor	r28, r28
    _temperature |= read_data(0);
     2ea:	80 e0       	ldi	r24, 0x00	; 0
     2ec:	90 e0       	ldi	r25, 0x00	; 0
     2ee:	0e 94 2a 05 	call	0xa54	; 0xa54 <read_data>
     2f2:	c8 2b       	or	r28, r24
    end_transmission();
     2f4:	0e 94 26 05 	call	0xa4c	; 0xa4c <end_transmission>
    return (long) _temperature;
     2f8:	be 01       	movw	r22, r28
     2fa:	88 27       	eor	r24, r24
     2fc:	77 fd       	sbrc	r23, 7
     2fe:	80 95       	com	r24
     300:	98 2f       	mov	r25, r24
}
     302:	df 91       	pop	r29
     304:	cf 91       	pop	r28
     306:	08 95       	ret

00000308 <calculate_temperature>:
    init_twi();
    read_coeffs();
    bmp_180.mode = mode;
}

void calculate_temperature() {
     308:	8f 92       	push	r8
     30a:	9f 92       	push	r9
     30c:	af 92       	push	r10
     30e:	bf 92       	push	r11
     310:	cf 92       	push	r12
     312:	df 92       	push	r13
     314:	ef 92       	push	r14
     316:	ff 92       	push	r15
    long UT, X1, X2, B5;
    
    UT = read_temperature();
     318:	0e 94 48 01 	call	0x290	; 0x290 <read_temperature>
     31c:	9b 01       	movw	r18, r22
     31e:	ac 01       	movw	r20, r24
    X1 = (UT - bmp_180.calib_coeffs.AC6) * bmp_180.calib_coeffs.AC5 / pow(2, 15);
     320:	80 91 d0 02 	lds	r24, 0x02D0
     324:	90 91 d1 02 	lds	r25, 0x02D1
     328:	28 1b       	sub	r18, r24
     32a:	39 0b       	sbc	r19, r25
     32c:	41 09       	sbc	r20, r1
     32e:	51 09       	sbc	r21, r1
     330:	a0 91 ce 02 	lds	r26, 0x02CE
     334:	b0 91 cf 02 	lds	r27, 0x02CF
     338:	0e 94 a0 10 	call	0x2140	; 0x2140 <__muluhisi3>
     33c:	0e 94 e7 0d 	call	0x1bce	; 0x1bce <__floatsisf>
     340:	20 e0       	ldi	r18, 0x00	; 0
     342:	30 e0       	ldi	r19, 0x00	; 0
     344:	40 e0       	ldi	r20, 0x00	; 0
     346:	58 e3       	ldi	r21, 0x38	; 56
     348:	0e 94 73 0e 	call	0x1ce6	; 0x1ce6 <__mulsf3>
     34c:	0e 94 b4 0d 	call	0x1b68	; 0x1b68 <__fixsfsi>
     350:	6b 01       	movw	r12, r22
     352:	7c 01       	movw	r14, r24
    X2 = bmp_180.calib_coeffs.MC * pow(2, 11) / (X1 + bmp_180.calib_coeffs.MD);
     354:	60 91 dc 02 	lds	r22, 0x02DC
     358:	70 91 dd 02 	lds	r23, 0x02DD
     35c:	88 27       	eor	r24, r24
     35e:	77 fd       	sbrc	r23, 7
     360:	80 95       	com	r24
     362:	98 2f       	mov	r25, r24
     364:	0e 94 e7 0d 	call	0x1bce	; 0x1bce <__floatsisf>
     368:	20 e0       	ldi	r18, 0x00	; 0
     36a:	30 e0       	ldi	r19, 0x00	; 0
     36c:	40 e0       	ldi	r20, 0x00	; 0
     36e:	55 e4       	ldi	r21, 0x45	; 69
     370:	0e 94 73 0e 	call	0x1ce6	; 0x1ce6 <__mulsf3>
     374:	4b 01       	movw	r8, r22
     376:	5c 01       	movw	r10, r24
     378:	80 91 de 02 	lds	r24, 0x02DE
     37c:	90 91 df 02 	lds	r25, 0x02DF
     380:	bc 01       	movw	r22, r24
     382:	88 27       	eor	r24, r24
     384:	77 fd       	sbrc	r23, 7
     386:	80 95       	com	r24
     388:	98 2f       	mov	r25, r24
     38a:	6c 0d       	add	r22, r12
     38c:	7d 1d       	adc	r23, r13
     38e:	8e 1d       	adc	r24, r14
     390:	9f 1d       	adc	r25, r15
     392:	0e 94 e7 0d 	call	0x1bce	; 0x1bce <__floatsisf>
     396:	9b 01       	movw	r18, r22
     398:	ac 01       	movw	r20, r24
     39a:	c5 01       	movw	r24, r10
     39c:	b4 01       	movw	r22, r8
     39e:	0e 94 4c 0d 	call	0x1a98	; 0x1a98 <__divsf3>
     3a2:	0e 94 b4 0d 	call	0x1b68	; 0x1b68 <__fixsfsi>
    B5 = X1 + X2;
     3a6:	6c 0d       	add	r22, r12
     3a8:	7d 1d       	adc	r23, r13
     3aa:	8e 1d       	adc	r24, r14
     3ac:	9f 1d       	adc	r25, r15
    bmp_180.calib_coeffs.B5 = B5;
     3ae:	60 93 d6 02 	sts	0x02D6, r22
     3b2:	70 93 d7 02 	sts	0x02D7, r23
     3b6:	80 93 d8 02 	sts	0x02D8, r24
     3ba:	90 93 d9 02 	sts	0x02D9, r25
    bmp_180.temperature = (B5 + 8) / pow(2, 4);
     3be:	68 5f       	subi	r22, 0xF8	; 248
     3c0:	7f 4f       	sbci	r23, 0xFF	; 255
     3c2:	8f 4f       	sbci	r24, 0xFF	; 255
     3c4:	9f 4f       	sbci	r25, 0xFF	; 255
     3c6:	0e 94 e7 0d 	call	0x1bce	; 0x1bce <__floatsisf>
     3ca:	20 e0       	ldi	r18, 0x00	; 0
     3cc:	30 e0       	ldi	r19, 0x00	; 0
     3ce:	40 e8       	ldi	r20, 0x80	; 128
     3d0:	5d e3       	ldi	r21, 0x3D	; 61
     3d2:	0e 94 73 0e 	call	0x1ce6	; 0x1ce6 <__mulsf3>
     3d6:	0e 94 b4 0d 	call	0x1b68	; 0x1b68 <__fixsfsi>
     3da:	60 93 ba 02 	sts	0x02BA, r22
     3de:	70 93 bb 02 	sts	0x02BB, r23
     3e2:	80 93 bc 02 	sts	0x02BC, r24
     3e6:	90 93 bd 02 	sts	0x02BD, r25
}
     3ea:	ff 90       	pop	r15
     3ec:	ef 90       	pop	r14
     3ee:	df 90       	pop	r13
     3f0:	cf 90       	pop	r12
     3f2:	bf 90       	pop	r11
     3f4:	af 90       	pop	r10
     3f6:	9f 90       	pop	r9
     3f8:	8f 90       	pop	r8
     3fa:	08 95       	ret

000003fc <read_pressure>:
    _temperature |= read_data(0);
    end_transmission();
    return (long) _temperature;
}

long read_pressure() {
     3fc:	1f 93       	push	r17
     3fe:	cf 93       	push	r28
     400:	df 93       	push	r29
    long UP;
    uint8_t msb, lsb, xlsb;
    
    start_transmission();
     402:	0e 94 19 05 	call	0xa32	; 0xa32 <start_transmission>
    send_addr(bmp180_write_addr);
     406:	8e ee       	ldi	r24, 0xEE	; 238
     408:	0e 94 49 05 	call	0xa92	; 0xa92 <send_addr>
    send_data(control_reg_addr);
     40c:	84 ef       	ldi	r24, 0xF4	; 244
     40e:	0e 94 5f 05 	call	0xabe	; 0xabe <send_data>
    
    switch (bmp_180.mode) {
     412:	80 91 b0 02 	lds	r24, 0x02B0
     416:	90 91 b1 02 	lds	r25, 0x02B1
     41a:	82 30       	cpi	r24, 0x02	; 2
     41c:	91 05       	cpc	r25, r1
     41e:	c9 f0       	breq	.+50     	; 0x452 <read_pressure+0x56>
     420:	83 30       	cpi	r24, 0x03	; 3
     422:	91 05       	cpc	r25, r1
     424:	01 f1       	breq	.+64     	; 0x466 <read_pressure+0x6a>
     426:	01 97       	sbiw	r24, 0x01	; 1
     428:	51 f0       	breq	.+20     	; 0x43e <read_pressure+0x42>
        default:
        case bmp180_mode_0:
            send_data(pressure_0_sel);
     42a:	84 e3       	ldi	r24, 0x34	; 52
     42c:	0e 94 5f 05 	call	0xabe	; 0xabe <send_data>
            end_transmission();
     430:	0e 94 26 05 	call	0xa4c	; 0xa4c <end_transmission>
     434:	87 e2       	ldi	r24, 0x27	; 39
     436:	93 e2       	ldi	r25, 0x23	; 35
     438:	01 97       	sbiw	r24, 0x01	; 1
     43a:	f1 f7       	brne	.-4      	; 0x438 <read_pressure+0x3c>
     43c:	1d c0       	rjmp	.+58     	; 0x478 <read_pressure+0x7c>
            _delay_ms(wait_pressure_mode_0);
            break;
        case bmp180_mode_1:
            send_data(pressure_1_sel);
     43e:	84 e7       	ldi	r24, 0x74	; 116
     440:	0e 94 5f 05 	call	0xabe	; 0xabe <send_data>
            end_transmission();
     444:	0e 94 26 05 	call	0xa4c	; 0xa4c <end_transmission>
     448:	87 e9       	ldi	r24, 0x97	; 151
     44a:	9a e3       	ldi	r25, 0x3A	; 58
     44c:	01 97       	sbiw	r24, 0x01	; 1
     44e:	f1 f7       	brne	.-4      	; 0x44c <read_pressure+0x50>
     450:	13 c0       	rjmp	.+38     	; 0x478 <read_pressure+0x7c>
            _delay_ms(wait_pressure_mode_1);
            break;
        case bmp180_mode_2:
            send_data(pressure_2_sel);
     452:	84 eb       	ldi	r24, 0xB4	; 180
     454:	0e 94 5f 05 	call	0xabe	; 0xabe <send_data>
            end_transmission();
     458:	0e 94 26 05 	call	0xa4c	; 0xa4c <end_transmission>
     45c:	87 e7       	ldi	r24, 0x77	; 119
     45e:	99 e6       	ldi	r25, 0x69	; 105
     460:	01 97       	sbiw	r24, 0x01	; 1
     462:	f1 f7       	brne	.-4      	; 0x460 <read_pressure+0x64>
     464:	09 c0       	rjmp	.+18     	; 0x478 <read_pressure+0x7c>
            _delay_ms(wait_pressure_mode_2);
            break;
        case bmp180_mode_3:
            send_data(pressure_3_sel);
     466:	84 ef       	ldi	r24, 0xF4	; 244
     468:	0e 94 5f 05 	call	0xabe	; 0xabe <send_data>
            end_transmission();
     46c:	0e 94 26 05 	call	0xa4c	; 0xa4c <end_transmission>
     470:	87 e3       	ldi	r24, 0x37	; 55
     472:	97 ec       	ldi	r25, 0xC7	; 199
     474:	01 97       	sbiw	r24, 0x01	; 1
     476:	f1 f7       	brne	.-4      	; 0x474 <read_pressure+0x78>
     478:	00 c0       	rjmp	.+0      	; 0x47a <read_pressure+0x7e>
     47a:	00 00       	nop
     47c:	8f ec       	ldi	r24, 0xCF	; 207
     47e:	97 e0       	ldi	r25, 0x07	; 7
     480:	01 97       	sbiw	r24, 0x01	; 1
     482:	f1 f7       	brne	.-4      	; 0x480 <read_pressure+0x84>
     484:	00 c0       	rjmp	.+0      	; 0x486 <read_pressure+0x8a>
     486:	00 00       	nop
            _delay_ms(wait_pressure_mode_3);
            break;
    }
    
    _delay_ms(1);
    start_transmission();
     488:	0e 94 19 05 	call	0xa32	; 0xa32 <start_transmission>
    send_addr(bmp180_write_addr);
     48c:	8e ee       	ldi	r24, 0xEE	; 238
     48e:	0e 94 49 05 	call	0xa92	; 0xa92 <send_addr>
    send_data(out_msb);
     492:	86 ef       	ldi	r24, 0xF6	; 246
     494:	0e 94 5f 05 	call	0xabe	; 0xabe <send_data>
    send_data(out_lsb);
     498:	87 ef       	ldi	r24, 0xF7	; 247
     49a:	0e 94 5f 05 	call	0xabe	; 0xabe <send_data>
    restart();
     49e:	0e 94 38 05 	call	0xa70	; 0xa70 <restart>
    send_addr(bmp180_read_addr);
     4a2:	8f ee       	ldi	r24, 0xEF	; 239
     4a4:	0e 94 49 05 	call	0xa92	; 0xa92 <send_addr>
    msb = read_data(1);
     4a8:	81 e0       	ldi	r24, 0x01	; 1
     4aa:	90 e0       	ldi	r25, 0x00	; 0
     4ac:	0e 94 2a 05 	call	0xa54	; 0xa54 <read_data>
     4b0:	c8 2f       	mov	r28, r24
    lsb = read_data(0);
     4b2:	80 e0       	ldi	r24, 0x00	; 0
     4b4:	90 e0       	ldi	r25, 0x00	; 0
     4b6:	0e 94 2a 05 	call	0xa54	; 0xa54 <read_data>
     4ba:	18 2f       	mov	r17, r24
    end_transmission();
     4bc:	0e 94 26 05 	call	0xa4c	; 0xa4c <end_transmission>
     4c0:	8f ec       	ldi	r24, 0xCF	; 207
     4c2:	97 e0       	ldi	r25, 0x07	; 7
     4c4:	01 97       	sbiw	r24, 0x01	; 1
     4c6:	f1 f7       	brne	.-4      	; 0x4c4 <read_pressure+0xc8>
     4c8:	00 c0       	rjmp	.+0      	; 0x4ca <read_pressure+0xce>
     4ca:	00 00       	nop
    _delay_ms(1);
    start_transmission();
     4cc:	0e 94 19 05 	call	0xa32	; 0xa32 <start_transmission>
    send_addr(bmp180_write_addr);
     4d0:	8e ee       	ldi	r24, 0xEE	; 238
     4d2:	0e 94 49 05 	call	0xa92	; 0xa92 <send_addr>
    send_data(out_xlsb);
     4d6:	88 ef       	ldi	r24, 0xF8	; 248
     4d8:	0e 94 5f 05 	call	0xabe	; 0xabe <send_data>
    restart();
     4dc:	0e 94 38 05 	call	0xa70	; 0xa70 <restart>
    send_addr(bmp180_read_addr);
     4e0:	8f ee       	ldi	r24, 0xEF	; 239
     4e2:	0e 94 49 05 	call	0xa92	; 0xa92 <send_addr>
    xlsb = read_data(0);
     4e6:	80 e0       	ldi	r24, 0x00	; 0
     4e8:	90 e0       	ldi	r25, 0x00	; 0
     4ea:	0e 94 2a 05 	call	0xa54	; 0xa54 <read_data>
     4ee:	d8 2f       	mov	r29, r24
    end_transmission();
     4f0:	0e 94 26 05 	call	0xa4c	; 0xa4c <end_transmission>
    
    UP = ((unsigned long) msb << 16 | (unsigned long) lsb << 8 | (unsigned long) xlsb) >> (8 - bmp_180.mode);
     4f4:	81 2f       	mov	r24, r17
     4f6:	90 e0       	ldi	r25, 0x00	; 0
     4f8:	a0 e0       	ldi	r26, 0x00	; 0
     4fa:	b0 e0       	ldi	r27, 0x00	; 0
     4fc:	66 27       	eor	r22, r22
     4fe:	78 2f       	mov	r23, r24
     500:	89 2f       	mov	r24, r25
     502:	9a 2f       	mov	r25, r26
     504:	8c 2b       	or	r24, r28
     506:	6d 2b       	or	r22, r29
     508:	28 e0       	ldi	r18, 0x08	; 8
     50a:	30 e0       	ldi	r19, 0x00	; 0
     50c:	40 91 b0 02 	lds	r20, 0x02B0
     510:	50 91 b1 02 	lds	r21, 0x02B1
     514:	24 1b       	sub	r18, r20
     516:	35 0b       	sbc	r19, r21
     518:	04 c0       	rjmp	.+8      	; 0x522 <read_pressure+0x126>
     51a:	96 95       	lsr	r25
     51c:	87 95       	ror	r24
     51e:	77 95       	ror	r23
     520:	67 95       	ror	r22
     522:	2a 95       	dec	r18
     524:	d2 f7       	brpl	.-12     	; 0x51a <read_pressure+0x11e>
    return (long) UP;
}
     526:	df 91       	pop	r29
     528:	cf 91       	pop	r28
     52a:	1f 91       	pop	r17
     52c:	08 95       	ret

0000052e <calculate_pressure>:
    B5 = X1 + X2;
    bmp_180.calib_coeffs.B5 = B5;
    bmp_180.temperature = (B5 + 8) / pow(2, 4);
}

void calculate_pressure() {
     52e:	3f 92       	push	r3
     530:	4f 92       	push	r4
     532:	5f 92       	push	r5
     534:	6f 92       	push	r6
     536:	7f 92       	push	r7
     538:	8f 92       	push	r8
     53a:	9f 92       	push	r9
     53c:	af 92       	push	r10
     53e:	bf 92       	push	r11
     540:	cf 92       	push	r12
     542:	df 92       	push	r13
     544:	ef 92       	push	r14
     546:	ff 92       	push	r15
     548:	0f 93       	push	r16
     54a:	1f 93       	push	r17
     54c:	cf 93       	push	r28
     54e:	df 93       	push	r29
     550:	cd b7       	in	r28, 0x3d	; 61
     552:	de b7       	in	r29, 0x3e	; 62
     554:	28 97       	sbiw	r28, 0x08	; 8
     556:	0f b6       	in	r0, 0x3f	; 63
     558:	f8 94       	cli
     55a:	de bf       	out	0x3e, r29	; 62
     55c:	0f be       	out	0x3f, r0	; 63
     55e:	cd bf       	out	0x3d, r28	; 61
    long UP, X1, X2, X3, B3, B6, _pressure;
    unsigned long B4, B7;
    
    UP = read_pressure();
     560:	0e 94 fe 01 	call	0x3fc	; 0x3fc <read_pressure>
     564:	6d 83       	std	Y+5, r22	; 0x05
     566:	7e 83       	std	Y+6, r23	; 0x06
     568:	8f 83       	std	Y+7, r24	; 0x07
     56a:	98 87       	std	Y+8, r25	; 0x08
    B6 = bmp_180.calib_coeffs.B5 - 4000;
     56c:	80 90 d6 02 	lds	r8, 0x02D6
     570:	90 90 d7 02 	lds	r9, 0x02D7
     574:	a0 90 d8 02 	lds	r10, 0x02D8
     578:	b0 90 d9 02 	lds	r11, 0x02D9
     57c:	80 ea       	ldi	r24, 0xA0	; 160
     57e:	88 1a       	sub	r8, r24
     580:	8f e0       	ldi	r24, 0x0F	; 15
     582:	98 0a       	sbc	r9, r24
     584:	a1 08       	sbc	r10, r1
     586:	b1 08       	sbc	r11, r1
    X1 = (bmp_180.calib_coeffs.B2 * (B6 * B6 >> 12)) >> 11;
     588:	a5 01       	movw	r20, r10
     58a:	94 01       	movw	r18, r8
     58c:	c5 01       	movw	r24, r10
     58e:	b4 01       	movw	r22, r8
     590:	0e 94 3b 10 	call	0x2076	; 0x2076 <__mulsi3>
     594:	2b 01       	movw	r4, r22
     596:	3c 01       	movw	r6, r24
     598:	fc e0       	ldi	r31, 0x0C	; 12
     59a:	75 94       	asr	r7
     59c:	67 94       	ror	r6
     59e:	57 94       	ror	r5
     5a0:	47 94       	ror	r4
     5a2:	fa 95       	dec	r31
     5a4:	d1 f7       	brne	.-12     	; 0x59a <calculate_pressure+0x6c>
    X2 = bmp_180.calib_coeffs.AC2 * B6 >> 11;
    X3 = X1 + X2;
    B3 = ((((long)bmp_180.calib_coeffs.AC1 * 4 + X3) << bmp_180.mode) + 2) / 4;
     5a6:	00 91 c6 02 	lds	r16, 0x02C6
     5aa:	10 91 c7 02 	lds	r17, 0x02C7
     5ae:	30 90 b0 02 	lds	r3, 0x02B0
    X1 = bmp_180.calib_coeffs.AC3 * B6 >> 13;
     5b2:	a0 91 ca 02 	lds	r26, 0x02CA
     5b6:	b0 91 cb 02 	lds	r27, 0x02CB
     5ba:	0e 94 ab 10 	call	0x2156	; 0x2156 <__mulshisi3>
     5be:	6b 01       	movw	r12, r22
     5c0:	7c 01       	movw	r14, r24
     5c2:	ad e0       	ldi	r26, 0x0D	; 13
     5c4:	f5 94       	asr	r15
     5c6:	e7 94       	ror	r14
     5c8:	d7 94       	ror	r13
     5ca:	c7 94       	ror	r12
     5cc:	aa 95       	dec	r26
     5ce:	d1 f7       	brne	.-12     	; 0x5c4 <calculate_pressure+0x96>
    X2 = (bmp_180.calib_coeffs.B1 * (B6 * B6 >> 12)) >> 16;
     5d0:	a0 91 d2 02 	lds	r26, 0x02D2
     5d4:	b0 91 d3 02 	lds	r27, 0x02D3
     5d8:	a3 01       	movw	r20, r6
     5da:	92 01       	movw	r18, r4
     5dc:	0e 94 ab 10 	call	0x2156	; 0x2156 <__mulshisi3>
     5e0:	bb 27       	eor	r27, r27
     5e2:	97 fd       	sbrc	r25, 7
     5e4:	b0 95       	com	r27
     5e6:	ab 2f       	mov	r26, r27
    X3 = ((X1 + X2) + 2) >> 2;
     5e8:	c8 0e       	add	r12, r24
     5ea:	d9 1e       	adc	r13, r25
     5ec:	ea 1e       	adc	r14, r26
     5ee:	fb 1e       	adc	r15, r27
     5f0:	92 e0       	ldi	r25, 0x02	; 2
     5f2:	c9 0e       	add	r12, r25
     5f4:	d1 1c       	adc	r13, r1
     5f6:	e1 1c       	adc	r14, r1
     5f8:	f1 1c       	adc	r15, r1
     5fa:	82 e0       	ldi	r24, 0x02	; 2
     5fc:	f5 94       	asr	r15
     5fe:	e7 94       	ror	r14
     600:	d7 94       	ror	r13
     602:	c7 94       	ror	r12
     604:	8a 95       	dec	r24
     606:	d1 f7       	brne	.-12     	; 0x5fc <calculate_pressure+0xce>
    B4 = bmp_180.calib_coeffs.AC4 * (unsigned long) (X3 + 32768) >> 15;
     608:	a0 e8       	ldi	r26, 0x80	; 128
     60a:	da 0e       	add	r13, r26
     60c:	e1 1c       	adc	r14, r1
     60e:	f1 1c       	adc	r15, r1
     610:	a0 91 cc 02 	lds	r26, 0x02CC
     614:	b0 91 cd 02 	lds	r27, 0x02CD
     618:	a7 01       	movw	r20, r14
     61a:	96 01       	movw	r18, r12
     61c:	0e 94 a0 10 	call	0x2140	; 0x2140 <__muluhisi3>
     620:	dc 01       	movw	r26, r24
     622:	cb 01       	movw	r24, r22
     624:	2f e0       	ldi	r18, 0x0F	; 15
     626:	b6 95       	lsr	r27
     628:	a7 95       	ror	r26
     62a:	97 95       	ror	r25
     62c:	87 95       	ror	r24
     62e:	2a 95       	dec	r18
     630:	d1 f7       	brne	.-12     	; 0x626 <calculate_pressure+0xf8>
     632:	89 83       	std	Y+1, r24	; 0x01
     634:	9a 83       	std	Y+2, r25	; 0x02
     636:	ab 83       	std	Y+3, r26	; 0x03
     638:	bc 83       	std	Y+4, r27	; 0x04
    UP = read_pressure();
    B6 = bmp_180.calib_coeffs.B5 - 4000;
    X1 = (bmp_180.calib_coeffs.B2 * (B6 * B6 >> 12)) >> 11;
    X2 = bmp_180.calib_coeffs.AC2 * B6 >> 11;
    X3 = X1 + X2;
    B3 = ((((long)bmp_180.calib_coeffs.AC1 * 4 + X3) << bmp_180.mode) + 2) / 4;
     63a:	68 01       	movw	r12, r16
     63c:	ee 24       	eor	r14, r14
     63e:	d7 fc       	sbrc	r13, 7
     640:	e0 94       	com	r14
     642:	fe 2c       	mov	r15, r14
     644:	32 e0       	ldi	r19, 0x02	; 2
     646:	cc 0c       	add	r12, r12
     648:	dd 1c       	adc	r13, r13
     64a:	ee 1c       	adc	r14, r14
     64c:	ff 1c       	adc	r15, r15
     64e:	3a 95       	dec	r19
     650:	d1 f7       	brne	.-12     	; 0x646 <calculate_pressure+0x118>
    long UP, X1, X2, X3, B3, B6, _pressure;
    unsigned long B4, B7;
    
    UP = read_pressure();
    B6 = bmp_180.calib_coeffs.B5 - 4000;
    X1 = (bmp_180.calib_coeffs.B2 * (B6 * B6 >> 12)) >> 11;
     652:	a0 91 d4 02 	lds	r26, 0x02D4
     656:	b0 91 d5 02 	lds	r27, 0x02D5
     65a:	a3 01       	movw	r20, r6
     65c:	92 01       	movw	r18, r4
     65e:	0e 94 ab 10 	call	0x2156	; 0x2156 <__mulshisi3>
     662:	2b 01       	movw	r4, r22
     664:	3c 01       	movw	r6, r24
     666:	4b e0       	ldi	r20, 0x0B	; 11
     668:	75 94       	asr	r7
     66a:	67 94       	ror	r6
     66c:	57 94       	ror	r5
     66e:	47 94       	ror	r4
     670:	4a 95       	dec	r20
     672:	d1 f7       	brne	.-12     	; 0x668 <calculate_pressure+0x13a>
    X2 = bmp_180.calib_coeffs.AC2 * B6 >> 11;
     674:	a0 91 c8 02 	lds	r26, 0x02C8
     678:	b0 91 c9 02 	lds	r27, 0x02C9
     67c:	a5 01       	movw	r20, r10
     67e:	94 01       	movw	r18, r8
     680:	0e 94 ab 10 	call	0x2156	; 0x2156 <__mulshisi3>
     684:	5b e0       	ldi	r21, 0x0B	; 11
     686:	95 95       	asr	r25
     688:	87 95       	ror	r24
     68a:	77 95       	ror	r23
     68c:	67 95       	ror	r22
     68e:	5a 95       	dec	r21
     690:	d1 f7       	brne	.-12     	; 0x686 <calculate_pressure+0x158>
    X3 = X1 + X2;
     692:	46 0e       	add	r4, r22
     694:	57 1e       	adc	r5, r23
     696:	68 1e       	adc	r6, r24
     698:	79 1e       	adc	r7, r25
    B3 = ((((long)bmp_180.calib_coeffs.AC1 * 4 + X3) << bmp_180.mode) + 2) / 4;
     69a:	c4 0c       	add	r12, r4
     69c:	d5 1c       	adc	r13, r5
     69e:	e6 1c       	adc	r14, r6
     6a0:	f7 1c       	adc	r15, r7
     6a2:	03 2c       	mov	r0, r3
     6a4:	04 c0       	rjmp	.+8      	; 0x6ae <calculate_pressure+0x180>
     6a6:	cc 0c       	add	r12, r12
     6a8:	dd 1c       	adc	r13, r13
     6aa:	ee 1c       	adc	r14, r14
     6ac:	ff 1c       	adc	r15, r15
     6ae:	0a 94       	dec	r0
     6b0:	d2 f7       	brpl	.-12     	; 0x6a6 <calculate_pressure+0x178>
     6b2:	92 e0       	ldi	r25, 0x02	; 2
     6b4:	c9 0e       	add	r12, r25
     6b6:	d1 1c       	adc	r13, r1
     6b8:	e1 1c       	adc	r14, r1
     6ba:	f1 1c       	adc	r15, r1
     6bc:	c7 01       	movw	r24, r14
     6be:	b6 01       	movw	r22, r12
     6c0:	24 e0       	ldi	r18, 0x04	; 4
     6c2:	30 e0       	ldi	r19, 0x00	; 0
     6c4:	40 e0       	ldi	r20, 0x00	; 0
     6c6:	50 e0       	ldi	r21, 0x00	; 0
     6c8:	0e 94 81 10 	call	0x2102	; 0x2102 <__divmodsi4>
    X1 = bmp_180.calib_coeffs.AC3 * B6 >> 13;
    X2 = (bmp_180.calib_coeffs.B1 * (B6 * B6 >> 12)) >> 16;
    X3 = ((X1 + X2) + 2) >> 2;
    B4 = bmp_180.calib_coeffs.AC4 * (unsigned long) (X3 + 32768) >> 15;
    B7 = ((unsigned long) UP - B3) * (50000UL >> bmp_180.mode);
     6cc:	8d 81       	ldd	r24, Y+5	; 0x05
     6ce:	9e 81       	ldd	r25, Y+6	; 0x06
     6d0:	af 81       	ldd	r26, Y+7	; 0x07
     6d2:	b8 85       	ldd	r27, Y+8	; 0x08
     6d4:	82 1b       	sub	r24, r18
     6d6:	93 0b       	sbc	r25, r19
     6d8:	a4 0b       	sbc	r26, r20
     6da:	b5 0b       	sbc	r27, r21
     6dc:	8d 83       	std	Y+5, r24	; 0x05
     6de:	9e 83       	std	Y+6, r25	; 0x06
     6e0:	af 83       	std	Y+7, r26	; 0x07
     6e2:	b8 87       	std	Y+8, r27	; 0x08
     6e4:	60 e5       	ldi	r22, 0x50	; 80
     6e6:	73 ec       	ldi	r23, 0xC3	; 195
     6e8:	80 e0       	ldi	r24, 0x00	; 0
     6ea:	90 e0       	ldi	r25, 0x00	; 0
     6ec:	04 c0       	rjmp	.+8      	; 0x6f6 <calculate_pressure+0x1c8>
     6ee:	96 95       	lsr	r25
     6f0:	87 95       	ror	r24
     6f2:	77 95       	ror	r23
     6f4:	67 95       	ror	r22
     6f6:	3a 94       	dec	r3
     6f8:	d2 f7       	brpl	.-12     	; 0x6ee <calculate_pressure+0x1c0>
     6fa:	2d 81       	ldd	r18, Y+5	; 0x05
     6fc:	3e 81       	ldd	r19, Y+6	; 0x06
     6fe:	4f 81       	ldd	r20, Y+7	; 0x07
     700:	58 85       	ldd	r21, Y+8	; 0x08
     702:	0e 94 3b 10 	call	0x2076	; 0x2076 <__mulsi3>
    if (B7 < 0x80000000UL)
     706:	97 fd       	sbrc	r25, 7
     708:	0d c0       	rjmp	.+26     	; 0x724 <calculate_pressure+0x1f6>
        _pressure = (B7 * 2) / B4;
     70a:	66 0f       	add	r22, r22
     70c:	77 1f       	adc	r23, r23
     70e:	88 1f       	adc	r24, r24
     710:	99 1f       	adc	r25, r25
     712:	29 81       	ldd	r18, Y+1	; 0x01
     714:	3a 81       	ldd	r19, Y+2	; 0x02
     716:	4b 81       	ldd	r20, Y+3	; 0x03
     718:	5c 81       	ldd	r21, Y+4	; 0x04
     71a:	0e 94 5f 10 	call	0x20be	; 0x20be <__udivmodsi4>
     71e:	49 01       	movw	r8, r18
     720:	5a 01       	movw	r10, r20
     722:	0c c0       	rjmp	.+24     	; 0x73c <calculate_pressure+0x20e>
    else
        _pressure = (B7 / B4) * 2;
     724:	29 81       	ldd	r18, Y+1	; 0x01
     726:	3a 81       	ldd	r19, Y+2	; 0x02
     728:	4b 81       	ldd	r20, Y+3	; 0x03
     72a:	5c 81       	ldd	r21, Y+4	; 0x04
     72c:	0e 94 5f 10 	call	0x20be	; 0x20be <__udivmodsi4>
     730:	49 01       	movw	r8, r18
     732:	5a 01       	movw	r10, r20
     734:	88 0c       	add	r8, r8
     736:	99 1c       	adc	r9, r9
     738:	aa 1c       	adc	r10, r10
     73a:	bb 1c       	adc	r11, r11
    X1 = (_pressure >> 8) * (_pressure >> 8);
     73c:	99 27       	eor	r25, r25
     73e:	b7 fc       	sbrc	r11, 7
     740:	9a 95       	dec	r25
     742:	8b 2d       	mov	r24, r11
     744:	7a 2d       	mov	r23, r10
     746:	69 2d       	mov	r22, r9
     748:	9b 01       	movw	r18, r22
     74a:	ac 01       	movw	r20, r24
     74c:	0e 94 3b 10 	call	0x2076	; 0x2076 <__mulsi3>
     750:	9b 01       	movw	r18, r22
     752:	ac 01       	movw	r20, r24
    X1 = (X1 * 3038) >> 16;
     754:	ae ed       	ldi	r26, 0xDE	; 222
     756:	bb e0       	ldi	r27, 0x0B	; 11
     758:	0e 94 a0 10 	call	0x2140	; 0x2140 <__muluhisi3>
     75c:	6c 01       	movw	r12, r24
     75e:	ff 24       	eor	r15, r15
     760:	d7 fc       	sbrc	r13, 7
     762:	f0 94       	com	r15
     764:	ef 2c       	mov	r14, r15
    X2 = (-7357 * _pressure) >> 16;
     766:	a3 e4       	ldi	r26, 0x43	; 67
     768:	b3 ee       	ldi	r27, 0xE3	; 227
     76a:	a5 01       	movw	r20, r10
     76c:	94 01       	movw	r18, r8
     76e:	0e 94 ae 10 	call	0x215c	; 0x215c <__mulohisi3>
     772:	bb 27       	eor	r27, r27
     774:	97 fd       	sbrc	r25, 7
     776:	b0 95       	com	r27
     778:	ab 2f       	mov	r26, r27
    bmp_180.pressure = _pressure + ((X1 + X2 + 3791) >> 4);
     77a:	c8 0e       	add	r12, r24
     77c:	d9 1e       	adc	r13, r25
     77e:	ea 1e       	adc	r14, r26
     780:	fb 1e       	adc	r15, r27
     782:	9f ec       	ldi	r25, 0xCF	; 207
     784:	c9 0e       	add	r12, r25
     786:	9e e0       	ldi	r25, 0x0E	; 14
     788:	d9 1e       	adc	r13, r25
     78a:	e1 1c       	adc	r14, r1
     78c:	f1 1c       	adc	r15, r1
     78e:	64 e0       	ldi	r22, 0x04	; 4
     790:	f5 94       	asr	r15
     792:	e7 94       	ror	r14
     794:	d7 94       	ror	r13
     796:	c7 94       	ror	r12
     798:	6a 95       	dec	r22
     79a:	d1 f7       	brne	.-12     	; 0x790 <calculate_pressure+0x262>
     79c:	c8 0c       	add	r12, r8
     79e:	d9 1c       	adc	r13, r9
     7a0:	ea 1c       	adc	r14, r10
     7a2:	fb 1c       	adc	r15, r11
     7a4:	c0 92 be 02 	sts	0x02BE, r12
     7a8:	d0 92 bf 02 	sts	0x02BF, r13
     7ac:	e0 92 c0 02 	sts	0x02C0, r14
     7b0:	f0 92 c1 02 	sts	0x02C1, r15
}
     7b4:	28 96       	adiw	r28, 0x08	; 8
     7b6:	0f b6       	in	r0, 0x3f	; 63
     7b8:	f8 94       	cli
     7ba:	de bf       	out	0x3e, r29	; 62
     7bc:	0f be       	out	0x3f, r0	; 63
     7be:	cd bf       	out	0x3d, r28	; 61
     7c0:	df 91       	pop	r29
     7c2:	cf 91       	pop	r28
     7c4:	1f 91       	pop	r17
     7c6:	0f 91       	pop	r16
     7c8:	ff 90       	pop	r15
     7ca:	ef 90       	pop	r14
     7cc:	df 90       	pop	r13
     7ce:	cf 90       	pop	r12
     7d0:	bf 90       	pop	r11
     7d2:	af 90       	pop	r10
     7d4:	9f 90       	pop	r9
     7d6:	8f 90       	pop	r8
     7d8:	7f 90       	pop	r7
     7da:	6f 90       	pop	r6
     7dc:	5f 90       	pop	r5
     7de:	4f 90       	pop	r4
     7e0:	3f 90       	pop	r3
     7e2:	08 95       	ret

000007e4 <read_coeffs>:
    
    UP = ((unsigned long) msb << 16 | (unsigned long) lsb << 8 | (unsigned long) xlsb) >> (8 - bmp_180.mode);
    return (long) UP;
}

void read_coeffs() {
     7e4:	df 92       	push	r13
     7e6:	ef 92       	push	r14
     7e8:	ff 92       	push	r15
     7ea:	0f 93       	push	r16
     7ec:	1f 93       	push	r17
     7ee:	cf 93       	push	r28
     7f0:	df 93       	push	r29
     7f2:	cd b7       	in	r28, 0x3d	; 61
     7f4:	de b7       	in	r29, 0x3e	; 62
     7f6:	66 97       	sbiw	r28, 0x16	; 22
     7f8:	0f b6       	in	r0, 0x3f	; 63
     7fa:	f8 94       	cli
     7fc:	de bf       	out	0x3e, r29	; 62
     7fe:	0f be       	out	0x3f, r0	; 63
     800:	cd bf       	out	0x3d, r28	; 61
     802:	04 e1       	ldi	r16, 0x14	; 20
     804:	11 e0       	ldi	r17, 0x01	; 1
     806:	ce 01       	movw	r24, r28
     808:	01 96       	adiw	r24, 0x01	; 1
     80a:	7c 01       	movw	r14, r24
    
    uint16_t coeffs[11];
    
    for (short i = 0; i < 11; i++) {
        start_transmission();
     80c:	0e 94 19 05 	call	0xa32	; 0xa32 <start_transmission>
        send_addr(bmp180_write_addr);
     810:	8e ee       	ldi	r24, 0xEE	; 238
     812:	0e 94 49 05 	call	0xa92	; 0xa92 <send_addr>
        send_data((bmp180_coeff_addr[i] & 0xFF00) >> 8);
     816:	f8 01       	movw	r30, r16
     818:	d0 80       	ld	r13, Z
     81a:	81 81       	ldd	r24, Z+1	; 0x01
     81c:	0e 5f       	subi	r16, 0xFE	; 254
     81e:	1f 4f       	sbci	r17, 0xFF	; 255
     820:	0e 94 5f 05 	call	0xabe	; 0xabe <send_data>
        send_data(bmp180_coeff_addr[i] & 0x00FF);
     824:	8d 2d       	mov	r24, r13
     826:	0e 94 5f 05 	call	0xabe	; 0xabe <send_data>
        restart();
     82a:	0e 94 38 05 	call	0xa70	; 0xa70 <restart>
        send_addr(bmp180_read_addr);
     82e:	8f ee       	ldi	r24, 0xEF	; 239
     830:	0e 94 49 05 	call	0xa92	; 0xa92 <send_addr>
        coeffs[i] = read_data(1) << 8;
     834:	81 e0       	ldi	r24, 0x01	; 1
     836:	90 e0       	ldi	r25, 0x00	; 0
     838:	0e 94 2a 05 	call	0xa54	; 0xa54 <read_data>
     83c:	d8 2e       	mov	r13, r24
        coeffs[i] |= read_data(0);
     83e:	80 e0       	ldi	r24, 0x00	; 0
     840:	90 e0       	ldi	r25, 0x00	; 0
     842:	0e 94 2a 05 	call	0xa54	; 0xa54 <read_data>
        send_addr(bmp180_write_addr);
        send_data((bmp180_coeff_addr[i] & 0xFF00) >> 8);
        send_data(bmp180_coeff_addr[i] & 0x00FF);
        restart();
        send_addr(bmp180_read_addr);
        coeffs[i] = read_data(1) << 8;
     846:	2d 2d       	mov	r18, r13
     848:	30 e0       	ldi	r19, 0x00	; 0
     84a:	32 2f       	mov	r19, r18
     84c:	22 27       	eor	r18, r18
        coeffs[i] |= read_data(0);
     84e:	28 2b       	or	r18, r24
     850:	f7 01       	movw	r30, r14
     852:	21 93       	st	Z+, r18
     854:	31 93       	st	Z+, r19
     856:	7f 01       	movw	r14, r30
        end_transmission();
     858:	0e 94 26 05 	call	0xa4c	; 0xa4c <end_transmission>
     85c:	8f ec       	ldi	r24, 0xCF	; 207
     85e:	97 e0       	ldi	r25, 0x07	; 7
     860:	01 97       	sbiw	r24, 0x01	; 1
     862:	f1 f7       	brne	.-4      	; 0x860 <read_coeffs+0x7c>
     864:	00 c0       	rjmp	.+0      	; 0x866 <read_coeffs+0x82>
     866:	00 00       	nop

void read_coeffs() {
    
    uint16_t coeffs[11];
    
    for (short i = 0; i < 11; i++) {
     868:	91 e0       	ldi	r25, 0x01	; 1
     86a:	0a 32       	cpi	r16, 0x2A	; 42
     86c:	19 07       	cpc	r17, r25
     86e:	71 f6       	brne	.-100    	; 0x80c <read_coeffs+0x28>
        coeffs[i] |= read_data(0);
        end_transmission();
        _delay_ms(1);
    }
    
    bmp_180.calib_coeffs.AC1 = (short) coeffs[0];
     870:	89 81       	ldd	r24, Y+1	; 0x01
     872:	9a 81       	ldd	r25, Y+2	; 0x02
     874:	90 93 c7 02 	sts	0x02C7, r25
     878:	80 93 c6 02 	sts	0x02C6, r24
    bmp_180.calib_coeffs.AC2 = (short) coeffs[1];
     87c:	8b 81       	ldd	r24, Y+3	; 0x03
     87e:	9c 81       	ldd	r25, Y+4	; 0x04
     880:	90 93 c9 02 	sts	0x02C9, r25
     884:	80 93 c8 02 	sts	0x02C8, r24
    bmp_180.calib_coeffs.AC3 = (short) coeffs[2];
     888:	8d 81       	ldd	r24, Y+5	; 0x05
     88a:	9e 81       	ldd	r25, Y+6	; 0x06
     88c:	90 93 cb 02 	sts	0x02CB, r25
     890:	80 93 ca 02 	sts	0x02CA, r24
    bmp_180.calib_coeffs.AC4 = (uint16_t) coeffs[3];
     894:	8f 81       	ldd	r24, Y+7	; 0x07
     896:	98 85       	ldd	r25, Y+8	; 0x08
     898:	90 93 cd 02 	sts	0x02CD, r25
     89c:	80 93 cc 02 	sts	0x02CC, r24
    bmp_180.calib_coeffs.AC5 = (uint16_t) coeffs[4];
     8a0:	89 85       	ldd	r24, Y+9	; 0x09
     8a2:	9a 85       	ldd	r25, Y+10	; 0x0a
     8a4:	90 93 cf 02 	sts	0x02CF, r25
     8a8:	80 93 ce 02 	sts	0x02CE, r24
    bmp_180.calib_coeffs.AC6 = (uint16_t) coeffs[5];
     8ac:	8b 85       	ldd	r24, Y+11	; 0x0b
     8ae:	9c 85       	ldd	r25, Y+12	; 0x0c
     8b0:	90 93 d1 02 	sts	0x02D1, r25
     8b4:	80 93 d0 02 	sts	0x02D0, r24
    bmp_180.calib_coeffs.B1 = (short) coeffs[6];
     8b8:	8d 85       	ldd	r24, Y+13	; 0x0d
     8ba:	9e 85       	ldd	r25, Y+14	; 0x0e
     8bc:	90 93 d3 02 	sts	0x02D3, r25
     8c0:	80 93 d2 02 	sts	0x02D2, r24
    bmp_180.calib_coeffs.B2 = (short) coeffs[7];
     8c4:	8f 85       	ldd	r24, Y+15	; 0x0f
     8c6:	98 89       	ldd	r25, Y+16	; 0x10
     8c8:	90 93 d5 02 	sts	0x02D5, r25
     8cc:	80 93 d4 02 	sts	0x02D4, r24
    bmp_180.calib_coeffs.MB = (short) coeffs[8];
     8d0:	89 89       	ldd	r24, Y+17	; 0x11
     8d2:	9a 89       	ldd	r25, Y+18	; 0x12
     8d4:	90 93 db 02 	sts	0x02DB, r25
     8d8:	80 93 da 02 	sts	0x02DA, r24
    bmp_180.calib_coeffs.MC = (short) coeffs[9];
     8dc:	8b 89       	ldd	r24, Y+19	; 0x13
     8de:	9c 89       	ldd	r25, Y+20	; 0x14
     8e0:	90 93 dd 02 	sts	0x02DD, r25
     8e4:	80 93 dc 02 	sts	0x02DC, r24
    bmp_180.calib_coeffs.MD = (short) coeffs[10];
     8e8:	8d 89       	ldd	r24, Y+21	; 0x15
     8ea:	9e 89       	ldd	r25, Y+22	; 0x16
     8ec:	90 93 df 02 	sts	0x02DF, r25
     8f0:	80 93 de 02 	sts	0x02DE, r24
    
}
     8f4:	66 96       	adiw	r28, 0x16	; 22
     8f6:	0f b6       	in	r0, 0x3f	; 63
     8f8:	f8 94       	cli
     8fa:	de bf       	out	0x3e, r29	; 62
     8fc:	0f be       	out	0x3f, r0	; 63
     8fe:	cd bf       	out	0x3d, r28	; 61
     900:	df 91       	pop	r29
     902:	cf 91       	pop	r28
     904:	1f 91       	pop	r17
     906:	0f 91       	pop	r16
     908:	ff 90       	pop	r15
     90a:	ef 90       	pop	r14
     90c:	df 90       	pop	r13
     90e:	08 95       	ret

00000910 <init_sensor>:
    0xAAAB, 0xACAD, 0xAEAF, 0xB0B1, 0xB2B3,
    0xB4B5, 0xB6B7, 0xB8B9, 0xBABB, 0xBCBD,
    0xBEBF
};

void init_sensor(short mode) {
     910:	cf 93       	push	r28
     912:	df 93       	push	r29
     914:	ec 01       	movw	r28, r24
    init_twi();
     916:	0e 94 13 05 	call	0xa26	; 0xa26 <init_twi>
    read_coeffs();
     91a:	0e 94 f2 03 	call	0x7e4	; 0x7e4 <read_coeffs>
    bmp_180.mode = mode;
     91e:	d0 93 b1 02 	sts	0x02B1, r29
     922:	c0 93 b0 02 	sts	0x02B0, r28
}
     926:	df 91       	pop	r29
     928:	cf 91       	pop	r28
     92a:	08 95       	ret

0000092c <calculate>:
    bmp_180.calib_coeffs.MD = (short) coeffs[10];
    
}

void calculate() {
    calculate_temperature();
     92c:	0e 94 84 01 	call	0x308	; 0x308 <calculate_temperature>
    calculate_pressure();
     930:	0e 94 97 02 	call	0x52e	; 0x52e <calculate_pressure>
    calculate_altitude();
     934:	0c 94 1b 01 	jmp	0x236	; 0x236 <calculate_altitude>

00000938 <get_temperature>:
}

float get_temperature() {
    return (float) bmp_180.temperature / 10;
     938:	60 91 ba 02 	lds	r22, 0x02BA
     93c:	70 91 bb 02 	lds	r23, 0x02BB
     940:	80 91 bc 02 	lds	r24, 0x02BC
     944:	90 91 bd 02 	lds	r25, 0x02BD
     948:	0e 94 e7 0d 	call	0x1bce	; 0x1bce <__floatsisf>
     94c:	20 e0       	ldi	r18, 0x00	; 0
     94e:	30 e0       	ldi	r19, 0x00	; 0
     950:	40 e2       	ldi	r20, 0x20	; 32
     952:	51 e4       	ldi	r21, 0x41	; 65
     954:	0e 94 4c 0d 	call	0x1a98	; 0x1a98 <__divsf3>
}
     958:	08 95       	ret

0000095a <init_wifi_module>:
#include "uart.h"


short init_wifi_module(void) {
    
    uart_init(9600);
     95a:	80 e8       	ldi	r24, 0x80	; 128
     95c:	95 e2       	ldi	r25, 0x25	; 37
     95e:	0e 94 ac 08 	call	0x1158	; 0x1158 <uart_init>
     962:	2f ef       	ldi	r18, 0xFF	; 255
     964:	83 e2       	ldi	r24, 0x23	; 35
     966:	94 ef       	ldi	r25, 0xF4	; 244
     968:	21 50       	subi	r18, 0x01	; 1
     96a:	80 40       	sbci	r24, 0x00	; 0
     96c:	90 40       	sbci	r25, 0x00	; 0
     96e:	e1 f7       	brne	.-8      	; 0x968 <init_wifi_module+0xe>
     970:	00 c0       	rjmp	.+0      	; 0x972 <init_wifi_module+0x18>
     972:	00 00       	nop
    _delay_ms(10000);
    
    
    printf(TEST_MODULE);
     974:	8b e2       	ldi	r24, 0x2B	; 43
     976:	91 e0       	ldi	r25, 0x01	; 1
     978:	0e 94 89 13 	call	0x2712	; 0x2712 <puts>
    uart_getall("OK");
     97c:	8f e2       	ldi	r24, 0x2F	; 47
     97e:	91 e0       	ldi	r25, 0x01	; 1
     980:	0e 94 f3 08 	call	0x11e6	; 0x11e6 <uart_getall>
    
    return 1;
}
     984:	81 e0       	ldi	r24, 0x01	; 1
     986:	90 e0       	ldi	r25, 0x00	; 0
     988:	08 95       	ret

0000098a <connect_wifi>:

short connect_wifi(unsigned char *ssid_name, unsigned char *ssid_password) {
     98a:	0f 93       	push	r16
     98c:	1f 93       	push	r17
     98e:	cf 93       	push	r28
     990:	df 93       	push	r29
     992:	00 d0       	rcall	.+0      	; 0x994 <connect_wifi+0xa>
     994:	cd b7       	in	r28, 0x3d	; 61
     996:	de b7       	in	r29, 0x3e	; 62
     998:	18 2f       	mov	r17, r24
     99a:	09 2f       	mov	r16, r25
    
    
    printf(CW_MODE, 1);
     99c:	1f 92       	push	r1
     99e:	81 e0       	ldi	r24, 0x01	; 1
     9a0:	8f 93       	push	r24
     9a2:	22 e3       	ldi	r18, 0x32	; 50
     9a4:	31 e0       	ldi	r19, 0x01	; 1
     9a6:	3f 93       	push	r19
     9a8:	2f 93       	push	r18
     9aa:	69 83       	std	Y+1, r22	; 0x01
     9ac:	7a 83       	std	Y+2, r23	; 0x02
     9ae:	0e 94 75 13 	call	0x26ea	; 0x26ea <printf>
    uart_getall("OK");
     9b2:	8f e2       	ldi	r24, 0x2F	; 47
     9b4:	91 e0       	ldi	r25, 0x01	; 1
     9b6:	0e 94 f3 08 	call	0x11e6	; 0x11e6 <uart_getall>
    
    
    printf(CIP_MODE, 0);
     9ba:	1f 92       	push	r1
     9bc:	1f 92       	push	r1
     9be:	21 e4       	ldi	r18, 0x41	; 65
     9c0:	31 e0       	ldi	r19, 0x01	; 1
     9c2:	3f 93       	push	r19
     9c4:	2f 93       	push	r18
     9c6:	0e 94 75 13 	call	0x26ea	; 0x26ea <printf>
    uart_getall("OK");
     9ca:	8f e2       	ldi	r24, 0x2F	; 47
     9cc:	91 e0       	ldi	r25, 0x01	; 1
     9ce:	0e 94 f3 08 	call	0x11e6	; 0x11e6 <uart_getall>
    
    
    printf(CIP_MUX, 0);
     9d2:	1f 92       	push	r1
     9d4:	1f 92       	push	r1
     9d6:	21 e5       	ldi	r18, 0x51	; 81
     9d8:	31 e0       	ldi	r19, 0x01	; 1
     9da:	3f 93       	push	r19
     9dc:	2f 93       	push	r18
     9de:	0e 94 75 13 	call	0x26ea	; 0x26ea <printf>
    uart_getall("OK");
     9e2:	8f e2       	ldi	r24, 0x2F	; 47
     9e4:	91 e0       	ldi	r25, 0x01	; 1
     9e6:	0e 94 f3 08 	call	0x11e6	; 0x11e6 <uart_getall>
    
    
    printf(WIFI_CONNECT, ssid_name, ssid_password);
     9ea:	7a 81       	ldd	r23, Y+2	; 0x02
     9ec:	7f 93       	push	r23
     9ee:	69 81       	ldd	r22, Y+1	; 0x01
     9f0:	6f 93       	push	r22
     9f2:	0f 93       	push	r16
     9f4:	1f 93       	push	r17
     9f6:	80 e6       	ldi	r24, 0x60	; 96
     9f8:	91 e0       	ldi	r25, 0x01	; 1
     9fa:	9f 93       	push	r25
     9fc:	8f 93       	push	r24
     9fe:	0e 94 75 13 	call	0x26ea	; 0x26ea <printf>
    uart_getall("OK");
     a02:	8f e2       	ldi	r24, 0x2F	; 47
     a04:	91 e0       	ldi	r25, 0x01	; 1
     a06:	0e 94 f3 08 	call	0x11e6	; 0x11e6 <uart_getall>
    
    
    return 1;
     a0a:	0f b6       	in	r0, 0x3f	; 63
     a0c:	f8 94       	cli
     a0e:	de bf       	out	0x3e, r29	; 62
     a10:	0f be       	out	0x3f, r0	; 63
     a12:	cd bf       	out	0x3d, r28	; 61
}
     a14:	81 e0       	ldi	r24, 0x01	; 1
     a16:	90 e0       	ldi	r25, 0x00	; 0
     a18:	0f 90       	pop	r0
     a1a:	0f 90       	pop	r0
     a1c:	df 91       	pop	r29
     a1e:	cf 91       	pop	r28
     a20:	1f 91       	pop	r17
     a22:	0f 91       	pop	r16
     a24:	08 95       	ret

00000a26 <init_twi>:

void init_twi() {
    
    // SCL Freq = CPU_CLK / (16 + 2 x (TWBR).(PrescalerValue))
    // TWI clock frequency set 100.00kHz to work @8MHz Cpu Frequency
    TWSR = 0x00; // Prescaler 1
     a26:	10 92 b9 00 	sts	0x00B9, r1
    TWBR = 0x32; // Decimal 32
     a2a:	82 e3       	ldi	r24, 0x32	; 50
     a2c:	80 93 b8 00 	sts	0x00B8, r24
     a30:	08 95       	ret

00000a32 <start_transmission>:
}

void start_transmission() {
    TWCR = (1<<TWINT) | (1<<TWSTA) | (1<<TWEN);
     a32:	84 ea       	ldi	r24, 0xA4	; 164
     a34:	80 93 bc 00 	sts	0x00BC, r24
    
    if (i2cdebug) {
        printf("[Info]\tStart condition send & waiting for ack... \n");
    }
    
    while(!(TWCR & (1<<TWINT)));
     a38:	80 91 bc 00 	lds	r24, 0x00BC
     a3c:	87 ff       	sbrs	r24, 7
     a3e:	fc cf       	rjmp	.-8      	; 0xa38 <start_transmission+0x6>
    while((TWSR & 0xF8) != TWI_START_SENT);
     a40:	80 91 b9 00 	lds	r24, 0x00B9
     a44:	88 7f       	andi	r24, 0xF8	; 248
     a46:	88 30       	cpi	r24, 0x08	; 8
     a48:	d9 f7       	brne	.-10     	; 0xa40 <start_transmission+0xe>
    
    if (i2cdebug) {
        printf("[Success]\tAck has been received.\n");
    }
    
}
     a4a:	08 95       	ret

00000a4c <end_transmission>:

void end_transmission() {
    TWCR = (1<<TWINT)|(1<<TWEN)|(1<<TWSTO);
     a4c:	84 e9       	ldi	r24, 0x94	; 148
     a4e:	80 93 bc 00 	sts	0x00BC, r24
     a52:	08 95       	ret

00000a54 <read_data>:
uint8_t read_data(short ack) {
    if (i2cdebug) {
        printf("[Info]\tReading data...\n");
    }
    
    if (!ack)
     a54:	89 2b       	or	r24, r25
     a56:	11 f4       	brne	.+4      	; 0xa5c <read_data+0x8>
        TWCR = (1<<TWINT) | (1<<TWEN);
     a58:	84 e8       	ldi	r24, 0x84	; 132
     a5a:	01 c0       	rjmp	.+2      	; 0xa5e <read_data+0xa>
    else
        TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWEA);
     a5c:	84 ec       	ldi	r24, 0xC4	; 196
     a5e:	80 93 bc 00 	sts	0x00BC, r24
    
    while(!(TWCR & (1<<TWINT)));
     a62:	80 91 bc 00 	lds	r24, 0x00BC
     a66:	87 ff       	sbrs	r24, 7
     a68:	fc cf       	rjmp	.-8      	; 0xa62 <read_data+0xe>
    
    if (i2cdebug) {
        printf("[Success]\tData (%#02x) has been read successfuly.\n", TWDR);
    }
    
    return TWDR;
     a6a:	80 91 bb 00 	lds	r24, 0x00BB
    
}
     a6e:	08 95       	ret

00000a70 <restart>:

void restart(void)
{
    // Clear TWI interrupt flag, Put start condition on SDA, Enable TWI
    TWCR= (1<<TWINT)|(1<<TWSTA)|(1<<TWEN);
     a70:	84 ea       	ldi	r24, 0xA4	; 164
     a72:	80 93 bc 00 	sts	0x00BC, r24
    while(!(TWCR & (1<<TWINT))); // wait till restart condition is transmitted
     a76:	80 91 bc 00 	lds	r24, 0x00BC
     a7a:	87 ff       	sbrs	r24, 7
     a7c:	fc cf       	rjmp	.-8      	; 0xa76 <restart+0x6>
    while((TWSR & 0xF8)!= TWI_R_START_SENT); // Check for the acknoledgement
     a7e:	80 91 b9 00 	lds	r24, 0x00B9
     a82:	88 7f       	andi	r24, 0xF8	; 248
     a84:	80 31       	cpi	r24, 0x10	; 16
     a86:	d9 f7       	brne	.-10     	; 0xa7e <restart+0xe>
}
     a88:	08 95       	ret

00000a8a <terminate>:


void terminate() {
    printf("[Error]\tThere is an error occured while transmission. (NACK)\n");
     a8a:	85 e7       	ldi	r24, 0x75	; 117
     a8c:	91 e0       	ldi	r25, 0x01	; 1
     a8e:	0c 94 89 13 	jmp	0x2712	; 0x2712 <puts>

00000a92 <send_addr>:
        printf("[Info]\tTransmission has been ended.\n");
    }
}

void send_addr(uint8_t addr) {
    TWDR = addr;
     a92:	80 93 bb 00 	sts	0x00BB, r24
    TWCR = (1<<TWINT) | (1<<TWEN);
     a96:	84 e8       	ldi	r24, 0x84	; 132
     a98:	80 93 bc 00 	sts	0x00BC, r24
    
    if (i2cdebug) {
        printf("[Info]\tAddress %#02x has been sent. Waiting for ack... \n", addr);
    }
    
    while(!(TWCR & (1<<TWINT)));
     a9c:	80 91 bc 00 	lds	r24, 0x00BC
     aa0:	87 ff       	sbrs	r24, 7
     aa2:	fc cf       	rjmp	.-8      	; 0xa9c <send_addr+0xa>
    
    if (TWI_SLAVE_W_ACK != (TWSR & 0xF8) && TWI_SLAVE_R_ACK != (TWSR & 0xF8)) {
     aa4:	80 91 b9 00 	lds	r24, 0x00B9
     aa8:	88 7f       	andi	r24, 0xF8	; 248
     aaa:	88 31       	cpi	r24, 0x18	; 24
     aac:	39 f0       	breq	.+14     	; 0xabc <send_addr+0x2a>
     aae:	80 91 b9 00 	lds	r24, 0x00B9
     ab2:	88 7f       	andi	r24, 0xF8	; 248
     ab4:	80 34       	cpi	r24, 0x40	; 64
     ab6:	11 f0       	breq	.+4      	; 0xabc <send_addr+0x2a>
        terminate();
     ab8:	0c 94 45 05 	jmp	0xa8a	; 0xa8a <terminate>
     abc:	08 95       	ret

00000abe <send_data>:
    }

}

void send_data(uint8_t data) {
    TWDR = data;
     abe:	80 93 bb 00 	sts	0x00BB, r24
    
    if (i2cdebug) {
        printf("[Info]\tSending data (%#02x).\n", data);
    }
    
    TWCR = (1<<TWINT) | (1<<TWEN);
     ac2:	84 e8       	ldi	r24, 0x84	; 132
     ac4:	80 93 bc 00 	sts	0x00BC, r24
    while(!(TWCR & (1<<TWINT)));
     ac8:	80 91 bc 00 	lds	r24, 0x00BC
     acc:	87 ff       	sbrs	r24, 7
     ace:	fc cf       	rjmp	.-8      	; 0xac8 <send_data+0xa>
    
    if (i2cdebug) {
        printf("[Success]\tData sent. Waiting for ack... \n");
    }
    
    if (TWI_DATA_SENT_ACK != (TWSR & 0xF8)) {
     ad0:	80 91 b9 00 	lds	r24, 0x00B9
     ad4:	88 7f       	andi	r24, 0xF8	; 248
     ad6:	88 32       	cpi	r24, 0x28	; 40
     ad8:	11 f0       	breq	.+4      	; 0xade <send_data+0x20>
        terminate();
     ada:	0c 94 45 05 	jmp	0xa8a	; 0xa8a <terminate>
     ade:	08 95       	ret

00000ae0 <toggle_e>:

#if LCD_IO_MODE
/* toggle Enable Pin to initiate write */
static void toggle_e(void)
{
    lcd_e_high();
     ae0:	2d 9a       	sbi	0x05, 5	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     ae2:	82 e0       	ldi	r24, 0x02	; 2
     ae4:	8a 95       	dec	r24
     ae6:	f1 f7       	brne	.-4      	; 0xae4 <toggle_e+0x4>
     ae8:	00 c0       	rjmp	.+0      	; 0xaea <toggle_e+0xa>
    lcd_e_delay();
    lcd_e_low();
     aea:	2d 98       	cbi	0x05, 5	; 5
     aec:	08 95       	ret

00000aee <lcd_write>:
                 0: write instruction
Returns:  none
*************************************************************************/
#if LCD_IO_MODE
static void lcd_write(uint8_t data,uint8_t rs) 
{
     aee:	cf 93       	push	r28
     af0:	df 93       	push	r29
     af2:	1f 92       	push	r1
     af4:	cd b7       	in	r28, 0x3d	; 61
     af6:	de b7       	in	r29, 0x3e	; 62
    unsigned char dataBits ;


    if (rs) {        /* write data        (RS=1, RW=0) */
     af8:	66 23       	and	r22, r22
     afa:	11 f0       	breq	.+4      	; 0xb00 <lcd_write+0x12>
       lcd_rs_high();
     afc:	41 9a       	sbi	0x08, 1	; 8
     afe:	01 c0       	rjmp	.+2      	; 0xb02 <lcd_write+0x14>
    } else {         /* write instruction (RS=0, RW=0) */
       lcd_rs_low();
     b00:	41 98       	cbi	0x08, 1	; 8
    }
    lcd_rw_low();    /* RW=0  write mode      */
     b02:	40 98       	cbi	0x08, 0	; 8
        LCD_DATA0_PORT = dataBits | 0x0F;
    }
    else
    {
        /* configure data pins as output */
        DDR(LCD_DATA0_PORT) |= _BV(LCD_DATA0_PIN);
     b04:	24 9a       	sbi	0x04, 4	; 4
        DDR(LCD_DATA1_PORT) |= _BV(LCD_DATA1_PIN);
     b06:	23 9a       	sbi	0x04, 3	; 4
        DDR(LCD_DATA2_PORT) |= _BV(LCD_DATA2_PIN);
     b08:	22 9a       	sbi	0x04, 2	; 4
        DDR(LCD_DATA3_PORT) |= _BV(LCD_DATA3_PIN);
     b0a:	21 9a       	sbi	0x04, 1	; 4
        
        /* output high nibble first */
        LCD_DATA3_PORT &= ~_BV(LCD_DATA3_PIN);
     b0c:	29 98       	cbi	0x05, 1	; 5
        LCD_DATA2_PORT &= ~_BV(LCD_DATA2_PIN);
     b0e:	2a 98       	cbi	0x05, 2	; 5
        LCD_DATA1_PORT &= ~_BV(LCD_DATA1_PIN);
     b10:	2b 98       	cbi	0x05, 3	; 5
        LCD_DATA0_PORT &= ~_BV(LCD_DATA0_PIN);
     b12:	2c 98       	cbi	0x05, 4	; 5
    	if(data & 0x80) LCD_DATA3_PORT |= _BV(LCD_DATA3_PIN);
     b14:	87 fd       	sbrc	r24, 7
     b16:	29 9a       	sbi	0x05, 1	; 5
    	if(data & 0x40) LCD_DATA2_PORT |= _BV(LCD_DATA2_PIN);
     b18:	86 fd       	sbrc	r24, 6
     b1a:	2a 9a       	sbi	0x05, 2	; 5
    	if(data & 0x20) LCD_DATA1_PORT |= _BV(LCD_DATA1_PIN);
     b1c:	85 fd       	sbrc	r24, 5
     b1e:	2b 9a       	sbi	0x05, 3	; 5
    	if(data & 0x10) LCD_DATA0_PORT |= _BV(LCD_DATA0_PIN);   
     b20:	84 fd       	sbrc	r24, 4
     b22:	2c 9a       	sbi	0x05, 4	; 5
        lcd_e_toggle();
     b24:	89 83       	std	Y+1, r24	; 0x01
     b26:	0e 94 70 05 	call	0xae0	; 0xae0 <toggle_e>
        
        /* output low nibble */
        LCD_DATA3_PORT &= ~_BV(LCD_DATA3_PIN);
     b2a:	29 98       	cbi	0x05, 1	; 5
        LCD_DATA2_PORT &= ~_BV(LCD_DATA2_PIN);
     b2c:	2a 98       	cbi	0x05, 2	; 5
        LCD_DATA1_PORT &= ~_BV(LCD_DATA1_PIN);
     b2e:	2b 98       	cbi	0x05, 3	; 5
        LCD_DATA0_PORT &= ~_BV(LCD_DATA0_PIN);
     b30:	2c 98       	cbi	0x05, 4	; 5
    	if(data & 0x08) LCD_DATA3_PORT |= _BV(LCD_DATA3_PIN);
     b32:	89 81       	ldd	r24, Y+1	; 0x01
     b34:	83 fd       	sbrc	r24, 3
     b36:	29 9a       	sbi	0x05, 1	; 5
    	if(data & 0x04) LCD_DATA2_PORT |= _BV(LCD_DATA2_PIN);
     b38:	82 fd       	sbrc	r24, 2
     b3a:	2a 9a       	sbi	0x05, 2	; 5
    	if(data & 0x02) LCD_DATA1_PORT |= _BV(LCD_DATA1_PIN);
     b3c:	81 fd       	sbrc	r24, 1
     b3e:	2b 9a       	sbi	0x05, 3	; 5
    	if(data & 0x01) LCD_DATA0_PORT |= _BV(LCD_DATA0_PIN);
     b40:	80 fd       	sbrc	r24, 0
     b42:	2c 9a       	sbi	0x05, 4	; 5
        lcd_e_toggle();        
     b44:	0e 94 70 05 	call	0xae0	; 0xae0 <toggle_e>
        
        /* all data pins high (inactive) */
        LCD_DATA0_PORT |= _BV(LCD_DATA0_PIN);
     b48:	2c 9a       	sbi	0x05, 4	; 5
        LCD_DATA1_PORT |= _BV(LCD_DATA1_PIN);
     b4a:	2b 9a       	sbi	0x05, 3	; 5
        LCD_DATA2_PORT |= _BV(LCD_DATA2_PIN);
     b4c:	2a 9a       	sbi	0x05, 2	; 5
        LCD_DATA3_PORT |= _BV(LCD_DATA3_PIN);
     b4e:	29 9a       	sbi	0x05, 1	; 5
    }
}
     b50:	0f 90       	pop	r0
     b52:	df 91       	pop	r29
     b54:	cf 91       	pop	r28
     b56:	08 95       	ret

00000b58 <lcd_read.constprop.0>:
    
    
    if (rs)
        lcd_rs_high();                       /* RS=1: read data      */
    else
        lcd_rs_low();                        /* RS=0: read busy flag */
     b58:	41 98       	cbi	0x08, 1	; 8
    lcd_rw_high();                           /* RW=1  read mode      */
     b5a:	40 9a       	sbi	0x08, 0	; 8
        lcd_e_low();
    }
    else
    {
        /* configure data pins as input */
        DDR(LCD_DATA0_PORT) &= ~_BV(LCD_DATA0_PIN);
     b5c:	24 98       	cbi	0x04, 4	; 4
        DDR(LCD_DATA1_PORT) &= ~_BV(LCD_DATA1_PIN);
     b5e:	23 98       	cbi	0x04, 3	; 4
        DDR(LCD_DATA2_PORT) &= ~_BV(LCD_DATA2_PIN);
     b60:	22 98       	cbi	0x04, 2	; 4
        DDR(LCD_DATA3_PORT) &= ~_BV(LCD_DATA3_PIN);
     b62:	21 98       	cbi	0x04, 1	; 4
                
        /* read high nibble first */
        lcd_e_high();
     b64:	2d 9a       	sbi	0x05, 5	; 5
     b66:	82 e0       	ldi	r24, 0x02	; 2
     b68:	8a 95       	dec	r24
     b6a:	f1 f7       	brne	.-4      	; 0xb68 <lcd_read.constprop.0+0x10>
     b6c:	00 c0       	rjmp	.+0      	; 0xb6e <lcd_read.constprop.0+0x16>
        lcd_e_delay();        
        data = 0;
        if ( PIN(LCD_DATA0_PORT) & _BV(LCD_DATA0_PIN) ) data |= 0x10;
     b6e:	1c 99       	sbic	0x03, 4	; 3
     b70:	02 c0       	rjmp	.+4      	; 0xb76 <lcd_read.constprop.0+0x1e>
        DDR(LCD_DATA3_PORT) &= ~_BV(LCD_DATA3_PIN);
                
        /* read high nibble first */
        lcd_e_high();
        lcd_e_delay();        
        data = 0;
     b72:	80 e0       	ldi	r24, 0x00	; 0
     b74:	01 c0       	rjmp	.+2      	; 0xb78 <lcd_read.constprop.0+0x20>
        if ( PIN(LCD_DATA0_PORT) & _BV(LCD_DATA0_PIN) ) data |= 0x10;
     b76:	80 e1       	ldi	r24, 0x10	; 16
        if ( PIN(LCD_DATA1_PORT) & _BV(LCD_DATA1_PIN) ) data |= 0x20;
     b78:	1b 99       	sbic	0x03, 3	; 3
     b7a:	80 62       	ori	r24, 0x20	; 32
        if ( PIN(LCD_DATA2_PORT) & _BV(LCD_DATA2_PIN) ) data |= 0x40;
     b7c:	1a 99       	sbic	0x03, 2	; 3
     b7e:	80 64       	ori	r24, 0x40	; 64
        if ( PIN(LCD_DATA3_PORT) & _BV(LCD_DATA3_PIN) ) data |= 0x80;
     b80:	19 99       	sbic	0x03, 1	; 3
     b82:	80 68       	ori	r24, 0x80	; 128
        lcd_e_low();
     b84:	2d 98       	cbi	0x05, 5	; 5
     b86:	92 e0       	ldi	r25, 0x02	; 2
     b88:	9a 95       	dec	r25
     b8a:	f1 f7       	brne	.-4      	; 0xb88 <lcd_read.constprop.0+0x30>
     b8c:	00 c0       	rjmp	.+0      	; 0xb8e <lcd_read.constprop.0+0x36>

        lcd_e_delay();                       /* Enable 500ns low       */
    
        /* read low nibble */    
        lcd_e_high();
     b8e:	2d 9a       	sbi	0x05, 5	; 5
     b90:	92 e0       	ldi	r25, 0x02	; 2
     b92:	9a 95       	dec	r25
     b94:	f1 f7       	brne	.-4      	; 0xb92 <lcd_read.constprop.0+0x3a>
     b96:	00 c0       	rjmp	.+0      	; 0xb98 <lcd_read.constprop.0+0x40>
        lcd_e_delay();
        if ( PIN(LCD_DATA0_PORT) & _BV(LCD_DATA0_PIN) ) data |= 0x01;
     b98:	1c 99       	sbic	0x03, 4	; 3
     b9a:	81 60       	ori	r24, 0x01	; 1
        if ( PIN(LCD_DATA1_PORT) & _BV(LCD_DATA1_PIN) ) data |= 0x02;
     b9c:	1b 99       	sbic	0x03, 3	; 3
     b9e:	82 60       	ori	r24, 0x02	; 2
        if ( PIN(LCD_DATA2_PORT) & _BV(LCD_DATA2_PIN) ) data |= 0x04;
     ba0:	1a 99       	sbic	0x03, 2	; 3
     ba2:	84 60       	ori	r24, 0x04	; 4
        if ( PIN(LCD_DATA3_PORT) & _BV(LCD_DATA3_PIN) ) data |= 0x08;        
     ba4:	19 99       	sbic	0x03, 1	; 3
     ba6:	88 60       	ori	r24, 0x08	; 8
        lcd_e_low();
     ba8:	2d 98       	cbi	0x05, 5	; 5
    }
    return data;
}
     baa:	08 95       	ret

00000bac <lcd_waitbusy>:

{
    register uint8_t c;
    
    /* wait until busy flag is cleared */
    while ( (c=lcd_read(0)) & (1<<LCD_BUSY)) {}
     bac:	0e 94 ac 05 	call	0xb58	; 0xb58 <lcd_read.constprop.0>
     bb0:	87 fd       	sbrc	r24, 7
     bb2:	fc cf       	rjmp	.-8      	; 0xbac <lcd_waitbusy>
     bb4:	8a e0       	ldi	r24, 0x0A	; 10
     bb6:	8a 95       	dec	r24
     bb8:	f1 f7       	brne	.-4      	; 0xbb6 <lcd_waitbusy+0xa>
     bba:	00 c0       	rjmp	.+0      	; 0xbbc <lcd_waitbusy+0x10>
    
    /* the address counter is updated 4us after the busy flag is cleared */
    delay(LCD_DELAY_BUSY_FLAG);

    /* now read the address counter */
    return (lcd_read(0));  // return address counter
     bbc:	0c 94 ac 05 	jmp	0xb58	; 0xb58 <lcd_read.constprop.0>

00000bc0 <lcd_command>:
Send LCD controller instruction command
Input:   instruction to send to LCD controller, see HD44780 data sheet
Returns: none
*************************************************************************/
void lcd_command(uint8_t cmd)
{
     bc0:	cf 93       	push	r28
     bc2:	c8 2f       	mov	r28, r24
    lcd_waitbusy();
     bc4:	0e 94 d6 05 	call	0xbac	; 0xbac <lcd_waitbusy>
    lcd_write(cmd,0);
     bc8:	60 e0       	ldi	r22, 0x00	; 0
     bca:	8c 2f       	mov	r24, r28
}
     bcc:	cf 91       	pop	r28
Returns: none
*************************************************************************/
void lcd_command(uint8_t cmd)
{
    lcd_waitbusy();
    lcd_write(cmd,0);
     bce:	0c 94 77 05 	jmp	0xaee	; 0xaee <lcd_write>

00000bd2 <lcd_data>:
Send data byte to LCD controller 
Input:   data to send to LCD controller, see HD44780 data sheet
Returns: none
*************************************************************************/
void lcd_data(uint8_t data)
{
     bd2:	cf 93       	push	r28
     bd4:	c8 2f       	mov	r28, r24
    lcd_waitbusy();
     bd6:	0e 94 d6 05 	call	0xbac	; 0xbac <lcd_waitbusy>
    lcd_write(data,1);
     bda:	61 e0       	ldi	r22, 0x01	; 1
     bdc:	8c 2f       	mov	r24, r28
}
     bde:	cf 91       	pop	r28
Returns: none
*************************************************************************/
void lcd_data(uint8_t data)
{
    lcd_waitbusy();
    lcd_write(data,1);
     be0:	0c 94 77 05 	jmp	0xaee	; 0xaee <lcd_write>

00000be4 <lcd_gotoxy>:
{
#if LCD_LINES==1
    lcd_command((1<<LCD_DDRAM)+LCD_START_LINE1+x);
#endif
#if LCD_LINES==2
    if ( y==0 ) 
     be4:	61 11       	cpse	r22, r1
     be6:	02 c0       	rjmp	.+4      	; 0xbec <lcd_gotoxy+0x8>
        lcd_command((1<<LCD_DDRAM)+LCD_START_LINE1+x);
     be8:	80 58       	subi	r24, 0x80	; 128
     bea:	01 c0       	rjmp	.+2      	; 0xbee <lcd_gotoxy+0xa>
    else
        lcd_command((1<<LCD_DDRAM)+LCD_START_LINE2+x);
     bec:	80 54       	subi	r24, 0x40	; 64
     bee:	0c 94 e0 05 	jmp	0xbc0	; 0xbc0 <lcd_command>

00000bf2 <lcd_getxy>:

/*************************************************************************
*************************************************************************/
int lcd_getxy(void)
{
    return lcd_waitbusy();
     bf2:	0e 94 d6 05 	call	0xbac	; 0xbac <lcd_waitbusy>
}
     bf6:	90 e0       	ldi	r25, 0x00	; 0
     bf8:	08 95       	ret

00000bfa <lcd_clrscr>:
/*************************************************************************
Clear display and set cursor to home position
*************************************************************************/
void lcd_clrscr(void)
{
    lcd_command(1<<LCD_CLR);
     bfa:	81 e0       	ldi	r24, 0x01	; 1
     bfc:	0c 94 e0 05 	jmp	0xbc0	; 0xbc0 <lcd_command>

00000c00 <lcd_home>:
/*************************************************************************
Set cursor to home position
*************************************************************************/
void lcd_home(void)
{
    lcd_command(1<<LCD_HOME);
     c00:	82 e0       	ldi	r24, 0x02	; 2
     c02:	0c 94 e0 05 	jmp	0xbc0	; 0xbc0 <lcd_command>

00000c06 <lcd_putc>:
Display character at current cursor position 
Input:    character to be displayed                                       
Returns:  none
*************************************************************************/
void lcd_putc(char c)
{
     c06:	cf 93       	push	r28
     c08:	c8 2f       	mov	r28, r24
    uint8_t pos;


    pos = lcd_waitbusy();   // read busy-flag and address counter
     c0a:	0e 94 d6 05 	call	0xbac	; 0xbac <lcd_waitbusy>
    if (c=='\n')
     c0e:	ca 30       	cpi	r28, 0x0A	; 10
     c10:	49 f4       	brne	.+18     	; 0xc24 <lcd_putc+0x1e>

#if LCD_LINES==1
    addressCounter = 0;
#endif
#if LCD_LINES==2
    if ( pos < (LCD_START_LINE2) )
     c12:	80 34       	cpi	r24, 0x40	; 64
     c14:	10 f4       	brcc	.+4      	; 0xc1a <lcd_putc+0x14>
        addressCounter = LCD_START_LINE2;
     c16:	80 e4       	ldi	r24, 0x40	; 64
     c18:	01 c0       	rjmp	.+2      	; 0xc1c <lcd_putc+0x16>
    else
        addressCounter = LCD_START_LINE1;
     c1a:	80 e0       	ldi	r24, 0x00	; 0
        addressCounter = LCD_START_LINE4;
    else 
        addressCounter = LCD_START_LINE1;
#endif
#endif
    lcd_command((1<<LCD_DDRAM)+addressCounter);
     c1c:	80 58       	subi	r24, 0x80	; 128
        lcd_waitbusy();
#endif
        lcd_write(c, 1);
    }

}/* lcd_putc */
     c1e:	cf 91       	pop	r28
        addressCounter = LCD_START_LINE4;
    else 
        addressCounter = LCD_START_LINE1;
#endif
#endif
    lcd_command((1<<LCD_DDRAM)+addressCounter);
     c20:	0c 94 e0 05 	jmp	0xbc0	; 0xbc0 <lcd_command>
            lcd_write((1<<LCD_DDRAM)+LCD_START_LINE1,0);
        }
#endif
        lcd_waitbusy();
#endif
        lcd_write(c, 1);
     c24:	61 e0       	ldi	r22, 0x01	; 1
     c26:	8c 2f       	mov	r24, r28
    }

}/* lcd_putc */
     c28:	cf 91       	pop	r28
            lcd_write((1<<LCD_DDRAM)+LCD_START_LINE1,0);
        }
#endif
        lcd_waitbusy();
#endif
        lcd_write(c, 1);
     c2a:	0c 94 77 05 	jmp	0xaee	; 0xaee <lcd_write>

00000c2e <lcd_puts>:
Input:    string to be displayed
Returns:  none
*************************************************************************/
void lcd_puts(const char *s)
/* print string on lcd (no auto linefeed) */
{
     c2e:	cf 93       	push	r28
     c30:	df 93       	push	r29
     c32:	ec 01       	movw	r28, r24
    register char c;

    while ( (c = *s++) ) {
     c34:	89 91       	ld	r24, Y+
     c36:	88 23       	and	r24, r24
     c38:	19 f0       	breq	.+6      	; 0xc40 <lcd_puts+0x12>
        lcd_putc(c);
     c3a:	0e 94 03 06 	call	0xc06	; 0xc06 <lcd_putc>
     c3e:	fa cf       	rjmp	.-12     	; 0xc34 <lcd_puts+0x6>
    }

}/* lcd_puts */
     c40:	df 91       	pop	r29
     c42:	cf 91       	pop	r28
     c44:	08 95       	ret

00000c46 <lcd_puts_p>:
Input:     string from program memory be be displayed                                        
Returns:   none
*************************************************************************/
void lcd_puts_p(const char *progmem_s)
/* print string from program memory on lcd (no auto linefeed) */
{
     c46:	cf 93       	push	r28
     c48:	df 93       	push	r29
     c4a:	fc 01       	movw	r30, r24
    register char c;

    while ( (c = pgm_read_byte(progmem_s++)) ) {
     c4c:	84 91       	lpm	r24, Z
     c4e:	ef 01       	movw	r28, r30
     c50:	21 96       	adiw	r28, 0x01	; 1
     c52:	88 23       	and	r24, r24
     c54:	21 f0       	breq	.+8      	; 0xc5e <lcd_puts_p+0x18>
        lcd_putc(c);
     c56:	0e 94 03 06 	call	0xc06	; 0xc06 <lcd_putc>
     c5a:	fe 01       	movw	r30, r28
     c5c:	f7 cf       	rjmp	.-18     	; 0xc4c <lcd_puts_p+0x6>
    }

}/* lcd_puts_p */
     c5e:	df 91       	pop	r29
     c60:	cf 91       	pop	r28
     c62:	08 95       	ret

00000c64 <lcd_init>:
                   LCD_DISP_ON_CURSOR      display on, cursor on
                   LCD_DISP_CURSOR_BLINK   display on, cursor on flashing
Returns:  none
*************************************************************************/
void lcd_init(uint8_t dispAttr)
{
     c64:	cf 93       	push	r28
     c66:	c8 2f       	mov	r28, r24
        DDR(LCD_E_PORT)     |= _BV(LCD_E_PIN);
    }
    else
    {
        /* configure all port bits as output (LCD data and control lines on different ports */
        DDR(LCD_RS_PORT)    |= _BV(LCD_RS_PIN);
     c68:	39 9a       	sbi	0x07, 1	; 7
        DDR(LCD_RW_PORT)    |= _BV(LCD_RW_PIN);
     c6a:	38 9a       	sbi	0x07, 0	; 7
        DDR(LCD_E_PORT)     |= _BV(LCD_E_PIN);
     c6c:	25 9a       	sbi	0x04, 5	; 4
        DDR(LCD_DATA0_PORT) |= _BV(LCD_DATA0_PIN);
     c6e:	24 9a       	sbi	0x04, 4	; 4
        DDR(LCD_DATA1_PORT) |= _BV(LCD_DATA1_PIN);
     c70:	23 9a       	sbi	0x04, 3	; 4
        DDR(LCD_DATA2_PORT) |= _BV(LCD_DATA2_PIN);
     c72:	22 9a       	sbi	0x04, 2	; 4
        DDR(LCD_DATA3_PORT) |= _BV(LCD_DATA3_PIN);
     c74:	21 9a       	sbi	0x04, 1	; 4
     c76:	8f ef       	ldi	r24, 0xFF	; 255
     c78:	9c e7       	ldi	r25, 0x7C	; 124
     c7a:	01 97       	sbiw	r24, 0x01	; 1
     c7c:	f1 f7       	brne	.-4      	; 0xc7a <lcd_init+0x16>
     c7e:	00 c0       	rjmp	.+0      	; 0xc80 <lcd_init+0x1c>
     c80:	00 00       	nop
    }
    delay(LCD_DELAY_BOOTUP);             /* wait 16ms or more after power-on       */
    
    /* initial write to lcd is 8bit */
    LCD_DATA1_PORT |= _BV(LCD_DATA1_PIN);    // LCD_FUNCTION>>4;
     c82:	2b 9a       	sbi	0x05, 3	; 5
    LCD_DATA0_PORT |= _BV(LCD_DATA0_PIN);    // LCD_FUNCTION_8BIT>>4;
     c84:	2c 9a       	sbi	0x05, 4	; 5
    lcd_e_toggle();
     c86:	0e 94 70 05 	call	0xae0	; 0xae0 <toggle_e>
     c8a:	8f e0       	ldi	r24, 0x0F	; 15
     c8c:	97 e2       	ldi	r25, 0x27	; 39
     c8e:	01 97       	sbiw	r24, 0x01	; 1
     c90:	f1 f7       	brne	.-4      	; 0xc8e <lcd_init+0x2a>
     c92:	00 c0       	rjmp	.+0      	; 0xc94 <lcd_init+0x30>
     c94:	00 00       	nop
    delay(LCD_DELAY_INIT);               /* delay, busy flag can't be checked here */
   
    /* repeat last command */ 
    lcd_e_toggle();      
     c96:	0e 94 70 05 	call	0xae0	; 0xae0 <toggle_e>
     c9a:	9a ea       	ldi	r25, 0xAA	; 170
     c9c:	9a 95       	dec	r25
     c9e:	f1 f7       	brne	.-4      	; 0xc9c <lcd_init+0x38>
     ca0:	00 c0       	rjmp	.+0      	; 0xca2 <lcd_init+0x3e>
    delay(LCD_DELAY_INIT_REP);           /* delay, busy flag can't be checked here */
    
    /* repeat last command a third time */
    lcd_e_toggle();      
     ca2:	0e 94 70 05 	call	0xae0	; 0xae0 <toggle_e>
     ca6:	8a ea       	ldi	r24, 0xAA	; 170
     ca8:	8a 95       	dec	r24
     caa:	f1 f7       	brne	.-4      	; 0xca8 <lcd_init+0x44>
     cac:	00 c0       	rjmp	.+0      	; 0xcae <lcd_init+0x4a>
    delay(LCD_DELAY_INIT_REP);           /* delay, busy flag can't be checked here */

    /* now configure for 4bit mode */
    LCD_DATA0_PORT &= ~_BV(LCD_DATA0_PIN);   // LCD_FUNCTION_4BIT_1LINE>>4
     cae:	2c 98       	cbi	0x05, 4	; 5
    lcd_e_toggle();
     cb0:	0e 94 70 05 	call	0xae0	; 0xae0 <toggle_e>
     cb4:	9a ea       	ldi	r25, 0xAA	; 170
     cb6:	9a 95       	dec	r25
     cb8:	f1 f7       	brne	.-4      	; 0xcb6 <lcd_init+0x52>
     cba:	00 c0       	rjmp	.+0      	; 0xcbc <lcd_init+0x58>
    /* Display with KS0073 controller requires special commands for enabling 4 line mode */
	lcd_command(KS0073_EXTENDED_FUNCTION_REGISTER_ON);
	lcd_command(KS0073_4LINES_MODE);
	lcd_command(KS0073_EXTENDED_FUNCTION_REGISTER_OFF);
#else
    lcd_command(LCD_FUNCTION_DEFAULT);      /* function set: display lines  */
     cbc:	88 e2       	ldi	r24, 0x28	; 40
     cbe:	0e 94 e0 05 	call	0xbc0	; 0xbc0 <lcd_command>
#endif
    lcd_command(LCD_DISP_OFF);              /* display off                  */
     cc2:	88 e0       	ldi	r24, 0x08	; 8
     cc4:	0e 94 e0 05 	call	0xbc0	; 0xbc0 <lcd_command>
    lcd_clrscr();                           /* display clear                */ 
     cc8:	0e 94 fd 05 	call	0xbfa	; 0xbfa <lcd_clrscr>
    lcd_command(LCD_MODE_DEFAULT);          /* set entry mode               */
     ccc:	86 e0       	ldi	r24, 0x06	; 6
     cce:	0e 94 e0 05 	call	0xbc0	; 0xbc0 <lcd_command>
    lcd_command(dispAttr);                  /* display/cursor control       */
     cd2:	8c 2f       	mov	r24, r28

}/* lcd_init */
     cd4:	cf 91       	pop	r28
    lcd_command(LCD_FUNCTION_DEFAULT);      /* function set: display lines  */
#endif
    lcd_command(LCD_DISP_OFF);              /* display off                  */
    lcd_clrscr();                           /* display clear                */ 
    lcd_command(LCD_MODE_DEFAULT);          /* set entry mode               */
    lcd_command(dispAttr);                  /* display/cursor control       */
     cd6:	0c 94 e0 05 	jmp	0xbc0	; 0xbc0 <lcd_command>

00000cda <__vector_9>:

FILE uart_output = FDEV_SETUP_STREAM(send_uart_char, NULL, _FDEV_SETUP_WRITE);

char *lcd_buffer;

ISR(TIMER2_OVF_vect) {
     cda:	1f 92       	push	r1
     cdc:	0f 92       	push	r0
     cde:	0f b6       	in	r0, 0x3f	; 63
     ce0:	0f 92       	push	r0
     ce2:	11 24       	eor	r1, r1
     ce4:	2f 93       	push	r18
     ce6:	3f 93       	push	r19
     ce8:	4f 93       	push	r20
     cea:	5f 93       	push	r21
     cec:	6f 93       	push	r22
     cee:	7f 93       	push	r23
     cf0:	8f 93       	push	r24
     cf2:	9f 93       	push	r25
     cf4:	af 93       	push	r26
     cf6:	bf 93       	push	r27
     cf8:	ef 93       	push	r30
     cfa:	ff 93       	push	r31
    update_rtc();
     cfc:	0e 94 00 08 	call	0x1000	; 0x1000 <update_rtc>
    TCNT2 = 0x00;
     d00:	10 92 b2 00 	sts	0x00B2, r1
}
     d04:	ff 91       	pop	r31
     d06:	ef 91       	pop	r30
     d08:	bf 91       	pop	r27
     d0a:	af 91       	pop	r26
     d0c:	9f 91       	pop	r25
     d0e:	8f 91       	pop	r24
     d10:	7f 91       	pop	r23
     d12:	6f 91       	pop	r22
     d14:	5f 91       	pop	r21
     d16:	4f 91       	pop	r20
     d18:	3f 91       	pop	r19
     d1a:	2f 91       	pop	r18
     d1c:	0f 90       	pop	r0
     d1e:	0f be       	out	0x3f, r0	; 63
     d20:	0f 90       	pop	r0
     d22:	1f 90       	pop	r1
     d24:	18 95       	reti

00000d26 <update_display>:


void update_display() {
     d26:	0f 93       	push	r16
     d28:	1f 93       	push	r17
     d2a:	cf 93       	push	r28
     d2c:	df 93       	push	r29
    
    calculate();
     d2e:	0e 94 96 04 	call	0x92c	; 0x92c <calculate>
    
    lcd_gotoxy(0, 0);
     d32:	60 e0       	ldi	r22, 0x00	; 0
     d34:	80 e0       	ldi	r24, 0x00	; 0
     d36:	0e 94 f2 05 	call	0xbe4	; 0xbe4 <lcd_gotoxy>
    sprintf(lcd_buffer, "%.2f %cC",  (float) get_temperature(), (char) 223);
     d3a:	0e 94 9c 04 	call	0x938	; 0x938 <get_temperature>
     d3e:	1f 92       	push	r1
     d40:	2f ed       	ldi	r18, 0xDF	; 223
     d42:	2f 93       	push	r18
     d44:	9f 93       	push	r25
     d46:	8f 93       	push	r24
     d48:	7f 93       	push	r23
     d4a:	6f 93       	push	r22
     d4c:	82 eb       	ldi	r24, 0xB2	; 178
     d4e:	91 e0       	ldi	r25, 0x01	; 1
     d50:	9f 93       	push	r25
     d52:	8f 93       	push	r24
     d54:	80 91 e1 02 	lds	r24, 0x02E1
     d58:	8f 93       	push	r24
     d5a:	80 91 e0 02 	lds	r24, 0x02E0
     d5e:	8f 93       	push	r24
     d60:	0e 94 b6 13 	call	0x276c	; 0x276c <sprintf>
    lcd_puts(lcd_buffer);
     d64:	80 91 e0 02 	lds	r24, 0x02E0
     d68:	90 91 e1 02 	lds	r25, 0x02E1
     d6c:	0e 94 17 06 	call	0xc2e	; 0xc2e <lcd_puts>
    
    sprintf(lcd_buffer, "%02d:%02d", get_hour(), get_minute());
     d70:	0e 94 93 08 	call	0x1126	; 0x1126 <get_minute>
     d74:	ec 01       	movw	r28, r24
     d76:	0e 94 98 08 	call	0x1130	; 0x1130 <get_hour>
     d7a:	df 93       	push	r29
     d7c:	cf 93       	push	r28
     d7e:	9f 93       	push	r25
     d80:	8f 93       	push	r24
     d82:	8b eb       	ldi	r24, 0xBB	; 187
     d84:	91 e0       	ldi	r25, 0x01	; 1
     d86:	9f 93       	push	r25
     d88:	8f 93       	push	r24
     d8a:	80 91 e1 02 	lds	r24, 0x02E1
     d8e:	8f 93       	push	r24
     d90:	80 91 e0 02 	lds	r24, 0x02E0
     d94:	8f 93       	push	r24
     d96:	0e 94 b6 13 	call	0x276c	; 0x276c <sprintf>
    lcd_gotoxy(11, 0);
     d9a:	60 e0       	ldi	r22, 0x00	; 0
     d9c:	8b e0       	ldi	r24, 0x0B	; 11
     d9e:	0e 94 f2 05 	call	0xbe4	; 0xbe4 <lcd_gotoxy>
    lcd_puts(lcd_buffer);
     da2:	80 91 e0 02 	lds	r24, 0x02E0
     da6:	90 91 e1 02 	lds	r25, 0x02E1
     daa:	0e 94 17 06 	call	0xc2e	; 0xc2e <lcd_puts>
    
    sprintf(lcd_buffer, "%02d/%02d/%02d", get_day(), get_month(), get_year());
     dae:	0e 94 a7 08 	call	0x114e	; 0x114e <get_year>
     db2:	18 2f       	mov	r17, r24
     db4:	09 2f       	mov	r16, r25
     db6:	0e 94 a2 08 	call	0x1144	; 0x1144 <get_month>
     dba:	ec 01       	movw	r28, r24
     dbc:	0e 94 9d 08 	call	0x113a	; 0x113a <get_day>
     dc0:	0f 93       	push	r16
     dc2:	1f 93       	push	r17
     dc4:	df 93       	push	r29
     dc6:	cf 93       	push	r28
     dc8:	9f 93       	push	r25
     dca:	8f 93       	push	r24
     dcc:	85 ec       	ldi	r24, 0xC5	; 197
     dce:	91 e0       	ldi	r25, 0x01	; 1
     dd0:	9f 93       	push	r25
     dd2:	8f 93       	push	r24
     dd4:	80 91 e1 02 	lds	r24, 0x02E1
     dd8:	8f 93       	push	r24
     dda:	80 91 e0 02 	lds	r24, 0x02E0
     dde:	8f 93       	push	r24
     de0:	0e 94 b6 13 	call	0x276c	; 0x276c <sprintf>
    lcd_gotoxy(0, 1);
     de4:	61 e0       	ldi	r22, 0x01	; 1
     de6:	80 e0       	ldi	r24, 0x00	; 0
     de8:	0e 94 f2 05 	call	0xbe4	; 0xbe4 <lcd_gotoxy>
    lcd_puts(lcd_buffer);
     dec:	80 91 e0 02 	lds	r24, 0x02E0
     df0:	90 91 e1 02 	lds	r25, 0x02E1
     df4:	0e 94 17 06 	call	0xc2e	; 0xc2e <lcd_puts>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     df8:	2f ef       	ldi	r18, 0xFF	; 255
     dfa:	89 e6       	ldi	r24, 0x69	; 105
     dfc:	98 e1       	ldi	r25, 0x18	; 24
     dfe:	21 50       	subi	r18, 0x01	; 1
     e00:	80 40       	sbci	r24, 0x00	; 0
     e02:	90 40       	sbci	r25, 0x00	; 0
     e04:	e1 f7       	brne	.-8      	; 0xdfe <update_display+0xd8>
     e06:	00 c0       	rjmp	.+0      	; 0xe08 <update_display+0xe2>
     e08:	00 00       	nop
     e0a:	8d b7       	in	r24, 0x3d	; 61
     e0c:	9e b7       	in	r25, 0x3e	; 62
     e0e:	4c 96       	adiw	r24, 0x1c	; 28
     e10:	0f b6       	in	r0, 0x3f	; 63
     e12:	f8 94       	cli
     e14:	9e bf       	out	0x3e, r25	; 62
     e16:	0f be       	out	0x3f, r0	; 63
     e18:	8d bf       	out	0x3d, r24	; 61
    
    _delay_ms(1000);
}
     e1a:	df 91       	pop	r29
     e1c:	cf 91       	pop	r28
     e1e:	1f 91       	pop	r17
     e20:	0f 91       	pop	r16
     e22:	08 95       	ret

00000e24 <system_init>:

void system_init() {
    
    lcd_init(LCD_DISP_ON);
     e24:	8c e0       	ldi	r24, 0x0C	; 12
     e26:	0e 94 32 06 	call	0xc64	; 0xc64 <lcd_init>
    lcd_clrscr();
     e2a:	0e 94 fd 05 	call	0xbfa	; 0xbfa <lcd_clrscr>
    
    lcd_gotoxy(0, 0);
     e2e:	60 e0       	ldi	r22, 0x00	; 0
     e30:	80 e0       	ldi	r24, 0x00	; 0
     e32:	0e 94 f2 05 	call	0xbe4	; 0xbe4 <lcd_gotoxy>
    lcd_puts("Connecting...");
     e36:	84 ed       	ldi	r24, 0xD4	; 212
     e38:	91 e0       	ldi	r25, 0x01	; 1
     e3a:	0e 94 17 06 	call	0xc2e	; 0xc2e <lcd_puts>
    
    lcd_gotoxy(0, 1);
     e3e:	61 e0       	ldi	r22, 0x01	; 1
     e40:	80 e0       	ldi	r24, 0x00	; 0
     e42:	0e 94 f2 05 	call	0xbe4	; 0xbe4 <lcd_gotoxy>
    lcd_puts("Please wait");
     e46:	82 ee       	ldi	r24, 0xE2	; 226
     e48:	91 e0       	ldi	r25, 0x01	; 1
     e4a:	0e 94 17 06 	call	0xc2e	; 0xc2e <lcd_puts>
    
    if (!init_wifi_module()) {
     e4e:	0e 94 ad 04 	call	0x95a	; 0x95a <init_wifi_module>
     e52:	89 2b       	or	r24, r25
     e54:	51 f4       	brne	.+20     	; 0xe6a <system_init+0x46>
        lcd_clrscr();
     e56:	0e 94 fd 05 	call	0xbfa	; 0xbfa <lcd_clrscr>
        lcd_gotoxy(0, 0);
     e5a:	60 e0       	ldi	r22, 0x00	; 0
     e5c:	80 e0       	ldi	r24, 0x00	; 0
     e5e:	0e 94 f2 05 	call	0xbe4	; 0xbe4 <lcd_gotoxy>
        lcd_puts("Wifi Error");
     e62:	8e ee       	ldi	r24, 0xEE	; 238
     e64:	91 e0       	ldi	r25, 0x01	; 1
     e66:	0e 94 17 06 	call	0xc2e	; 0xc2e <lcd_puts>
    }
    
    init_sensor(bmp180_mode_0);
     e6a:	80 e0       	ldi	r24, 0x00	; 0
     e6c:	90 e0       	ldi	r25, 0x00	; 0
     e6e:	0e 94 88 04 	call	0x910	; 0x910 <init_sensor>
    init_timer();
     e72:	0e 94 d3 07 	call	0xfa6	; 0xfa6 <init_timer>
    
    sei();
     e76:	78 94       	sei
    
    lcd_clrscr();
     e78:	0e 94 fd 05 	call	0xbfa	; 0xbfa <lcd_clrscr>
    lcd_gotoxy(0, 0);
     e7c:	60 e0       	ldi	r22, 0x00	; 0
     e7e:	80 e0       	ldi	r24, 0x00	; 0
     e80:	0e 94 f2 05 	call	0xbe4	; 0xbe4 <lcd_gotoxy>
    lcd_puts("System Init");
     e84:	89 ef       	ldi	r24, 0xF9	; 249
     e86:	91 e0       	ldi	r25, 0x01	; 1
     e88:	0e 94 17 06 	call	0xc2e	; 0xc2e <lcd_puts>
    lcd_gotoxy(0, 1);
     e8c:	61 e0       	ldi	r22, 0x01	; 1
     e8e:	80 e0       	ldi	r24, 0x00	; 0
     e90:	0e 94 f2 05 	call	0xbe4	; 0xbe4 <lcd_gotoxy>
    lcd_puts("Succesful");
     e94:	85 e0       	ldi	r24, 0x05	; 5
     e96:	92 e0       	ldi	r25, 0x02	; 2
     e98:	0e 94 17 06 	call	0xc2e	; 0xc2e <lcd_puts>
     e9c:	2f ef       	ldi	r18, 0xFF	; 255
     e9e:	80 e7       	ldi	r24, 0x70	; 112
     ea0:	92 e0       	ldi	r25, 0x02	; 2
     ea2:	21 50       	subi	r18, 0x01	; 1
     ea4:	80 40       	sbci	r24, 0x00	; 0
     ea6:	90 40       	sbci	r25, 0x00	; 0
     ea8:	e1 f7       	brne	.-8      	; 0xea2 <system_init+0x7e>
     eaa:	00 c0       	rjmp	.+0      	; 0xeac <system_init+0x88>
     eac:	00 00       	nop
    
    _delay_ms(100);
    lcd_clrscr();
     eae:	0c 94 fd 05 	jmp	0xbfa	; 0xbfa <lcd_clrscr>

00000eb2 <make_time_request>:
}


char *make_time_request() {
    
    printf(CIP_START,"TCP", "erciyas.biz", 80);
     eb2:	1f 92       	push	r1
     eb4:	80 e5       	ldi	r24, 0x50	; 80
     eb6:	8f 93       	push	r24
     eb8:	8f e0       	ldi	r24, 0x0F	; 15
     eba:	92 e0       	ldi	r25, 0x02	; 2
     ebc:	9f 93       	push	r25
     ebe:	8f 93       	push	r24
     ec0:	8b e1       	ldi	r24, 0x1B	; 27
     ec2:	92 e0       	ldi	r25, 0x02	; 2
     ec4:	9f 93       	push	r25
     ec6:	8f 93       	push	r24
     ec8:	8f e1       	ldi	r24, 0x1F	; 31
     eca:	92 e0       	ldi	r25, 0x02	; 2
     ecc:	9f 93       	push	r25
     ece:	8f 93       	push	r24
     ed0:	0e 94 75 13 	call	0x26ea	; 0x26ea <printf>
    uart_getall("OK");
     ed4:	8f e2       	ldi	r24, 0x2F	; 47
     ed6:	91 e0       	ldi	r25, 0x01	; 1
     ed8:	0e 94 f3 08 	call	0x11e6	; 0x11e6 <uart_getall>
    printf(CIP_SEND, strlen(GET_REQUEST_STR) + strlen("http://erciyas.biz/time.php") - 2);
     edc:	1f 92       	push	r1
     ede:	8c e2       	ldi	r24, 0x2C	; 44
     ee0:	8f 93       	push	r24
     ee2:	8a e3       	ldi	r24, 0x3A	; 58
     ee4:	92 e0       	ldi	r25, 0x02	; 2
     ee6:	9f 93       	push	r25
     ee8:	8f 93       	push	r24
     eea:	0e 94 75 13 	call	0x26ea	; 0x26ea <printf>
    uart_getall("OK");
     eee:	8f e2       	ldi	r24, 0x2F	; 47
     ef0:	91 e0       	ldi	r25, 0x01	; 1
     ef2:	0e 94 f3 08 	call	0x11e6	; 0x11e6 <uart_getall>
    printf(GET_REQUEST_STR, "http://erciyas.biz/time.php");
     ef6:	8a e4       	ldi	r24, 0x4A	; 74
     ef8:	92 e0       	ldi	r25, 0x02	; 2
     efa:	9f 93       	push	r25
     efc:	8f 93       	push	r24
     efe:	86 e6       	ldi	r24, 0x66	; 102
     f00:	92 e0       	ldi	r25, 0x02	; 2
     f02:	9f 93       	push	r25
     f04:	8f 93       	push	r24
     f06:	0e 94 75 13 	call	0x26ea	; 0x26ea <printf>
    return uart_getall("CLOSED");
     f0a:	8d b7       	in	r24, 0x3d	; 61
     f0c:	9e b7       	in	r25, 0x3e	; 62
     f0e:	40 96       	adiw	r24, 0x10	; 16
     f10:	0f b6       	in	r0, 0x3f	; 63
     f12:	f8 94       	cli
     f14:	9e bf       	out	0x3e, r25	; 62
     f16:	0f be       	out	0x3f, r0	; 63
     f18:	8d bf       	out	0x3d, r24	; 61
     f1a:	8a e7       	ldi	r24, 0x7A	; 122
     f1c:	92 e0       	ldi	r25, 0x02	; 2
     f1e:	0c 94 f3 08 	jmp	0x11e6	; 0x11e6 <uart_getall>

00000f22 <sync_time>:
#include <stdlib.h>

int second = 0, minute = 0, hour = 0;
int day = 0, month = 0, year = 0;

void sync_time() {
     f22:	cf 93       	push	r28
     f24:	df 93       	push	r29
    char *response;
    char *timevar = malloc(sizeof(char) * 22);
     f26:	86 e1       	ldi	r24, 0x16	; 22
     f28:	90 e0       	ldi	r25, 0x00	; 0
     f2a:	0e 94 0d 11 	call	0x221a	; 0x221a <malloc>
     f2e:	ec 01       	movw	r28, r24
    int offset;
    
    connect_wifi(SSID_NAME, SSID_PASSWORD);
     f30:	61 e8       	ldi	r22, 0x81	; 129
     f32:	72 e0       	ldi	r23, 0x02	; 2
     f34:	86 e8       	ldi	r24, 0x86	; 134
     f36:	92 e0       	ldi	r25, 0x02	; 2
     f38:	0e 94 c5 04 	call	0x98a	; 0x98a <connect_wifi>
    response = make_time_request();
     f3c:	0e 94 59 07 	call	0xeb2	; 0xeb2 <make_time_request>
    
    offset = strstr(response, "<<") - response;
     f40:	6b e8       	ldi	r22, 0x8B	; 139
     f42:	72 e0       	ldi	r23, 0x02	; 2
     f44:	0e 94 29 13 	call	0x2652	; 0x2652 <strstr>
    
    
    strcpy(timevar, &response[offset]);
     f48:	bc 01       	movw	r22, r24
     f4a:	ce 01       	movw	r24, r28
     f4c:	0e 94 17 13 	call	0x262e	; 0x262e <strcpy>
    sscanf(timevar, "<<%d:%d:%d&%d/%d/%d>>", &hour, &minute, &second, &day, &month, &year);
     f50:	24 ea       	ldi	r18, 0xA4	; 164
     f52:	32 e0       	ldi	r19, 0x02	; 2
     f54:	3f 93       	push	r19
     f56:	2f 93       	push	r18
     f58:	26 ea       	ldi	r18, 0xA6	; 166
     f5a:	32 e0       	ldi	r19, 0x02	; 2
     f5c:	3f 93       	push	r19
     f5e:	2f 93       	push	r18
     f60:	28 ea       	ldi	r18, 0xA8	; 168
     f62:	32 e0       	ldi	r19, 0x02	; 2
     f64:	3f 93       	push	r19
     f66:	2f 93       	push	r18
     f68:	2e ea       	ldi	r18, 0xAE	; 174
     f6a:	32 e0       	ldi	r19, 0x02	; 2
     f6c:	3f 93       	push	r19
     f6e:	2f 93       	push	r18
     f70:	2c ea       	ldi	r18, 0xAC	; 172
     f72:	32 e0       	ldi	r19, 0x02	; 2
     f74:	3f 93       	push	r19
     f76:	2f 93       	push	r18
     f78:	2a ea       	ldi	r18, 0xAA	; 170
     f7a:	32 e0       	ldi	r19, 0x02	; 2
     f7c:	3f 93       	push	r19
     f7e:	2f 93       	push	r18
     f80:	2e e8       	ldi	r18, 0x8E	; 142
     f82:	32 e0       	ldi	r19, 0x02	; 2
     f84:	3f 93       	push	r19
     f86:	2f 93       	push	r18
     f88:	df 93       	push	r29
     f8a:	cf 93       	push	r28
     f8c:	0e 94 d8 13 	call	0x27b0	; 0x27b0 <sscanf>
     f90:	8d b7       	in	r24, 0x3d	; 61
     f92:	9e b7       	in	r25, 0x3e	; 62
     f94:	40 96       	adiw	r24, 0x10	; 16
     f96:	0f b6       	in	r0, 0x3f	; 63
     f98:	f8 94       	cli
     f9a:	9e bf       	out	0x3e, r25	; 62
     f9c:	0f be       	out	0x3f, r0	; 63
     f9e:	8d bf       	out	0x3d, r24	; 61
}
     fa0:	df 91       	pop	r29
     fa2:	cf 91       	pop	r28
     fa4:	08 95       	ret

00000fa6 <init_timer>:
    return uart_getall("CLOSED");
}

void init_timer() {
    
    sync_time();
     fa6:	0e 94 91 07 	call	0xf22	; 0xf22 <sync_time>
    
    ASSR |= (1 << AS2);
     faa:	e6 eb       	ldi	r30, 0xB6	; 182
     fac:	f0 e0       	ldi	r31, 0x00	; 0
     fae:	80 81       	ld	r24, Z
     fb0:	80 62       	ori	r24, 0x20	; 32
     fb2:	80 83       	st	Z, r24
    TCCR2B |= (1 << CS22) | (1 << CS20);
     fb4:	e1 eb       	ldi	r30, 0xB1	; 177
     fb6:	f0 e0       	ldi	r31, 0x00	; 0
     fb8:	80 81       	ld	r24, Z
     fba:	85 60       	ori	r24, 0x05	; 5
     fbc:	80 83       	st	Z, r24
    TCNT2 = 0x00;
     fbe:	10 92 b2 00 	sts	0x00B2, r1
    
    TIFR2 |= (1 << TOV2);
     fc2:	b8 9a       	sbi	0x17, 0	; 23
    TIMSK2 |= (1 << TOIE2);
     fc4:	e0 e7       	ldi	r30, 0x70	; 112
     fc6:	f0 e0       	ldi	r31, 0x00	; 0
     fc8:	80 81       	ld	r24, Z
     fca:	81 60       	ori	r24, 0x01	; 1
     fcc:	80 83       	st	Z, r24
     fce:	08 95       	ret

00000fd0 <is_leap_year>:
        month = 1;
    }
    
}

uint8_t is_leap_year(int year) {
     fd0:	9c 01       	movw	r18, r24
    if (year % 100)
     fd2:	64 e6       	ldi	r22, 0x64	; 100
     fd4:	70 e0       	ldi	r23, 0x00	; 0
     fd6:	0e 94 4b 10 	call	0x2096	; 0x2096 <__divmodhi4>
     fda:	89 2b       	or	r24, r25
     fdc:	49 f0       	breq	.+18     	; 0xff0 <is_leap_year+0x20>
        return (year % 400) ? 1 : 0;
     fde:	c9 01       	movw	r24, r18
     fe0:	60 e9       	ldi	r22, 0x90	; 144
     fe2:	71 e0       	ldi	r23, 0x01	; 1
     fe4:	0e 94 4b 10 	call	0x2096	; 0x2096 <__divmodhi4>
     fe8:	41 e0       	ldi	r20, 0x01	; 1
     fea:	89 2b       	or	r24, r25
     fec:	39 f4       	brne	.+14     	; 0xffc <is_leap_year+0x2c>
     fee:	05 c0       	rjmp	.+10     	; 0xffa <is_leap_year+0x2a>
    else
        return (year % 4) ? 1 : 0;
     ff0:	23 70       	andi	r18, 0x03	; 3
     ff2:	33 27       	eor	r19, r19
     ff4:	41 e0       	ldi	r20, 0x01	; 1
     ff6:	23 2b       	or	r18, r19
     ff8:	09 f4       	brne	.+2      	; 0xffc <is_leap_year+0x2c>
     ffa:	40 e0       	ldi	r20, 0x00	; 0
}
     ffc:	84 2f       	mov	r24, r20
     ffe:	08 95       	ret

00001000 <update_rtc>:
    TIMSK2 |= (1 << TOIE2);
    
}

void update_rtc() {
    if (++second == 60) {
    1000:	80 91 ae 02 	lds	r24, 0x02AE
    1004:	90 91 af 02 	lds	r25, 0x02AF
    1008:	01 96       	adiw	r24, 0x01	; 1
    100a:	90 93 af 02 	sts	0x02AF, r25
    100e:	80 93 ae 02 	sts	0x02AE, r24
    1012:	cc 97       	sbiw	r24, 0x3c	; 60
    1014:	69 f4       	brne	.+26     	; 0x1030 <update_rtc+0x30>
        minute++;
    1016:	80 91 ac 02 	lds	r24, 0x02AC
    101a:	90 91 ad 02 	lds	r25, 0x02AD
    101e:	01 96       	adiw	r24, 0x01	; 1
    1020:	90 93 ad 02 	sts	0x02AD, r25
    1024:	80 93 ac 02 	sts	0x02AC, r24
        second = 0;
    1028:	10 92 af 02 	sts	0x02AF, r1
    102c:	10 92 ae 02 	sts	0x02AE, r1
    }
    
    if (minute == 60) {
    1030:	80 91 ac 02 	lds	r24, 0x02AC
    1034:	90 91 ad 02 	lds	r25, 0x02AD
    1038:	cc 97       	sbiw	r24, 0x3c	; 60
    103a:	69 f4       	brne	.+26     	; 0x1056 <update_rtc+0x56>
        hour++;
    103c:	80 91 aa 02 	lds	r24, 0x02AA
    1040:	90 91 ab 02 	lds	r25, 0x02AB
    1044:	01 96       	adiw	r24, 0x01	; 1
    1046:	90 93 ab 02 	sts	0x02AB, r25
    104a:	80 93 aa 02 	sts	0x02AA, r24
        minute = 0;
    104e:	10 92 ad 02 	sts	0x02AD, r1
    1052:	10 92 ac 02 	sts	0x02AC, r1
    }
    
    if (hour == 24) {
    1056:	80 91 aa 02 	lds	r24, 0x02AA
    105a:	90 91 ab 02 	lds	r25, 0x02AB
    105e:	48 97       	sbiw	r24, 0x18	; 24
    1060:	69 f4       	brne	.+26     	; 0x107c <update_rtc+0x7c>
        day++;
    1062:	80 91 a8 02 	lds	r24, 0x02A8
    1066:	90 91 a9 02 	lds	r25, 0x02A9
    106a:	01 96       	adiw	r24, 0x01	; 1
    106c:	90 93 a9 02 	sts	0x02A9, r25
    1070:	80 93 a8 02 	sts	0x02A8, r24
        hour = 0;
    1074:	10 92 ab 02 	sts	0x02AB, r1
    1078:	10 92 aa 02 	sts	0x02AA, r1
    }
    
    if (day == 32) {
    107c:	80 91 a8 02 	lds	r24, 0x02A8
    1080:	90 91 a9 02 	lds	r25, 0x02A9
    1084:	20 91 a6 02 	lds	r18, 0x02A6
    1088:	30 91 a7 02 	lds	r19, 0x02A7
    108c:	80 32       	cpi	r24, 0x20	; 32
    108e:	91 05       	cpc	r25, r1
    1090:	39 f4       	brne	.+14     	; 0x10a0 <update_rtc+0xa0>
        month++;
    1092:	2f 5f       	subi	r18, 0xFF	; 255
    1094:	3f 4f       	sbci	r19, 0xFF	; 255
    1096:	30 93 a7 02 	sts	0x02A7, r19
    109a:	20 93 a6 02 	sts	0x02A6, r18
    109e:	1f c0       	rjmp	.+62     	; 0x10de <update_rtc+0xde>
        day = 1;
    } else if ((day == 31) && (month == 4 || month == 6 || month == 9 || month == 11)) {
    10a0:	8f 31       	cpi	r24, 0x1F	; 31
    10a2:	91 05       	cpc	r25, r1
    10a4:	41 f4       	brne	.+16     	; 0x10b6 <update_rtc+0xb6>
    10a6:	a9 01       	movw	r20, r18
    10a8:	4d 7f       	andi	r20, 0xFD	; 253
    10aa:	44 30       	cpi	r20, 0x04	; 4
    10ac:	51 05       	cpc	r21, r1
    10ae:	89 f3       	breq	.-30     	; 0x1092 <update_rtc+0x92>
    10b0:	49 30       	cpi	r20, 0x09	; 9
    10b2:	51 05       	cpc	r21, r1
    10b4:	71 f3       	breq	.-36     	; 0x1092 <update_rtc+0x92>
        month++;
        day = 1;
    } else if ((month == 2) && (day == 29) && !is_leap_year(year)) {
    10b6:	22 30       	cpi	r18, 0x02	; 2
    10b8:	31 05       	cpc	r19, r1
    10ba:	d1 f4       	brne	.+52     	; 0x10f0 <update_rtc+0xf0>
    10bc:	8d 31       	cpi	r24, 0x1D	; 29
    10be:	91 05       	cpc	r25, r1
    10c0:	a9 f4       	brne	.+42     	; 0x10ec <update_rtc+0xec>
    10c2:	80 91 a4 02 	lds	r24, 0x02A4
    10c6:	90 91 a5 02 	lds	r25, 0x02A5
    10ca:	0e 94 e8 07 	call	0xfd0	; 0xfd0 <is_leap_year>
    10ce:	81 11       	cpse	r24, r1
    10d0:	0f c0       	rjmp	.+30     	; 0x10f0 <update_rtc+0xf0>
        month++;
    10d2:	83 e0       	ldi	r24, 0x03	; 3
    10d4:	90 e0       	ldi	r25, 0x00	; 0
    10d6:	90 93 a7 02 	sts	0x02A7, r25
    10da:	80 93 a6 02 	sts	0x02A6, r24
        day = 1;
    10de:	81 e0       	ldi	r24, 0x01	; 1
    10e0:	90 e0       	ldi	r25, 0x00	; 0
    10e2:	90 93 a9 02 	sts	0x02A9, r25
    10e6:	80 93 a8 02 	sts	0x02A8, r24
    10ea:	02 c0       	rjmp	.+4      	; 0x10f0 <update_rtc+0xf0>
    } else if ((month == 2) && (day == 30)) {
    10ec:	4e 97       	sbiw	r24, 0x1e	; 30
    10ee:	89 f3       	breq	.-30     	; 0x10d2 <update_rtc+0xd2>
        month++;
        day = 1;
    }
    
    if (month == 13) {
    10f0:	80 91 a6 02 	lds	r24, 0x02A6
    10f4:	90 91 a7 02 	lds	r25, 0x02A7
    10f8:	0d 97       	sbiw	r24, 0x0d	; 13
    10fa:	79 f4       	brne	.+30     	; 0x111a <update_rtc+0x11a>
        year++;
    10fc:	80 91 a4 02 	lds	r24, 0x02A4
    1100:	90 91 a5 02 	lds	r25, 0x02A5
    1104:	01 96       	adiw	r24, 0x01	; 1
    1106:	90 93 a5 02 	sts	0x02A5, r25
    110a:	80 93 a4 02 	sts	0x02A4, r24
        month = 1;
    110e:	81 e0       	ldi	r24, 0x01	; 1
    1110:	90 e0       	ldi	r25, 0x00	; 0
    1112:	90 93 a7 02 	sts	0x02A7, r25
    1116:	80 93 a6 02 	sts	0x02A6, r24
    111a:	08 95       	ret

0000111c <get_second>:
        return (year % 4) ? 1 : 0;
}

int get_second() {
    return second;
}
    111c:	80 91 ae 02 	lds	r24, 0x02AE
    1120:	90 91 af 02 	lds	r25, 0x02AF
    1124:	08 95       	ret

00001126 <get_minute>:

int get_minute() {
    return minute;
}
    1126:	80 91 ac 02 	lds	r24, 0x02AC
    112a:	90 91 ad 02 	lds	r25, 0x02AD
    112e:	08 95       	ret

00001130 <get_hour>:

int get_hour() {
    return hour;
}
    1130:	80 91 aa 02 	lds	r24, 0x02AA
    1134:	90 91 ab 02 	lds	r25, 0x02AB
    1138:	08 95       	ret

0000113a <get_day>:

int get_day() {
    return day;
}
    113a:	80 91 a8 02 	lds	r24, 0x02A8
    113e:	90 91 a9 02 	lds	r25, 0x02A9
    1142:	08 95       	ret

00001144 <get_month>:

int get_month() {
    return month;
}
    1144:	80 91 a6 02 	lds	r24, 0x02A6
    1148:	90 91 a7 02 	lds	r25, 0x02A7
    114c:	08 95       	ret

0000114e <get_year>:

int get_year() {
    return year;
}
    114e:	80 91 a4 02 	lds	r24, 0x02A4
    1152:	90 91 a5 02 	lds	r25, 0x02A5
    1156:	08 95       	ret

00001158 <uart_init>:
#include <util/delay.h>


void uart_init(int baudrate) {
    
    uint16_t UBRR = F_CPU / 16 / baudrate - 1;
    1158:	9c 01       	movw	r18, r24
    115a:	44 27       	eor	r20, r20
    115c:	37 fd       	sbrc	r19, 7
    115e:	40 95       	com	r20
    1160:	54 2f       	mov	r21, r20
    1162:	60 e2       	ldi	r22, 0x20	; 32
    1164:	71 ea       	ldi	r23, 0xA1	; 161
    1166:	87 e0       	ldi	r24, 0x07	; 7
    1168:	90 e0       	ldi	r25, 0x00	; 0
    116a:	0e 94 5f 10 	call	0x20be	; 0x20be <__udivmodsi4>
    116e:	21 50       	subi	r18, 0x01	; 1
    1170:	31 09       	sbc	r19, r1
    
    UBRR0H = (uint8_t) (UBRR >> 8);
    1172:	30 93 c5 00 	sts	0x00C5, r19
    UBRR0L = (uint8_t) UBRR;
    1176:	20 93 c4 00 	sts	0x00C4, r18
    
    UCSR0B |= (1<<TXEN0) | (1<<RXEN0);
    117a:	e1 ec       	ldi	r30, 0xC1	; 193
    117c:	f0 e0       	ldi	r31, 0x00	; 0
    117e:	80 81       	ld	r24, Z
    1180:	88 61       	ori	r24, 0x18	; 24
    1182:	80 83       	st	Z, r24
    UCSR0C |= (0<<USBS0) | (1 << UCSZ01) | (1 << UCSZ00);
    1184:	e2 ec       	ldi	r30, 0xC2	; 194
    1186:	f0 e0       	ldi	r31, 0x00	; 0
    1188:	80 81       	ld	r24, Z
    118a:	86 60       	ori	r24, 0x06	; 6
    118c:	80 83       	st	Z, r24
    118e:	08 95       	ret

00001190 <send_uart_char>:
    
}

void send_uart_char(unsigned char serial_data, FILE *stream) {
    
    if (serial_data == '\0') { // Send each byte until reached \n character
    1190:	81 11       	cpse	r24, r1
    1192:	04 c0       	rjmp	.+8      	; 0x119c <send_uart_char+0xc>
        send_uart_char('\r', stream);
    1194:	8d e0       	ldi	r24, 0x0D	; 13
    1196:	0e 94 c8 08 	call	0x1190	; 0x1190 <send_uart_char>
        send_uart_char('\n', stream);
    119a:	8a e0       	ldi	r24, 0x0A	; 10
        return;
    }
    
    while (!(UCSR0A & (1 << UDRE0)));
    119c:	90 91 c0 00 	lds	r25, 0x00C0
    11a0:	95 ff       	sbrs	r25, 5
    11a2:	fc cf       	rjmp	.-8      	; 0x119c <send_uart_char+0xc>
    UDR0 = serial_data;
    11a4:	80 93 c6 00 	sts	0x00C6, r24
    11a8:	08 95       	ret

000011aa <receive_uart_char>:
}

char receive_uart_char(void) {
    
    while (!(UCSR0A & (1<<RXC0)));
    11aa:	80 91 c0 00 	lds	r24, 0x00C0
    11ae:	87 ff       	sbrs	r24, 7
    11b0:	fc cf       	rjmp	.-8      	; 0x11aa <receive_uart_char>
    
    return UDR0;
    11b2:	80 91 c6 00 	lds	r24, 0x00C6
}
    11b6:	08 95       	ret

000011b8 <uart_receive>:


int uart_receive(char *buffer) {
    11b8:	0f 93       	push	r16
    11ba:	1f 93       	push	r17
    11bc:	cf 93       	push	r28
    11be:	df 93       	push	r29
    11c0:	8c 01       	movw	r16, r24
    11c2:	ec 01       	movw	r28, r24
    11c4:	ce 01       	movw	r24, r28
    11c6:	80 1b       	sub	r24, r16
    11c8:	91 0b       	sbc	r25, r17
    char received;
    
    int i = 0;
    
    while (1) {
        if (received == '\n' || received == '\r') break;
    11ca:	2a 30       	cpi	r18, 0x0A	; 10
    11cc:	39 f0       	breq	.+14     	; 0x11dc <uart_receive+0x24>
    11ce:	2d 30       	cpi	r18, 0x0D	; 13
    11d0:	29 f0       	breq	.+10     	; 0x11dc <uart_receive+0x24>
        received = receive_uart_char();
    11d2:	0e 94 d5 08 	call	0x11aa	; 0x11aa <receive_uart_char>
    11d6:	28 2f       	mov	r18, r24
        buffer[i++] = received;
    11d8:	89 93       	st	Y+, r24
    }
    11da:	f4 cf       	rjmp	.-24     	; 0x11c4 <uart_receive+0xc>
    
    return i;
    
}
    11dc:	df 91       	pop	r29
    11de:	cf 91       	pop	r28
    11e0:	1f 91       	pop	r17
    11e2:	0f 91       	pop	r16
    11e4:	08 95       	ret

000011e6 <uart_getall>:
    11e6:	7f 92       	push	r7
    11e8:	8f 92       	push	r8
    11ea:	9f 92       	push	r9
    11ec:	af 92       	push	r10
    11ee:	bf 92       	push	r11
    11f0:	cf 92       	push	r12
    11f2:	df 92       	push	r13
    11f4:	ef 92       	push	r14
    11f6:	ff 92       	push	r15
    11f8:	0f 93       	push	r16
    11fa:	1f 93       	push	r17
    11fc:	cf 93       	push	r28
    11fe:	df 93       	push	r29
    1200:	cd b7       	in	r28, 0x3d	; 61
    1202:	de b7       	in	r29, 0x3e	; 62
    1204:	c0 52       	subi	r28, 0x20	; 32
    1206:	d2 40       	sbci	r29, 0x02	; 2
    1208:	0f b6       	in	r0, 0x3f	; 63
    120a:	f8 94       	cli
    120c:	de bf       	out	0x3e, r29	; 62
    120e:	0f be       	out	0x3f, r0	; 63
    1210:	cd bf       	out	0x3d, r28	; 61
    1212:	4c 01       	movw	r8, r24
    1214:	9e 01       	movw	r18, r28
    1216:	2f 5f       	subi	r18, 0xFF	; 255
    1218:	3f 4f       	sbci	r19, 0xFF	; 255
    121a:	79 01       	movw	r14, r18
    121c:	80 e0       	ldi	r24, 0x00	; 0
    121e:	92 e0       	ldi	r25, 0x02	; 2
    1220:	f9 01       	movw	r30, r18
    1222:	9c 01       	movw	r18, r24
    1224:	11 92       	st	Z+, r1
    1226:	21 50       	subi	r18, 0x01	; 1
    1228:	30 40       	sbci	r19, 0x00	; 0
    122a:	e1 f7       	brne	.-8      	; 0x1224 <uart_getall+0x3e>
    122c:	8e 01       	movw	r16, r28
    122e:	0f 5f       	subi	r16, 0xFF	; 255
    1230:	1d 4f       	sbci	r17, 0xFD	; 253
    1232:	80 e2       	ldi	r24, 0x20	; 32
    1234:	f8 01       	movw	r30, r16
    1236:	11 92       	st	Z+, r1
    1238:	8a 95       	dec	r24
    123a:	e9 f7       	brne	.-6      	; 0x1236 <uart_getall+0x50>
    123c:	c1 2c       	mov	r12, r1
    123e:	d1 2c       	mov	r13, r1
    1240:	80 e2       	ldi	r24, 0x20	; 32
    1242:	78 2e       	mov	r7, r24
    1244:	c8 01       	movw	r24, r16
    1246:	0e 94 dc 08 	call	0x11b8	; 0x11b8 <uart_receive>
    124a:	5c 01       	movw	r10, r24
    124c:	00 97       	sbiw	r24, 0x00	; 0
    124e:	d9 f0       	breq	.+54     	; 0x1286 <uart_getall+0xa0>
    1250:	b4 01       	movw	r22, r8
    1252:	c8 01       	movw	r24, r16
    1254:	0e 94 29 13 	call	0x2652	; 0x2652 <strstr>
    1258:	89 2b       	or	r24, r25
    125a:	a9 f4       	brne	.+42     	; 0x1286 <uart_getall+0xa0>
    125c:	1f 93       	push	r17
    125e:	0f 93       	push	r16
    1260:	c7 01       	movw	r24, r14
    1262:	8c 0d       	add	r24, r12
    1264:	9d 1d       	adc	r25, r13
    1266:	9f 93       	push	r25
    1268:	8f 93       	push	r24
    126a:	0e 94 b6 13 	call	0x276c	; 0x276c <sprintf>
    126e:	f8 01       	movw	r30, r16
    1270:	27 2d       	mov	r18, r7
    1272:	11 92       	st	Z+, r1
    1274:	2a 95       	dec	r18
    1276:	e9 f7       	brne	.-6      	; 0x1272 <uart_getall+0x8c>
    1278:	ca 0c       	add	r12, r10
    127a:	db 1c       	adc	r13, r11
    127c:	0f 90       	pop	r0
    127e:	0f 90       	pop	r0
    1280:	0f 90       	pop	r0
    1282:	0f 90       	pop	r0
    1284:	df cf       	rjmp	.-66     	; 0x1244 <uart_getall+0x5e>
    1286:	c7 01       	movw	r24, r14
    1288:	c0 5e       	subi	r28, 0xE0	; 224
    128a:	dd 4f       	sbci	r29, 0xFD	; 253
    128c:	0f b6       	in	r0, 0x3f	; 63
    128e:	f8 94       	cli
    1290:	de bf       	out	0x3e, r29	; 62
    1292:	0f be       	out	0x3f, r0	; 63
    1294:	cd bf       	out	0x3d, r28	; 61
    1296:	df 91       	pop	r29
    1298:	cf 91       	pop	r28
    129a:	1f 91       	pop	r17
    129c:	0f 91       	pop	r16
    129e:	ff 90       	pop	r15
    12a0:	ef 90       	pop	r14
    12a2:	df 90       	pop	r13
    12a4:	cf 90       	pop	r12
    12a6:	bf 90       	pop	r11
    12a8:	af 90       	pop	r10
    12aa:	9f 90       	pop	r9
    12ac:	8f 90       	pop	r8
    12ae:	7f 90       	pop	r7
    12b0:	08 95       	ret

000012b2 <main>:



int main(void) {
    
    stdout = &uart_output;
    12b2:	80 e0       	ldi	r24, 0x00	; 0
    12b4:	91 e0       	ldi	r25, 0x01	; 1
    12b6:	90 93 e9 02 	sts	0x02E9, r25
    12ba:	80 93 e8 02 	sts	0x02E8, r24
    
    lcd_buffer = malloc(sizeof(char *) * 20);
    12be:	88 e2       	ldi	r24, 0x28	; 40
    12c0:	90 e0       	ldi	r25, 0x00	; 0
    12c2:	0e 94 0d 11 	call	0x221a	; 0x221a <malloc>
    12c6:	90 93 e1 02 	sts	0x02E1, r25
    12ca:	80 93 e0 02 	sts	0x02E0, r24
    
    system_init();
    12ce:	0e 94 12 07 	call	0xe24	; 0xe24 <system_init>
    
    while (1) {
        update_display();
    12d2:	0e 94 93 06 	call	0xd26	; 0xd26 <update_display>
    12d6:	fd cf       	rjmp	.-6      	; 0x12d2 <main+0x20>

000012d8 <vfprintf>:
    12d8:	a3 e1       	ldi	r26, 0x13	; 19
    12da:	b0 e0       	ldi	r27, 0x00	; 0
    12dc:	e2 e7       	ldi	r30, 0x72	; 114
    12de:	f9 e0       	ldi	r31, 0x09	; 9
    12e0:	0c 94 b3 10 	jmp	0x2166	; 0x2166 <__prologue_saves__>
    12e4:	7c 01       	movw	r14, r24
    12e6:	1b 01       	movw	r2, r22
    12e8:	6a 01       	movw	r12, r20
    12ea:	fc 01       	movw	r30, r24
    12ec:	17 82       	std	Z+7, r1	; 0x07
    12ee:	16 82       	std	Z+6, r1	; 0x06
    12f0:	83 81       	ldd	r24, Z+3	; 0x03
    12f2:	81 ff       	sbrs	r24, 1
    12f4:	66 c3       	rjmp	.+1740   	; 0x19c2 <vfprintf+0x6ea>
    12f6:	be 01       	movw	r22, r28
    12f8:	6f 5f       	subi	r22, 0xFF	; 255
    12fa:	7f 4f       	sbci	r23, 0xFF	; 255
    12fc:	4b 01       	movw	r8, r22
    12fe:	f7 01       	movw	r30, r14
    1300:	93 81       	ldd	r25, Z+3	; 0x03
    1302:	f1 01       	movw	r30, r2
    1304:	93 fd       	sbrc	r25, 3
    1306:	85 91       	lpm	r24, Z+
    1308:	93 ff       	sbrs	r25, 3
    130a:	81 91       	ld	r24, Z+
    130c:	1f 01       	movw	r2, r30
    130e:	88 23       	and	r24, r24
    1310:	09 f4       	brne	.+2      	; 0x1314 <vfprintf+0x3c>
    1312:	53 c3       	rjmp	.+1702   	; 0x19ba <vfprintf+0x6e2>
    1314:	85 32       	cpi	r24, 0x25	; 37
    1316:	39 f4       	brne	.+14     	; 0x1326 <vfprintf+0x4e>
    1318:	93 fd       	sbrc	r25, 3
    131a:	85 91       	lpm	r24, Z+
    131c:	93 ff       	sbrs	r25, 3
    131e:	81 91       	ld	r24, Z+
    1320:	1f 01       	movw	r2, r30
    1322:	85 32       	cpi	r24, 0x25	; 37
    1324:	39 f4       	brne	.+14     	; 0x1334 <vfprintf+0x5c>
    1326:	b7 01       	movw	r22, r14
    1328:	90 e0       	ldi	r25, 0x00	; 0
    132a:	0e 94 43 13 	call	0x2686	; 0x2686 <fputc>
    132e:	56 01       	movw	r10, r12
    1330:	65 01       	movw	r12, r10
    1332:	e5 cf       	rjmp	.-54     	; 0x12fe <vfprintf+0x26>
    1334:	10 e0       	ldi	r17, 0x00	; 0
    1336:	51 2c       	mov	r5, r1
    1338:	20 e0       	ldi	r18, 0x00	; 0
    133a:	20 32       	cpi	r18, 0x20	; 32
    133c:	a0 f4       	brcc	.+40     	; 0x1366 <vfprintf+0x8e>
    133e:	8b 32       	cpi	r24, 0x2B	; 43
    1340:	69 f0       	breq	.+26     	; 0x135c <vfprintf+0x84>
    1342:	30 f4       	brcc	.+12     	; 0x1350 <vfprintf+0x78>
    1344:	80 32       	cpi	r24, 0x20	; 32
    1346:	59 f0       	breq	.+22     	; 0x135e <vfprintf+0x86>
    1348:	83 32       	cpi	r24, 0x23	; 35
    134a:	69 f4       	brne	.+26     	; 0x1366 <vfprintf+0x8e>
    134c:	20 61       	ori	r18, 0x10	; 16
    134e:	2c c0       	rjmp	.+88     	; 0x13a8 <vfprintf+0xd0>
    1350:	8d 32       	cpi	r24, 0x2D	; 45
    1352:	39 f0       	breq	.+14     	; 0x1362 <vfprintf+0x8a>
    1354:	80 33       	cpi	r24, 0x30	; 48
    1356:	39 f4       	brne	.+14     	; 0x1366 <vfprintf+0x8e>
    1358:	21 60       	ori	r18, 0x01	; 1
    135a:	26 c0       	rjmp	.+76     	; 0x13a8 <vfprintf+0xd0>
    135c:	22 60       	ori	r18, 0x02	; 2
    135e:	24 60       	ori	r18, 0x04	; 4
    1360:	23 c0       	rjmp	.+70     	; 0x13a8 <vfprintf+0xd0>
    1362:	28 60       	ori	r18, 0x08	; 8
    1364:	21 c0       	rjmp	.+66     	; 0x13a8 <vfprintf+0xd0>
    1366:	27 fd       	sbrc	r18, 7
    1368:	27 c0       	rjmp	.+78     	; 0x13b8 <vfprintf+0xe0>
    136a:	30 ed       	ldi	r19, 0xD0	; 208
    136c:	38 0f       	add	r19, r24
    136e:	3a 30       	cpi	r19, 0x0A	; 10
    1370:	78 f4       	brcc	.+30     	; 0x1390 <vfprintf+0xb8>
    1372:	26 ff       	sbrs	r18, 6
    1374:	06 c0       	rjmp	.+12     	; 0x1382 <vfprintf+0xaa>
    1376:	fa e0       	ldi	r31, 0x0A	; 10
    1378:	1f 9f       	mul	r17, r31
    137a:	30 0d       	add	r19, r0
    137c:	11 24       	eor	r1, r1
    137e:	13 2f       	mov	r17, r19
    1380:	13 c0       	rjmp	.+38     	; 0x13a8 <vfprintf+0xd0>
    1382:	6a e0       	ldi	r22, 0x0A	; 10
    1384:	56 9e       	mul	r5, r22
    1386:	30 0d       	add	r19, r0
    1388:	11 24       	eor	r1, r1
    138a:	53 2e       	mov	r5, r19
    138c:	20 62       	ori	r18, 0x20	; 32
    138e:	0c c0       	rjmp	.+24     	; 0x13a8 <vfprintf+0xd0>
    1390:	8e 32       	cpi	r24, 0x2E	; 46
    1392:	21 f4       	brne	.+8      	; 0x139c <vfprintf+0xc4>
    1394:	26 fd       	sbrc	r18, 6
    1396:	11 c3       	rjmp	.+1570   	; 0x19ba <vfprintf+0x6e2>
    1398:	20 64       	ori	r18, 0x40	; 64
    139a:	06 c0       	rjmp	.+12     	; 0x13a8 <vfprintf+0xd0>
    139c:	8c 36       	cpi	r24, 0x6C	; 108
    139e:	11 f4       	brne	.+4      	; 0x13a4 <vfprintf+0xcc>
    13a0:	20 68       	ori	r18, 0x80	; 128
    13a2:	02 c0       	rjmp	.+4      	; 0x13a8 <vfprintf+0xd0>
    13a4:	88 36       	cpi	r24, 0x68	; 104
    13a6:	41 f4       	brne	.+16     	; 0x13b8 <vfprintf+0xe0>
    13a8:	f1 01       	movw	r30, r2
    13aa:	93 fd       	sbrc	r25, 3
    13ac:	85 91       	lpm	r24, Z+
    13ae:	93 ff       	sbrs	r25, 3
    13b0:	81 91       	ld	r24, Z+
    13b2:	1f 01       	movw	r2, r30
    13b4:	81 11       	cpse	r24, r1
    13b6:	c1 cf       	rjmp	.-126    	; 0x133a <vfprintf+0x62>
    13b8:	9b eb       	ldi	r25, 0xBB	; 187
    13ba:	98 0f       	add	r25, r24
    13bc:	93 30       	cpi	r25, 0x03	; 3
    13be:	18 f4       	brcc	.+6      	; 0x13c6 <vfprintf+0xee>
    13c0:	20 61       	ori	r18, 0x10	; 16
    13c2:	80 5e       	subi	r24, 0xE0	; 224
    13c4:	06 c0       	rjmp	.+12     	; 0x13d2 <vfprintf+0xfa>
    13c6:	9b e9       	ldi	r25, 0x9B	; 155
    13c8:	98 0f       	add	r25, r24
    13ca:	93 30       	cpi	r25, 0x03	; 3
    13cc:	08 f0       	brcs	.+2      	; 0x13d0 <vfprintf+0xf8>
    13ce:	aa c1       	rjmp	.+852    	; 0x1724 <vfprintf+0x44c>
    13d0:	2f 7e       	andi	r18, 0xEF	; 239
    13d2:	26 ff       	sbrs	r18, 6
    13d4:	16 e0       	ldi	r17, 0x06	; 6
    13d6:	2f 73       	andi	r18, 0x3F	; 63
    13d8:	72 2e       	mov	r7, r18
    13da:	85 36       	cpi	r24, 0x65	; 101
    13dc:	21 f4       	brne	.+8      	; 0x13e6 <vfprintf+0x10e>
    13de:	f2 2f       	mov	r31, r18
    13e0:	f0 64       	ori	r31, 0x40	; 64
    13e2:	7f 2e       	mov	r7, r31
    13e4:	08 c0       	rjmp	.+16     	; 0x13f6 <vfprintf+0x11e>
    13e6:	86 36       	cpi	r24, 0x66	; 102
    13e8:	21 f4       	brne	.+8      	; 0x13f2 <vfprintf+0x11a>
    13ea:	62 2f       	mov	r22, r18
    13ec:	60 68       	ori	r22, 0x80	; 128
    13ee:	76 2e       	mov	r7, r22
    13f0:	02 c0       	rjmp	.+4      	; 0x13f6 <vfprintf+0x11e>
    13f2:	11 11       	cpse	r17, r1
    13f4:	11 50       	subi	r17, 0x01	; 1
    13f6:	77 fe       	sbrs	r7, 7
    13f8:	07 c0       	rjmp	.+14     	; 0x1408 <vfprintf+0x130>
    13fa:	1c 33       	cpi	r17, 0x3C	; 60
    13fc:	48 f4       	brcc	.+18     	; 0x1410 <vfprintf+0x138>
    13fe:	44 24       	eor	r4, r4
    1400:	43 94       	inc	r4
    1402:	41 0e       	add	r4, r17
    1404:	27 e0       	ldi	r18, 0x07	; 7
    1406:	0b c0       	rjmp	.+22     	; 0x141e <vfprintf+0x146>
    1408:	18 30       	cpi	r17, 0x08	; 8
    140a:	30 f4       	brcc	.+12     	; 0x1418 <vfprintf+0x140>
    140c:	21 2f       	mov	r18, r17
    140e:	06 c0       	rjmp	.+12     	; 0x141c <vfprintf+0x144>
    1410:	27 e0       	ldi	r18, 0x07	; 7
    1412:	4c e3       	ldi	r20, 0x3C	; 60
    1414:	44 2e       	mov	r4, r20
    1416:	03 c0       	rjmp	.+6      	; 0x141e <vfprintf+0x146>
    1418:	27 e0       	ldi	r18, 0x07	; 7
    141a:	17 e0       	ldi	r17, 0x07	; 7
    141c:	41 2c       	mov	r4, r1
    141e:	56 01       	movw	r10, r12
    1420:	74 e0       	ldi	r23, 0x04	; 4
    1422:	a7 0e       	add	r10, r23
    1424:	b1 1c       	adc	r11, r1
    1426:	f6 01       	movw	r30, r12
    1428:	60 81       	ld	r22, Z
    142a:	71 81       	ldd	r23, Z+1	; 0x01
    142c:	82 81       	ldd	r24, Z+2	; 0x02
    142e:	93 81       	ldd	r25, Z+3	; 0x03
    1430:	04 2d       	mov	r16, r4
    1432:	a4 01       	movw	r20, r8
    1434:	0e 94 34 12 	call	0x2468	; 0x2468 <__ftoa_engine>
    1438:	6c 01       	movw	r12, r24
    143a:	09 81       	ldd	r16, Y+1	; 0x01
    143c:	00 ff       	sbrs	r16, 0
    143e:	02 c0       	rjmp	.+4      	; 0x1444 <vfprintf+0x16c>
    1440:	03 ff       	sbrs	r16, 3
    1442:	06 c0       	rjmp	.+12     	; 0x1450 <vfprintf+0x178>
    1444:	71 fc       	sbrc	r7, 1
    1446:	07 c0       	rjmp	.+14     	; 0x1456 <vfprintf+0x17e>
    1448:	72 fc       	sbrc	r7, 2
    144a:	08 c0       	rjmp	.+16     	; 0x145c <vfprintf+0x184>
    144c:	61 2c       	mov	r6, r1
    144e:	08 c0       	rjmp	.+16     	; 0x1460 <vfprintf+0x188>
    1450:	3d e2       	ldi	r19, 0x2D	; 45
    1452:	63 2e       	mov	r6, r19
    1454:	05 c0       	rjmp	.+10     	; 0x1460 <vfprintf+0x188>
    1456:	2b e2       	ldi	r18, 0x2B	; 43
    1458:	62 2e       	mov	r6, r18
    145a:	02 c0       	rjmp	.+4      	; 0x1460 <vfprintf+0x188>
    145c:	90 e2       	ldi	r25, 0x20	; 32
    145e:	69 2e       	mov	r6, r25
    1460:	80 2f       	mov	r24, r16
    1462:	8c 70       	andi	r24, 0x0C	; 12
    1464:	99 f1       	breq	.+102    	; 0x14cc <vfprintf+0x1f4>
    1466:	66 20       	and	r6, r6
    1468:	11 f0       	breq	.+4      	; 0x146e <vfprintf+0x196>
    146a:	84 e0       	ldi	r24, 0x04	; 4
    146c:	01 c0       	rjmp	.+2      	; 0x1470 <vfprintf+0x198>
    146e:	83 e0       	ldi	r24, 0x03	; 3
    1470:	85 15       	cp	r24, r5
    1472:	10 f0       	brcs	.+4      	; 0x1478 <vfprintf+0x1a0>
    1474:	51 2c       	mov	r5, r1
    1476:	0b c0       	rjmp	.+22     	; 0x148e <vfprintf+0x1b6>
    1478:	58 1a       	sub	r5, r24
    147a:	73 fc       	sbrc	r7, 3
    147c:	08 c0       	rjmp	.+16     	; 0x148e <vfprintf+0x1b6>
    147e:	b7 01       	movw	r22, r14
    1480:	80 e2       	ldi	r24, 0x20	; 32
    1482:	90 e0       	ldi	r25, 0x00	; 0
    1484:	0e 94 43 13 	call	0x2686	; 0x2686 <fputc>
    1488:	5a 94       	dec	r5
    148a:	c9 f7       	brne	.-14     	; 0x147e <vfprintf+0x1a6>
    148c:	f3 cf       	rjmp	.-26     	; 0x1474 <vfprintf+0x19c>
    148e:	66 20       	and	r6, r6
    1490:	29 f0       	breq	.+10     	; 0x149c <vfprintf+0x1c4>
    1492:	b7 01       	movw	r22, r14
    1494:	86 2d       	mov	r24, r6
    1496:	90 e0       	ldi	r25, 0x00	; 0
    1498:	0e 94 43 13 	call	0x2686	; 0x2686 <fputc>
    149c:	03 fd       	sbrc	r16, 3
    149e:	03 c0       	rjmp	.+6      	; 0x14a6 <vfprintf+0x1ce>
    14a0:	0e ee       	ldi	r16, 0xEE	; 238
    14a2:	10 e0       	ldi	r17, 0x00	; 0
    14a4:	02 c0       	rjmp	.+4      	; 0x14aa <vfprintf+0x1d2>
    14a6:	0a ee       	ldi	r16, 0xEA	; 234
    14a8:	10 e0       	ldi	r17, 0x00	; 0
    14aa:	f7 2d       	mov	r31, r7
    14ac:	f0 71       	andi	r31, 0x10	; 16
    14ae:	7f 2e       	mov	r7, r31
    14b0:	f8 01       	movw	r30, r16
    14b2:	84 91       	lpm	r24, Z
    14b4:	88 23       	and	r24, r24
    14b6:	09 f4       	brne	.+2      	; 0x14ba <vfprintf+0x1e2>
    14b8:	76 c2       	rjmp	.+1260   	; 0x19a6 <vfprintf+0x6ce>
    14ba:	71 10       	cpse	r7, r1
    14bc:	80 52       	subi	r24, 0x20	; 32
    14be:	b7 01       	movw	r22, r14
    14c0:	90 e0       	ldi	r25, 0x00	; 0
    14c2:	0e 94 43 13 	call	0x2686	; 0x2686 <fputc>
    14c6:	0f 5f       	subi	r16, 0xFF	; 255
    14c8:	1f 4f       	sbci	r17, 0xFF	; 255
    14ca:	f2 cf       	rjmp	.-28     	; 0x14b0 <vfprintf+0x1d8>
    14cc:	77 fe       	sbrs	r7, 7
    14ce:	0f c0       	rjmp	.+30     	; 0x14ee <vfprintf+0x216>
    14d0:	4c 0c       	add	r4, r12
    14d2:	04 ff       	sbrs	r16, 4
    14d4:	04 c0       	rjmp	.+8      	; 0x14de <vfprintf+0x206>
    14d6:	8a 81       	ldd	r24, Y+2	; 0x02
    14d8:	81 33       	cpi	r24, 0x31	; 49
    14da:	09 f4       	brne	.+2      	; 0x14de <vfprintf+0x206>
    14dc:	4a 94       	dec	r4
    14de:	14 14       	cp	r1, r4
    14e0:	74 f5       	brge	.+92     	; 0x153e <vfprintf+0x266>
    14e2:	f8 e0       	ldi	r31, 0x08	; 8
    14e4:	f4 15       	cp	r31, r4
    14e6:	78 f5       	brcc	.+94     	; 0x1546 <vfprintf+0x26e>
    14e8:	88 e0       	ldi	r24, 0x08	; 8
    14ea:	48 2e       	mov	r4, r24
    14ec:	2c c0       	rjmp	.+88     	; 0x1546 <vfprintf+0x26e>
    14ee:	76 fc       	sbrc	r7, 6
    14f0:	2a c0       	rjmp	.+84     	; 0x1546 <vfprintf+0x26e>
    14f2:	81 2f       	mov	r24, r17
    14f4:	90 e0       	ldi	r25, 0x00	; 0
    14f6:	8c 15       	cp	r24, r12
    14f8:	9d 05       	cpc	r25, r13
    14fa:	9c f0       	brlt	.+38     	; 0x1522 <vfprintf+0x24a>
    14fc:	6c ef       	ldi	r22, 0xFC	; 252
    14fe:	c6 16       	cp	r12, r22
    1500:	6f ef       	ldi	r22, 0xFF	; 255
    1502:	d6 06       	cpc	r13, r22
    1504:	74 f0       	brlt	.+28     	; 0x1522 <vfprintf+0x24a>
    1506:	77 2d       	mov	r23, r7
    1508:	70 68       	ori	r23, 0x80	; 128
    150a:	77 2e       	mov	r7, r23
    150c:	0a c0       	rjmp	.+20     	; 0x1522 <vfprintf+0x24a>
    150e:	e2 e0       	ldi	r30, 0x02	; 2
    1510:	f0 e0       	ldi	r31, 0x00	; 0
    1512:	ec 0f       	add	r30, r28
    1514:	fd 1f       	adc	r31, r29
    1516:	e1 0f       	add	r30, r17
    1518:	f1 1d       	adc	r31, r1
    151a:	80 81       	ld	r24, Z
    151c:	80 33       	cpi	r24, 0x30	; 48
    151e:	19 f4       	brne	.+6      	; 0x1526 <vfprintf+0x24e>
    1520:	11 50       	subi	r17, 0x01	; 1
    1522:	11 11       	cpse	r17, r1
    1524:	f4 cf       	rjmp	.-24     	; 0x150e <vfprintf+0x236>
    1526:	77 fe       	sbrs	r7, 7
    1528:	0e c0       	rjmp	.+28     	; 0x1546 <vfprintf+0x26e>
    152a:	44 24       	eor	r4, r4
    152c:	43 94       	inc	r4
    152e:	41 0e       	add	r4, r17
    1530:	81 2f       	mov	r24, r17
    1532:	90 e0       	ldi	r25, 0x00	; 0
    1534:	c8 16       	cp	r12, r24
    1536:	d9 06       	cpc	r13, r25
    1538:	2c f4       	brge	.+10     	; 0x1544 <vfprintf+0x26c>
    153a:	1c 19       	sub	r17, r12
    153c:	04 c0       	rjmp	.+8      	; 0x1546 <vfprintf+0x26e>
    153e:	44 24       	eor	r4, r4
    1540:	43 94       	inc	r4
    1542:	01 c0       	rjmp	.+2      	; 0x1546 <vfprintf+0x26e>
    1544:	10 e0       	ldi	r17, 0x00	; 0
    1546:	77 fe       	sbrs	r7, 7
    1548:	07 c0       	rjmp	.+14     	; 0x1558 <vfprintf+0x280>
    154a:	1c 14       	cp	r1, r12
    154c:	1d 04       	cpc	r1, r13
    154e:	3c f4       	brge	.+14     	; 0x155e <vfprintf+0x286>
    1550:	96 01       	movw	r18, r12
    1552:	2f 5f       	subi	r18, 0xFF	; 255
    1554:	3f 4f       	sbci	r19, 0xFF	; 255
    1556:	05 c0       	rjmp	.+10     	; 0x1562 <vfprintf+0x28a>
    1558:	25 e0       	ldi	r18, 0x05	; 5
    155a:	30 e0       	ldi	r19, 0x00	; 0
    155c:	02 c0       	rjmp	.+4      	; 0x1562 <vfprintf+0x28a>
    155e:	21 e0       	ldi	r18, 0x01	; 1
    1560:	30 e0       	ldi	r19, 0x00	; 0
    1562:	66 20       	and	r6, r6
    1564:	11 f0       	breq	.+4      	; 0x156a <vfprintf+0x292>
    1566:	2f 5f       	subi	r18, 0xFF	; 255
    1568:	3f 4f       	sbci	r19, 0xFF	; 255
    156a:	11 23       	and	r17, r17
    156c:	31 f0       	breq	.+12     	; 0x157a <vfprintf+0x2a2>
    156e:	41 2f       	mov	r20, r17
    1570:	50 e0       	ldi	r21, 0x00	; 0
    1572:	4f 5f       	subi	r20, 0xFF	; 255
    1574:	5f 4f       	sbci	r21, 0xFF	; 255
    1576:	24 0f       	add	r18, r20
    1578:	35 1f       	adc	r19, r21
    157a:	45 2d       	mov	r20, r5
    157c:	50 e0       	ldi	r21, 0x00	; 0
    157e:	24 17       	cp	r18, r20
    1580:	35 07       	cpc	r19, r21
    1582:	14 f4       	brge	.+4      	; 0x1588 <vfprintf+0x2b0>
    1584:	52 1a       	sub	r5, r18
    1586:	01 c0       	rjmp	.+2      	; 0x158a <vfprintf+0x2b2>
    1588:	51 2c       	mov	r5, r1
    158a:	87 2d       	mov	r24, r7
    158c:	89 70       	andi	r24, 0x09	; 9
    158e:	49 f4       	brne	.+18     	; 0x15a2 <vfprintf+0x2ca>
    1590:	55 20       	and	r5, r5
    1592:	39 f0       	breq	.+14     	; 0x15a2 <vfprintf+0x2ca>
    1594:	b7 01       	movw	r22, r14
    1596:	80 e2       	ldi	r24, 0x20	; 32
    1598:	90 e0       	ldi	r25, 0x00	; 0
    159a:	0e 94 43 13 	call	0x2686	; 0x2686 <fputc>
    159e:	5a 94       	dec	r5
    15a0:	f7 cf       	rjmp	.-18     	; 0x1590 <vfprintf+0x2b8>
    15a2:	66 20       	and	r6, r6
    15a4:	29 f0       	breq	.+10     	; 0x15b0 <vfprintf+0x2d8>
    15a6:	b7 01       	movw	r22, r14
    15a8:	86 2d       	mov	r24, r6
    15aa:	90 e0       	ldi	r25, 0x00	; 0
    15ac:	0e 94 43 13 	call	0x2686	; 0x2686 <fputc>
    15b0:	73 fc       	sbrc	r7, 3
    15b2:	09 c0       	rjmp	.+18     	; 0x15c6 <vfprintf+0x2ee>
    15b4:	55 20       	and	r5, r5
    15b6:	39 f0       	breq	.+14     	; 0x15c6 <vfprintf+0x2ee>
    15b8:	b7 01       	movw	r22, r14
    15ba:	80 e3       	ldi	r24, 0x30	; 48
    15bc:	90 e0       	ldi	r25, 0x00	; 0
    15be:	0e 94 43 13 	call	0x2686	; 0x2686 <fputc>
    15c2:	5a 94       	dec	r5
    15c4:	f7 cf       	rjmp	.-18     	; 0x15b4 <vfprintf+0x2dc>
    15c6:	77 fe       	sbrs	r7, 7
    15c8:	5f c0       	rjmp	.+190    	; 0x1688 <vfprintf+0x3b0>
    15ca:	9c 2d       	mov	r25, r12
    15cc:	8d 2d       	mov	r24, r13
    15ce:	d7 fe       	sbrs	r13, 7
    15d0:	02 c0       	rjmp	.+4      	; 0x15d6 <vfprintf+0x2fe>
    15d2:	90 e0       	ldi	r25, 0x00	; 0
    15d4:	80 e0       	ldi	r24, 0x00	; 0
    15d6:	69 2e       	mov	r6, r25
    15d8:	78 2e       	mov	r7, r24
    15da:	40 e0       	ldi	r20, 0x00	; 0
    15dc:	50 e0       	ldi	r21, 0x00	; 0
    15de:	c6 01       	movw	r24, r12
    15e0:	84 19       	sub	r24, r4
    15e2:	91 09       	sbc	r25, r1
    15e4:	9d 87       	std	Y+13, r25	; 0x0d
    15e6:	8c 87       	std	Y+12, r24	; 0x0c
    15e8:	96 01       	movw	r18, r12
    15ea:	26 19       	sub	r18, r6
    15ec:	37 09       	sbc	r19, r7
    15ee:	28 0d       	add	r18, r8
    15f0:	39 1d       	adc	r19, r9
    15f2:	81 2f       	mov	r24, r17
    15f4:	90 e0       	ldi	r25, 0x00	; 0
    15f6:	ee 27       	eor	r30, r30
    15f8:	ff 27       	eor	r31, r31
    15fa:	e8 1b       	sub	r30, r24
    15fc:	f9 0b       	sbc	r31, r25
    15fe:	ff 87       	std	Y+15, r31	; 0x0f
    1600:	ee 87       	std	Y+14, r30	; 0x0e
    1602:	ff ef       	ldi	r31, 0xFF	; 255
    1604:	6f 16       	cp	r6, r31
    1606:	7f 06       	cpc	r7, r31
    1608:	69 f4       	brne	.+26     	; 0x1624 <vfprintf+0x34c>
    160a:	b7 01       	movw	r22, r14
    160c:	8e e2       	ldi	r24, 0x2E	; 46
    160e:	90 e0       	ldi	r25, 0x00	; 0
    1610:	2b 8b       	std	Y+19, r18	; 0x13
    1612:	3a 8b       	std	Y+18, r19	; 0x12
    1614:	48 8b       	std	Y+16, r20	; 0x10
    1616:	59 8b       	std	Y+17, r21	; 0x11
    1618:	0e 94 43 13 	call	0x2686	; 0x2686 <fputc>
    161c:	59 89       	ldd	r21, Y+17	; 0x11
    161e:	48 89       	ldd	r20, Y+16	; 0x10
    1620:	3a 89       	ldd	r19, Y+18	; 0x12
    1622:	2b 89       	ldd	r18, Y+19	; 0x13
    1624:	c6 14       	cp	r12, r6
    1626:	d7 04       	cpc	r13, r7
    1628:	54 f0       	brlt	.+20     	; 0x163e <vfprintf+0x366>
    162a:	6c 85       	ldd	r22, Y+12	; 0x0c
    162c:	7d 85       	ldd	r23, Y+13	; 0x0d
    162e:	66 15       	cp	r22, r6
    1630:	77 05       	cpc	r23, r7
    1632:	2c f4       	brge	.+10     	; 0x163e <vfprintf+0x366>
    1634:	f9 01       	movw	r30, r18
    1636:	e4 0f       	add	r30, r20
    1638:	f5 1f       	adc	r31, r21
    163a:	81 81       	ldd	r24, Z+1	; 0x01
    163c:	01 c0       	rjmp	.+2      	; 0x1640 <vfprintf+0x368>
    163e:	80 e3       	ldi	r24, 0x30	; 48
    1640:	71 e0       	ldi	r23, 0x01	; 1
    1642:	67 1a       	sub	r6, r23
    1644:	71 08       	sbc	r7, r1
    1646:	4f 5f       	subi	r20, 0xFF	; 255
    1648:	5f 4f       	sbci	r21, 0xFF	; 255
    164a:	ee 85       	ldd	r30, Y+14	; 0x0e
    164c:	ff 85       	ldd	r31, Y+15	; 0x0f
    164e:	6e 16       	cp	r6, r30
    1650:	7f 06       	cpc	r7, r31
    1652:	6c f0       	brlt	.+26     	; 0x166e <vfprintf+0x396>
    1654:	b7 01       	movw	r22, r14
    1656:	90 e0       	ldi	r25, 0x00	; 0
    1658:	2b 8b       	std	Y+19, r18	; 0x13
    165a:	3a 8b       	std	Y+18, r19	; 0x12
    165c:	48 8b       	std	Y+16, r20	; 0x10
    165e:	59 8b       	std	Y+17, r21	; 0x11
    1660:	0e 94 43 13 	call	0x2686	; 0x2686 <fputc>
    1664:	2b 89       	ldd	r18, Y+19	; 0x13
    1666:	3a 89       	ldd	r19, Y+18	; 0x12
    1668:	48 89       	ldd	r20, Y+16	; 0x10
    166a:	59 89       	ldd	r21, Y+17	; 0x11
    166c:	ca cf       	rjmp	.-108    	; 0x1602 <vfprintf+0x32a>
    166e:	6c 14       	cp	r6, r12
    1670:	7d 04       	cpc	r7, r13
    1672:	39 f4       	brne	.+14     	; 0x1682 <vfprintf+0x3aa>
    1674:	9a 81       	ldd	r25, Y+2	; 0x02
    1676:	96 33       	cpi	r25, 0x36	; 54
    1678:	18 f4       	brcc	.+6      	; 0x1680 <vfprintf+0x3a8>
    167a:	95 33       	cpi	r25, 0x35	; 53
    167c:	11 f4       	brne	.+4      	; 0x1682 <vfprintf+0x3aa>
    167e:	04 ff       	sbrs	r16, 4
    1680:	81 e3       	ldi	r24, 0x31	; 49
    1682:	b7 01       	movw	r22, r14
    1684:	90 e0       	ldi	r25, 0x00	; 0
    1686:	4b c0       	rjmp	.+150    	; 0x171e <vfprintf+0x446>
    1688:	8a 81       	ldd	r24, Y+2	; 0x02
    168a:	81 33       	cpi	r24, 0x31	; 49
    168c:	09 f0       	breq	.+2      	; 0x1690 <vfprintf+0x3b8>
    168e:	0f 7e       	andi	r16, 0xEF	; 239
    1690:	b7 01       	movw	r22, r14
    1692:	90 e0       	ldi	r25, 0x00	; 0
    1694:	0e 94 43 13 	call	0x2686	; 0x2686 <fputc>
    1698:	11 11       	cpse	r17, r1
    169a:	05 c0       	rjmp	.+10     	; 0x16a6 <vfprintf+0x3ce>
    169c:	74 fe       	sbrs	r7, 4
    169e:	18 c0       	rjmp	.+48     	; 0x16d0 <vfprintf+0x3f8>
    16a0:	85 e4       	ldi	r24, 0x45	; 69
    16a2:	90 e0       	ldi	r25, 0x00	; 0
    16a4:	17 c0       	rjmp	.+46     	; 0x16d4 <vfprintf+0x3fc>
    16a6:	b7 01       	movw	r22, r14
    16a8:	8e e2       	ldi	r24, 0x2E	; 46
    16aa:	90 e0       	ldi	r25, 0x00	; 0
    16ac:	0e 94 43 13 	call	0x2686	; 0x2686 <fputc>
    16b0:	82 e0       	ldi	r24, 0x02	; 2
    16b2:	66 24       	eor	r6, r6
    16b4:	63 94       	inc	r6
    16b6:	68 0e       	add	r6, r24
    16b8:	f4 01       	movw	r30, r8
    16ba:	e8 0f       	add	r30, r24
    16bc:	f1 1d       	adc	r31, r1
    16be:	80 81       	ld	r24, Z
    16c0:	b7 01       	movw	r22, r14
    16c2:	90 e0       	ldi	r25, 0x00	; 0
    16c4:	0e 94 43 13 	call	0x2686	; 0x2686 <fputc>
    16c8:	11 50       	subi	r17, 0x01	; 1
    16ca:	41 f3       	breq	.-48     	; 0x169c <vfprintf+0x3c4>
    16cc:	86 2d       	mov	r24, r6
    16ce:	f1 cf       	rjmp	.-30     	; 0x16b2 <vfprintf+0x3da>
    16d0:	85 e6       	ldi	r24, 0x65	; 101
    16d2:	90 e0       	ldi	r25, 0x00	; 0
    16d4:	b7 01       	movw	r22, r14
    16d6:	0e 94 43 13 	call	0x2686	; 0x2686 <fputc>
    16da:	d7 fc       	sbrc	r13, 7
    16dc:	05 c0       	rjmp	.+10     	; 0x16e8 <vfprintf+0x410>
    16de:	c1 14       	cp	r12, r1
    16e0:	d1 04       	cpc	r13, r1
    16e2:	39 f4       	brne	.+14     	; 0x16f2 <vfprintf+0x41a>
    16e4:	04 ff       	sbrs	r16, 4
    16e6:	05 c0       	rjmp	.+10     	; 0x16f2 <vfprintf+0x41a>
    16e8:	d1 94       	neg	r13
    16ea:	c1 94       	neg	r12
    16ec:	d1 08       	sbc	r13, r1
    16ee:	8d e2       	ldi	r24, 0x2D	; 45
    16f0:	01 c0       	rjmp	.+2      	; 0x16f4 <vfprintf+0x41c>
    16f2:	8b e2       	ldi	r24, 0x2B	; 43
    16f4:	b7 01       	movw	r22, r14
    16f6:	90 e0       	ldi	r25, 0x00	; 0
    16f8:	0e 94 43 13 	call	0x2686	; 0x2686 <fputc>
    16fc:	80 e3       	ldi	r24, 0x30	; 48
    16fe:	6a e0       	ldi	r22, 0x0A	; 10
    1700:	c6 16       	cp	r12, r22
    1702:	d1 04       	cpc	r13, r1
    1704:	2c f0       	brlt	.+10     	; 0x1710 <vfprintf+0x438>
    1706:	8f 5f       	subi	r24, 0xFF	; 255
    1708:	fa e0       	ldi	r31, 0x0A	; 10
    170a:	cf 1a       	sub	r12, r31
    170c:	d1 08       	sbc	r13, r1
    170e:	f7 cf       	rjmp	.-18     	; 0x16fe <vfprintf+0x426>
    1710:	b7 01       	movw	r22, r14
    1712:	90 e0       	ldi	r25, 0x00	; 0
    1714:	0e 94 43 13 	call	0x2686	; 0x2686 <fputc>
    1718:	b7 01       	movw	r22, r14
    171a:	c6 01       	movw	r24, r12
    171c:	c0 96       	adiw	r24, 0x30	; 48
    171e:	0e 94 43 13 	call	0x2686	; 0x2686 <fputc>
    1722:	41 c1       	rjmp	.+642    	; 0x19a6 <vfprintf+0x6ce>
    1724:	83 36       	cpi	r24, 0x63	; 99
    1726:	31 f0       	breq	.+12     	; 0x1734 <vfprintf+0x45c>
    1728:	83 37       	cpi	r24, 0x73	; 115
    172a:	79 f0       	breq	.+30     	; 0x174a <vfprintf+0x472>
    172c:	83 35       	cpi	r24, 0x53	; 83
    172e:	09 f0       	breq	.+2      	; 0x1732 <vfprintf+0x45a>
    1730:	58 c0       	rjmp	.+176    	; 0x17e2 <vfprintf+0x50a>
    1732:	21 c0       	rjmp	.+66     	; 0x1776 <vfprintf+0x49e>
    1734:	56 01       	movw	r10, r12
    1736:	72 e0       	ldi	r23, 0x02	; 2
    1738:	a7 0e       	add	r10, r23
    173a:	b1 1c       	adc	r11, r1
    173c:	f6 01       	movw	r30, r12
    173e:	80 81       	ld	r24, Z
    1740:	89 83       	std	Y+1, r24	; 0x01
    1742:	01 e0       	ldi	r16, 0x01	; 1
    1744:	10 e0       	ldi	r17, 0x00	; 0
    1746:	64 01       	movw	r12, r8
    1748:	14 c0       	rjmp	.+40     	; 0x1772 <vfprintf+0x49a>
    174a:	56 01       	movw	r10, r12
    174c:	f2 e0       	ldi	r31, 0x02	; 2
    174e:	af 0e       	add	r10, r31
    1750:	b1 1c       	adc	r11, r1
    1752:	f6 01       	movw	r30, r12
    1754:	c0 80       	ld	r12, Z
    1756:	d1 80       	ldd	r13, Z+1	; 0x01
    1758:	26 ff       	sbrs	r18, 6
    175a:	03 c0       	rjmp	.+6      	; 0x1762 <vfprintf+0x48a>
    175c:	61 2f       	mov	r22, r17
    175e:	70 e0       	ldi	r23, 0x00	; 0
    1760:	02 c0       	rjmp	.+4      	; 0x1766 <vfprintf+0x48e>
    1762:	6f ef       	ldi	r22, 0xFF	; 255
    1764:	7f ef       	ldi	r23, 0xFF	; 255
    1766:	c6 01       	movw	r24, r12
    1768:	2b 8b       	std	Y+19, r18	; 0x13
    176a:	0e 94 1e 13 	call	0x263c	; 0x263c <strnlen>
    176e:	8c 01       	movw	r16, r24
    1770:	2b 89       	ldd	r18, Y+19	; 0x13
    1772:	2f 77       	andi	r18, 0x7F	; 127
    1774:	15 c0       	rjmp	.+42     	; 0x17a0 <vfprintf+0x4c8>
    1776:	56 01       	movw	r10, r12
    1778:	f2 e0       	ldi	r31, 0x02	; 2
    177a:	af 0e       	add	r10, r31
    177c:	b1 1c       	adc	r11, r1
    177e:	f6 01       	movw	r30, r12
    1780:	c0 80       	ld	r12, Z
    1782:	d1 80       	ldd	r13, Z+1	; 0x01
    1784:	26 ff       	sbrs	r18, 6
    1786:	03 c0       	rjmp	.+6      	; 0x178e <vfprintf+0x4b6>
    1788:	61 2f       	mov	r22, r17
    178a:	70 e0       	ldi	r23, 0x00	; 0
    178c:	02 c0       	rjmp	.+4      	; 0x1792 <vfprintf+0x4ba>
    178e:	6f ef       	ldi	r22, 0xFF	; 255
    1790:	7f ef       	ldi	r23, 0xFF	; 255
    1792:	c6 01       	movw	r24, r12
    1794:	2b 8b       	std	Y+19, r18	; 0x13
    1796:	0e 94 0c 13 	call	0x2618	; 0x2618 <strnlen_P>
    179a:	8c 01       	movw	r16, r24
    179c:	2b 89       	ldd	r18, Y+19	; 0x13
    179e:	20 68       	ori	r18, 0x80	; 128
    17a0:	72 2e       	mov	r7, r18
    17a2:	23 fd       	sbrc	r18, 3
    17a4:	1a c0       	rjmp	.+52     	; 0x17da <vfprintf+0x502>
    17a6:	85 2d       	mov	r24, r5
    17a8:	90 e0       	ldi	r25, 0x00	; 0
    17aa:	08 17       	cp	r16, r24
    17ac:	19 07       	cpc	r17, r25
    17ae:	a8 f4       	brcc	.+42     	; 0x17da <vfprintf+0x502>
    17b0:	b7 01       	movw	r22, r14
    17b2:	80 e2       	ldi	r24, 0x20	; 32
    17b4:	90 e0       	ldi	r25, 0x00	; 0
    17b6:	0e 94 43 13 	call	0x2686	; 0x2686 <fputc>
    17ba:	5a 94       	dec	r5
    17bc:	f4 cf       	rjmp	.-24     	; 0x17a6 <vfprintf+0x4ce>
    17be:	f6 01       	movw	r30, r12
    17c0:	77 fc       	sbrc	r7, 7
    17c2:	85 91       	lpm	r24, Z+
    17c4:	77 fe       	sbrs	r7, 7
    17c6:	81 91       	ld	r24, Z+
    17c8:	6f 01       	movw	r12, r30
    17ca:	b7 01       	movw	r22, r14
    17cc:	90 e0       	ldi	r25, 0x00	; 0
    17ce:	0e 94 43 13 	call	0x2686	; 0x2686 <fputc>
    17d2:	51 10       	cpse	r5, r1
    17d4:	5a 94       	dec	r5
    17d6:	01 50       	subi	r16, 0x01	; 1
    17d8:	11 09       	sbc	r17, r1
    17da:	01 15       	cp	r16, r1
    17dc:	11 05       	cpc	r17, r1
    17de:	79 f7       	brne	.-34     	; 0x17be <vfprintf+0x4e6>
    17e0:	e2 c0       	rjmp	.+452    	; 0x19a6 <vfprintf+0x6ce>
    17e2:	84 36       	cpi	r24, 0x64	; 100
    17e4:	11 f0       	breq	.+4      	; 0x17ea <vfprintf+0x512>
    17e6:	89 36       	cpi	r24, 0x69	; 105
    17e8:	51 f5       	brne	.+84     	; 0x183e <vfprintf+0x566>
    17ea:	56 01       	movw	r10, r12
    17ec:	27 ff       	sbrs	r18, 7
    17ee:	09 c0       	rjmp	.+18     	; 0x1802 <vfprintf+0x52a>
    17f0:	f4 e0       	ldi	r31, 0x04	; 4
    17f2:	af 0e       	add	r10, r31
    17f4:	b1 1c       	adc	r11, r1
    17f6:	f6 01       	movw	r30, r12
    17f8:	60 81       	ld	r22, Z
    17fa:	71 81       	ldd	r23, Z+1	; 0x01
    17fc:	82 81       	ldd	r24, Z+2	; 0x02
    17fe:	93 81       	ldd	r25, Z+3	; 0x03
    1800:	0a c0       	rjmp	.+20     	; 0x1816 <vfprintf+0x53e>
    1802:	f2 e0       	ldi	r31, 0x02	; 2
    1804:	af 0e       	add	r10, r31
    1806:	b1 1c       	adc	r11, r1
    1808:	f6 01       	movw	r30, r12
    180a:	60 81       	ld	r22, Z
    180c:	71 81       	ldd	r23, Z+1	; 0x01
    180e:	88 27       	eor	r24, r24
    1810:	77 fd       	sbrc	r23, 7
    1812:	80 95       	com	r24
    1814:	98 2f       	mov	r25, r24
    1816:	02 2f       	mov	r16, r18
    1818:	0f 76       	andi	r16, 0x6F	; 111
    181a:	97 ff       	sbrs	r25, 7
    181c:	08 c0       	rjmp	.+16     	; 0x182e <vfprintf+0x556>
    181e:	90 95       	com	r25
    1820:	80 95       	com	r24
    1822:	70 95       	com	r23
    1824:	61 95       	neg	r22
    1826:	7f 4f       	sbci	r23, 0xFF	; 255
    1828:	8f 4f       	sbci	r24, 0xFF	; 255
    182a:	9f 4f       	sbci	r25, 0xFF	; 255
    182c:	00 68       	ori	r16, 0x80	; 128
    182e:	2a e0       	ldi	r18, 0x0A	; 10
    1830:	30 e0       	ldi	r19, 0x00	; 0
    1832:	a4 01       	movw	r20, r8
    1834:	0e 94 f1 13 	call	0x27e2	; 0x27e2 <__ultoa_invert>
    1838:	c8 2e       	mov	r12, r24
    183a:	c8 18       	sub	r12, r8
    183c:	3e c0       	rjmp	.+124    	; 0x18ba <vfprintf+0x5e2>
    183e:	02 2f       	mov	r16, r18
    1840:	85 37       	cpi	r24, 0x75	; 117
    1842:	21 f4       	brne	.+8      	; 0x184c <vfprintf+0x574>
    1844:	0f 7e       	andi	r16, 0xEF	; 239
    1846:	2a e0       	ldi	r18, 0x0A	; 10
    1848:	30 e0       	ldi	r19, 0x00	; 0
    184a:	1d c0       	rjmp	.+58     	; 0x1886 <vfprintf+0x5ae>
    184c:	09 7f       	andi	r16, 0xF9	; 249
    184e:	8f 36       	cpi	r24, 0x6F	; 111
    1850:	91 f0       	breq	.+36     	; 0x1876 <vfprintf+0x59e>
    1852:	18 f4       	brcc	.+6      	; 0x185a <vfprintf+0x582>
    1854:	88 35       	cpi	r24, 0x58	; 88
    1856:	59 f0       	breq	.+22     	; 0x186e <vfprintf+0x596>
    1858:	b0 c0       	rjmp	.+352    	; 0x19ba <vfprintf+0x6e2>
    185a:	80 37       	cpi	r24, 0x70	; 112
    185c:	19 f0       	breq	.+6      	; 0x1864 <vfprintf+0x58c>
    185e:	88 37       	cpi	r24, 0x78	; 120
    1860:	11 f0       	breq	.+4      	; 0x1866 <vfprintf+0x58e>
    1862:	ab c0       	rjmp	.+342    	; 0x19ba <vfprintf+0x6e2>
    1864:	00 61       	ori	r16, 0x10	; 16
    1866:	04 ff       	sbrs	r16, 4
    1868:	09 c0       	rjmp	.+18     	; 0x187c <vfprintf+0x5a4>
    186a:	04 60       	ori	r16, 0x04	; 4
    186c:	07 c0       	rjmp	.+14     	; 0x187c <vfprintf+0x5a4>
    186e:	24 ff       	sbrs	r18, 4
    1870:	08 c0       	rjmp	.+16     	; 0x1882 <vfprintf+0x5aa>
    1872:	06 60       	ori	r16, 0x06	; 6
    1874:	06 c0       	rjmp	.+12     	; 0x1882 <vfprintf+0x5aa>
    1876:	28 e0       	ldi	r18, 0x08	; 8
    1878:	30 e0       	ldi	r19, 0x00	; 0
    187a:	05 c0       	rjmp	.+10     	; 0x1886 <vfprintf+0x5ae>
    187c:	20 e1       	ldi	r18, 0x10	; 16
    187e:	30 e0       	ldi	r19, 0x00	; 0
    1880:	02 c0       	rjmp	.+4      	; 0x1886 <vfprintf+0x5ae>
    1882:	20 e1       	ldi	r18, 0x10	; 16
    1884:	32 e0       	ldi	r19, 0x02	; 2
    1886:	56 01       	movw	r10, r12
    1888:	07 ff       	sbrs	r16, 7
    188a:	09 c0       	rjmp	.+18     	; 0x189e <vfprintf+0x5c6>
    188c:	f4 e0       	ldi	r31, 0x04	; 4
    188e:	af 0e       	add	r10, r31
    1890:	b1 1c       	adc	r11, r1
    1892:	f6 01       	movw	r30, r12
    1894:	60 81       	ld	r22, Z
    1896:	71 81       	ldd	r23, Z+1	; 0x01
    1898:	82 81       	ldd	r24, Z+2	; 0x02
    189a:	93 81       	ldd	r25, Z+3	; 0x03
    189c:	08 c0       	rjmp	.+16     	; 0x18ae <vfprintf+0x5d6>
    189e:	f2 e0       	ldi	r31, 0x02	; 2
    18a0:	af 0e       	add	r10, r31
    18a2:	b1 1c       	adc	r11, r1
    18a4:	f6 01       	movw	r30, r12
    18a6:	60 81       	ld	r22, Z
    18a8:	71 81       	ldd	r23, Z+1	; 0x01
    18aa:	80 e0       	ldi	r24, 0x00	; 0
    18ac:	90 e0       	ldi	r25, 0x00	; 0
    18ae:	a4 01       	movw	r20, r8
    18b0:	0e 94 f1 13 	call	0x27e2	; 0x27e2 <__ultoa_invert>
    18b4:	c8 2e       	mov	r12, r24
    18b6:	c8 18       	sub	r12, r8
    18b8:	0f 77       	andi	r16, 0x7F	; 127
    18ba:	06 ff       	sbrs	r16, 6
    18bc:	0b c0       	rjmp	.+22     	; 0x18d4 <vfprintf+0x5fc>
    18be:	20 2f       	mov	r18, r16
    18c0:	2e 7f       	andi	r18, 0xFE	; 254
    18c2:	c1 16       	cp	r12, r17
    18c4:	50 f4       	brcc	.+20     	; 0x18da <vfprintf+0x602>
    18c6:	04 ff       	sbrs	r16, 4
    18c8:	0a c0       	rjmp	.+20     	; 0x18de <vfprintf+0x606>
    18ca:	02 fd       	sbrc	r16, 2
    18cc:	08 c0       	rjmp	.+16     	; 0x18de <vfprintf+0x606>
    18ce:	20 2f       	mov	r18, r16
    18d0:	2e 7e       	andi	r18, 0xEE	; 238
    18d2:	05 c0       	rjmp	.+10     	; 0x18de <vfprintf+0x606>
    18d4:	dc 2c       	mov	r13, r12
    18d6:	20 2f       	mov	r18, r16
    18d8:	03 c0       	rjmp	.+6      	; 0x18e0 <vfprintf+0x608>
    18da:	dc 2c       	mov	r13, r12
    18dc:	01 c0       	rjmp	.+2      	; 0x18e0 <vfprintf+0x608>
    18de:	d1 2e       	mov	r13, r17
    18e0:	24 ff       	sbrs	r18, 4
    18e2:	0d c0       	rjmp	.+26     	; 0x18fe <vfprintf+0x626>
    18e4:	fe 01       	movw	r30, r28
    18e6:	ec 0d       	add	r30, r12
    18e8:	f1 1d       	adc	r31, r1
    18ea:	80 81       	ld	r24, Z
    18ec:	80 33       	cpi	r24, 0x30	; 48
    18ee:	11 f4       	brne	.+4      	; 0x18f4 <vfprintf+0x61c>
    18f0:	29 7e       	andi	r18, 0xE9	; 233
    18f2:	09 c0       	rjmp	.+18     	; 0x1906 <vfprintf+0x62e>
    18f4:	22 ff       	sbrs	r18, 2
    18f6:	06 c0       	rjmp	.+12     	; 0x1904 <vfprintf+0x62c>
    18f8:	d3 94       	inc	r13
    18fa:	d3 94       	inc	r13
    18fc:	04 c0       	rjmp	.+8      	; 0x1906 <vfprintf+0x62e>
    18fe:	82 2f       	mov	r24, r18
    1900:	86 78       	andi	r24, 0x86	; 134
    1902:	09 f0       	breq	.+2      	; 0x1906 <vfprintf+0x62e>
    1904:	d3 94       	inc	r13
    1906:	23 fd       	sbrc	r18, 3
    1908:	13 c0       	rjmp	.+38     	; 0x1930 <vfprintf+0x658>
    190a:	20 ff       	sbrs	r18, 0
    190c:	06 c0       	rjmp	.+12     	; 0x191a <vfprintf+0x642>
    190e:	1c 2d       	mov	r17, r12
    1910:	d5 14       	cp	r13, r5
    1912:	18 f4       	brcc	.+6      	; 0x191a <vfprintf+0x642>
    1914:	15 0d       	add	r17, r5
    1916:	1d 19       	sub	r17, r13
    1918:	d5 2c       	mov	r13, r5
    191a:	d5 14       	cp	r13, r5
    191c:	68 f4       	brcc	.+26     	; 0x1938 <vfprintf+0x660>
    191e:	b7 01       	movw	r22, r14
    1920:	80 e2       	ldi	r24, 0x20	; 32
    1922:	90 e0       	ldi	r25, 0x00	; 0
    1924:	2b 8b       	std	Y+19, r18	; 0x13
    1926:	0e 94 43 13 	call	0x2686	; 0x2686 <fputc>
    192a:	d3 94       	inc	r13
    192c:	2b 89       	ldd	r18, Y+19	; 0x13
    192e:	f5 cf       	rjmp	.-22     	; 0x191a <vfprintf+0x642>
    1930:	d5 14       	cp	r13, r5
    1932:	10 f4       	brcc	.+4      	; 0x1938 <vfprintf+0x660>
    1934:	5d 18       	sub	r5, r13
    1936:	01 c0       	rjmp	.+2      	; 0x193a <vfprintf+0x662>
    1938:	51 2c       	mov	r5, r1
    193a:	24 ff       	sbrs	r18, 4
    193c:	12 c0       	rjmp	.+36     	; 0x1962 <vfprintf+0x68a>
    193e:	b7 01       	movw	r22, r14
    1940:	80 e3       	ldi	r24, 0x30	; 48
    1942:	90 e0       	ldi	r25, 0x00	; 0
    1944:	2b 8b       	std	Y+19, r18	; 0x13
    1946:	0e 94 43 13 	call	0x2686	; 0x2686 <fputc>
    194a:	2b 89       	ldd	r18, Y+19	; 0x13
    194c:	22 ff       	sbrs	r18, 2
    194e:	17 c0       	rjmp	.+46     	; 0x197e <vfprintf+0x6a6>
    1950:	21 ff       	sbrs	r18, 1
    1952:	03 c0       	rjmp	.+6      	; 0x195a <vfprintf+0x682>
    1954:	88 e5       	ldi	r24, 0x58	; 88
    1956:	90 e0       	ldi	r25, 0x00	; 0
    1958:	02 c0       	rjmp	.+4      	; 0x195e <vfprintf+0x686>
    195a:	88 e7       	ldi	r24, 0x78	; 120
    195c:	90 e0       	ldi	r25, 0x00	; 0
    195e:	b7 01       	movw	r22, r14
    1960:	0c c0       	rjmp	.+24     	; 0x197a <vfprintf+0x6a2>
    1962:	82 2f       	mov	r24, r18
    1964:	86 78       	andi	r24, 0x86	; 134
    1966:	59 f0       	breq	.+22     	; 0x197e <vfprintf+0x6a6>
    1968:	21 fd       	sbrc	r18, 1
    196a:	02 c0       	rjmp	.+4      	; 0x1970 <vfprintf+0x698>
    196c:	80 e2       	ldi	r24, 0x20	; 32
    196e:	01 c0       	rjmp	.+2      	; 0x1972 <vfprintf+0x69a>
    1970:	8b e2       	ldi	r24, 0x2B	; 43
    1972:	27 fd       	sbrc	r18, 7
    1974:	8d e2       	ldi	r24, 0x2D	; 45
    1976:	b7 01       	movw	r22, r14
    1978:	90 e0       	ldi	r25, 0x00	; 0
    197a:	0e 94 43 13 	call	0x2686	; 0x2686 <fputc>
    197e:	c1 16       	cp	r12, r17
    1980:	38 f4       	brcc	.+14     	; 0x1990 <vfprintf+0x6b8>
    1982:	b7 01       	movw	r22, r14
    1984:	80 e3       	ldi	r24, 0x30	; 48
    1986:	90 e0       	ldi	r25, 0x00	; 0
    1988:	0e 94 43 13 	call	0x2686	; 0x2686 <fputc>
    198c:	11 50       	subi	r17, 0x01	; 1
    198e:	f7 cf       	rjmp	.-18     	; 0x197e <vfprintf+0x6a6>
    1990:	ca 94       	dec	r12
    1992:	f4 01       	movw	r30, r8
    1994:	ec 0d       	add	r30, r12
    1996:	f1 1d       	adc	r31, r1
    1998:	80 81       	ld	r24, Z
    199a:	b7 01       	movw	r22, r14
    199c:	90 e0       	ldi	r25, 0x00	; 0
    199e:	0e 94 43 13 	call	0x2686	; 0x2686 <fputc>
    19a2:	c1 10       	cpse	r12, r1
    19a4:	f5 cf       	rjmp	.-22     	; 0x1990 <vfprintf+0x6b8>
    19a6:	55 20       	and	r5, r5
    19a8:	09 f4       	brne	.+2      	; 0x19ac <vfprintf+0x6d4>
    19aa:	c2 cc       	rjmp	.-1660   	; 0x1330 <vfprintf+0x58>
    19ac:	b7 01       	movw	r22, r14
    19ae:	80 e2       	ldi	r24, 0x20	; 32
    19b0:	90 e0       	ldi	r25, 0x00	; 0
    19b2:	0e 94 43 13 	call	0x2686	; 0x2686 <fputc>
    19b6:	5a 94       	dec	r5
    19b8:	f6 cf       	rjmp	.-20     	; 0x19a6 <vfprintf+0x6ce>
    19ba:	f7 01       	movw	r30, r14
    19bc:	86 81       	ldd	r24, Z+6	; 0x06
    19be:	97 81       	ldd	r25, Z+7	; 0x07
    19c0:	02 c0       	rjmp	.+4      	; 0x19c6 <vfprintf+0x6ee>
    19c2:	8f ef       	ldi	r24, 0xFF	; 255
    19c4:	9f ef       	ldi	r25, 0xFF	; 255
    19c6:	63 96       	adiw	r28, 0x13	; 19
    19c8:	e2 e1       	ldi	r30, 0x12	; 18
    19ca:	0c 94 cf 10 	jmp	0x219e	; 0x219e <__epilogue_restores__>

000019ce <__subsf3>:
    19ce:	50 58       	subi	r21, 0x80	; 128

000019d0 <__addsf3>:
    19d0:	bb 27       	eor	r27, r27
    19d2:	aa 27       	eor	r26, r26
    19d4:	0e d0       	rcall	.+28     	; 0x19f2 <__addsf3x>
    19d6:	4d c1       	rjmp	.+666    	; 0x1c72 <__fp_round>
    19d8:	3e d1       	rcall	.+636    	; 0x1c56 <__fp_pscA>
    19da:	30 f0       	brcs	.+12     	; 0x19e8 <__addsf3+0x18>
    19dc:	43 d1       	rcall	.+646    	; 0x1c64 <__fp_pscB>
    19de:	20 f0       	brcs	.+8      	; 0x19e8 <__addsf3+0x18>
    19e0:	31 f4       	brne	.+12     	; 0x19ee <__addsf3+0x1e>
    19e2:	9f 3f       	cpi	r25, 0xFF	; 255
    19e4:	11 f4       	brne	.+4      	; 0x19ea <__addsf3+0x1a>
    19e6:	1e f4       	brtc	.+6      	; 0x19ee <__addsf3+0x1e>
    19e8:	33 c1       	rjmp	.+614    	; 0x1c50 <__fp_nan>
    19ea:	0e f4       	brtc	.+2      	; 0x19ee <__addsf3+0x1e>
    19ec:	e0 95       	com	r30
    19ee:	e7 fb       	bst	r30, 7
    19f0:	29 c1       	rjmp	.+594    	; 0x1c44 <__fp_inf>

000019f2 <__addsf3x>:
    19f2:	e9 2f       	mov	r30, r25
    19f4:	4f d1       	rcall	.+670    	; 0x1c94 <__fp_split3>
    19f6:	80 f3       	brcs	.-32     	; 0x19d8 <__addsf3+0x8>
    19f8:	ba 17       	cp	r27, r26
    19fa:	62 07       	cpc	r22, r18
    19fc:	73 07       	cpc	r23, r19
    19fe:	84 07       	cpc	r24, r20
    1a00:	95 07       	cpc	r25, r21
    1a02:	18 f0       	brcs	.+6      	; 0x1a0a <__addsf3x+0x18>
    1a04:	71 f4       	brne	.+28     	; 0x1a22 <__addsf3x+0x30>
    1a06:	9e f5       	brtc	.+102    	; 0x1a6e <__addsf3x+0x7c>
    1a08:	67 c1       	rjmp	.+718    	; 0x1cd8 <__fp_zero>
    1a0a:	0e f4       	brtc	.+2      	; 0x1a0e <__addsf3x+0x1c>
    1a0c:	e0 95       	com	r30
    1a0e:	0b 2e       	mov	r0, r27
    1a10:	ba 2f       	mov	r27, r26
    1a12:	a0 2d       	mov	r26, r0
    1a14:	0b 01       	movw	r0, r22
    1a16:	b9 01       	movw	r22, r18
    1a18:	90 01       	movw	r18, r0
    1a1a:	0c 01       	movw	r0, r24
    1a1c:	ca 01       	movw	r24, r20
    1a1e:	a0 01       	movw	r20, r0
    1a20:	11 24       	eor	r1, r1
    1a22:	ff 27       	eor	r31, r31
    1a24:	59 1b       	sub	r21, r25
    1a26:	99 f0       	breq	.+38     	; 0x1a4e <__addsf3x+0x5c>
    1a28:	59 3f       	cpi	r21, 0xF9	; 249
    1a2a:	50 f4       	brcc	.+20     	; 0x1a40 <__addsf3x+0x4e>
    1a2c:	50 3e       	cpi	r21, 0xE0	; 224
    1a2e:	68 f1       	brcs	.+90     	; 0x1a8a <__addsf3x+0x98>
    1a30:	1a 16       	cp	r1, r26
    1a32:	f0 40       	sbci	r31, 0x00	; 0
    1a34:	a2 2f       	mov	r26, r18
    1a36:	23 2f       	mov	r18, r19
    1a38:	34 2f       	mov	r19, r20
    1a3a:	44 27       	eor	r20, r20
    1a3c:	58 5f       	subi	r21, 0xF8	; 248
    1a3e:	f3 cf       	rjmp	.-26     	; 0x1a26 <__addsf3x+0x34>
    1a40:	46 95       	lsr	r20
    1a42:	37 95       	ror	r19
    1a44:	27 95       	ror	r18
    1a46:	a7 95       	ror	r26
    1a48:	f0 40       	sbci	r31, 0x00	; 0
    1a4a:	53 95       	inc	r21
    1a4c:	c9 f7       	brne	.-14     	; 0x1a40 <__addsf3x+0x4e>
    1a4e:	7e f4       	brtc	.+30     	; 0x1a6e <__addsf3x+0x7c>
    1a50:	1f 16       	cp	r1, r31
    1a52:	ba 0b       	sbc	r27, r26
    1a54:	62 0b       	sbc	r22, r18
    1a56:	73 0b       	sbc	r23, r19
    1a58:	84 0b       	sbc	r24, r20
    1a5a:	ba f0       	brmi	.+46     	; 0x1a8a <__addsf3x+0x98>
    1a5c:	91 50       	subi	r25, 0x01	; 1
    1a5e:	a1 f0       	breq	.+40     	; 0x1a88 <__addsf3x+0x96>
    1a60:	ff 0f       	add	r31, r31
    1a62:	bb 1f       	adc	r27, r27
    1a64:	66 1f       	adc	r22, r22
    1a66:	77 1f       	adc	r23, r23
    1a68:	88 1f       	adc	r24, r24
    1a6a:	c2 f7       	brpl	.-16     	; 0x1a5c <__addsf3x+0x6a>
    1a6c:	0e c0       	rjmp	.+28     	; 0x1a8a <__addsf3x+0x98>
    1a6e:	ba 0f       	add	r27, r26
    1a70:	62 1f       	adc	r22, r18
    1a72:	73 1f       	adc	r23, r19
    1a74:	84 1f       	adc	r24, r20
    1a76:	48 f4       	brcc	.+18     	; 0x1a8a <__addsf3x+0x98>
    1a78:	87 95       	ror	r24
    1a7a:	77 95       	ror	r23
    1a7c:	67 95       	ror	r22
    1a7e:	b7 95       	ror	r27
    1a80:	f7 95       	ror	r31
    1a82:	9e 3f       	cpi	r25, 0xFE	; 254
    1a84:	08 f0       	brcs	.+2      	; 0x1a88 <__addsf3x+0x96>
    1a86:	b3 cf       	rjmp	.-154    	; 0x19ee <__addsf3+0x1e>
    1a88:	93 95       	inc	r25
    1a8a:	88 0f       	add	r24, r24
    1a8c:	08 f0       	brcs	.+2      	; 0x1a90 <__addsf3x+0x9e>
    1a8e:	99 27       	eor	r25, r25
    1a90:	ee 0f       	add	r30, r30
    1a92:	97 95       	ror	r25
    1a94:	87 95       	ror	r24
    1a96:	08 95       	ret

00001a98 <__divsf3>:
    1a98:	0c d0       	rcall	.+24     	; 0x1ab2 <__divsf3x>
    1a9a:	eb c0       	rjmp	.+470    	; 0x1c72 <__fp_round>
    1a9c:	e3 d0       	rcall	.+454    	; 0x1c64 <__fp_pscB>
    1a9e:	40 f0       	brcs	.+16     	; 0x1ab0 <__divsf3+0x18>
    1aa0:	da d0       	rcall	.+436    	; 0x1c56 <__fp_pscA>
    1aa2:	30 f0       	brcs	.+12     	; 0x1ab0 <__divsf3+0x18>
    1aa4:	21 f4       	brne	.+8      	; 0x1aae <__divsf3+0x16>
    1aa6:	5f 3f       	cpi	r21, 0xFF	; 255
    1aa8:	19 f0       	breq	.+6      	; 0x1ab0 <__divsf3+0x18>
    1aaa:	cc c0       	rjmp	.+408    	; 0x1c44 <__fp_inf>
    1aac:	51 11       	cpse	r21, r1
    1aae:	15 c1       	rjmp	.+554    	; 0x1cda <__fp_szero>
    1ab0:	cf c0       	rjmp	.+414    	; 0x1c50 <__fp_nan>

00001ab2 <__divsf3x>:
    1ab2:	f0 d0       	rcall	.+480    	; 0x1c94 <__fp_split3>
    1ab4:	98 f3       	brcs	.-26     	; 0x1a9c <__divsf3+0x4>

00001ab6 <__divsf3_pse>:
    1ab6:	99 23       	and	r25, r25
    1ab8:	c9 f3       	breq	.-14     	; 0x1aac <__divsf3+0x14>
    1aba:	55 23       	and	r21, r21
    1abc:	b1 f3       	breq	.-20     	; 0x1aaa <__divsf3+0x12>
    1abe:	95 1b       	sub	r25, r21
    1ac0:	55 0b       	sbc	r21, r21
    1ac2:	bb 27       	eor	r27, r27
    1ac4:	aa 27       	eor	r26, r26
    1ac6:	62 17       	cp	r22, r18
    1ac8:	73 07       	cpc	r23, r19
    1aca:	84 07       	cpc	r24, r20
    1acc:	38 f0       	brcs	.+14     	; 0x1adc <__divsf3_pse+0x26>
    1ace:	9f 5f       	subi	r25, 0xFF	; 255
    1ad0:	5f 4f       	sbci	r21, 0xFF	; 255
    1ad2:	22 0f       	add	r18, r18
    1ad4:	33 1f       	adc	r19, r19
    1ad6:	44 1f       	adc	r20, r20
    1ad8:	aa 1f       	adc	r26, r26
    1ada:	a9 f3       	breq	.-22     	; 0x1ac6 <__divsf3_pse+0x10>
    1adc:	33 d0       	rcall	.+102    	; 0x1b44 <__divsf3_pse+0x8e>
    1ade:	0e 2e       	mov	r0, r30
    1ae0:	3a f0       	brmi	.+14     	; 0x1af0 <__divsf3_pse+0x3a>
    1ae2:	e0 e8       	ldi	r30, 0x80	; 128
    1ae4:	30 d0       	rcall	.+96     	; 0x1b46 <__divsf3_pse+0x90>
    1ae6:	91 50       	subi	r25, 0x01	; 1
    1ae8:	50 40       	sbci	r21, 0x00	; 0
    1aea:	e6 95       	lsr	r30
    1aec:	00 1c       	adc	r0, r0
    1aee:	ca f7       	brpl	.-14     	; 0x1ae2 <__divsf3_pse+0x2c>
    1af0:	29 d0       	rcall	.+82     	; 0x1b44 <__divsf3_pse+0x8e>
    1af2:	fe 2f       	mov	r31, r30
    1af4:	27 d0       	rcall	.+78     	; 0x1b44 <__divsf3_pse+0x8e>
    1af6:	66 0f       	add	r22, r22
    1af8:	77 1f       	adc	r23, r23
    1afa:	88 1f       	adc	r24, r24
    1afc:	bb 1f       	adc	r27, r27
    1afe:	26 17       	cp	r18, r22
    1b00:	37 07       	cpc	r19, r23
    1b02:	48 07       	cpc	r20, r24
    1b04:	ab 07       	cpc	r26, r27
    1b06:	b0 e8       	ldi	r27, 0x80	; 128
    1b08:	09 f0       	breq	.+2      	; 0x1b0c <__divsf3_pse+0x56>
    1b0a:	bb 0b       	sbc	r27, r27
    1b0c:	80 2d       	mov	r24, r0
    1b0e:	bf 01       	movw	r22, r30
    1b10:	ff 27       	eor	r31, r31
    1b12:	93 58       	subi	r25, 0x83	; 131
    1b14:	5f 4f       	sbci	r21, 0xFF	; 255
    1b16:	2a f0       	brmi	.+10     	; 0x1b22 <__divsf3_pse+0x6c>
    1b18:	9e 3f       	cpi	r25, 0xFE	; 254
    1b1a:	51 05       	cpc	r21, r1
    1b1c:	68 f0       	brcs	.+26     	; 0x1b38 <__divsf3_pse+0x82>
    1b1e:	92 c0       	rjmp	.+292    	; 0x1c44 <__fp_inf>
    1b20:	dc c0       	rjmp	.+440    	; 0x1cda <__fp_szero>
    1b22:	5f 3f       	cpi	r21, 0xFF	; 255
    1b24:	ec f3       	brlt	.-6      	; 0x1b20 <__divsf3_pse+0x6a>
    1b26:	98 3e       	cpi	r25, 0xE8	; 232
    1b28:	dc f3       	brlt	.-10     	; 0x1b20 <__divsf3_pse+0x6a>
    1b2a:	86 95       	lsr	r24
    1b2c:	77 95       	ror	r23
    1b2e:	67 95       	ror	r22
    1b30:	b7 95       	ror	r27
    1b32:	f7 95       	ror	r31
    1b34:	9f 5f       	subi	r25, 0xFF	; 255
    1b36:	c9 f7       	brne	.-14     	; 0x1b2a <__divsf3_pse+0x74>
    1b38:	88 0f       	add	r24, r24
    1b3a:	91 1d       	adc	r25, r1
    1b3c:	96 95       	lsr	r25
    1b3e:	87 95       	ror	r24
    1b40:	97 f9       	bld	r25, 7
    1b42:	08 95       	ret
    1b44:	e1 e0       	ldi	r30, 0x01	; 1
    1b46:	66 0f       	add	r22, r22
    1b48:	77 1f       	adc	r23, r23
    1b4a:	88 1f       	adc	r24, r24
    1b4c:	bb 1f       	adc	r27, r27
    1b4e:	62 17       	cp	r22, r18
    1b50:	73 07       	cpc	r23, r19
    1b52:	84 07       	cpc	r24, r20
    1b54:	ba 07       	cpc	r27, r26
    1b56:	20 f0       	brcs	.+8      	; 0x1b60 <__divsf3_pse+0xaa>
    1b58:	62 1b       	sub	r22, r18
    1b5a:	73 0b       	sbc	r23, r19
    1b5c:	84 0b       	sbc	r24, r20
    1b5e:	ba 0b       	sbc	r27, r26
    1b60:	ee 1f       	adc	r30, r30
    1b62:	88 f7       	brcc	.-30     	; 0x1b46 <__divsf3_pse+0x90>
    1b64:	e0 95       	com	r30
    1b66:	08 95       	ret

00001b68 <__fixsfsi>:
    1b68:	04 d0       	rcall	.+8      	; 0x1b72 <__fixunssfsi>
    1b6a:	68 94       	set
    1b6c:	b1 11       	cpse	r27, r1
    1b6e:	b5 c0       	rjmp	.+362    	; 0x1cda <__fp_szero>
    1b70:	08 95       	ret

00001b72 <__fixunssfsi>:
    1b72:	98 d0       	rcall	.+304    	; 0x1ca4 <__fp_splitA>
    1b74:	88 f0       	brcs	.+34     	; 0x1b98 <__fixunssfsi+0x26>
    1b76:	9f 57       	subi	r25, 0x7F	; 127
    1b78:	90 f0       	brcs	.+36     	; 0x1b9e <__fixunssfsi+0x2c>
    1b7a:	b9 2f       	mov	r27, r25
    1b7c:	99 27       	eor	r25, r25
    1b7e:	b7 51       	subi	r27, 0x17	; 23
    1b80:	a0 f0       	brcs	.+40     	; 0x1baa <__fixunssfsi+0x38>
    1b82:	d1 f0       	breq	.+52     	; 0x1bb8 <__fixunssfsi+0x46>
    1b84:	66 0f       	add	r22, r22
    1b86:	77 1f       	adc	r23, r23
    1b88:	88 1f       	adc	r24, r24
    1b8a:	99 1f       	adc	r25, r25
    1b8c:	1a f0       	brmi	.+6      	; 0x1b94 <__fixunssfsi+0x22>
    1b8e:	ba 95       	dec	r27
    1b90:	c9 f7       	brne	.-14     	; 0x1b84 <__fixunssfsi+0x12>
    1b92:	12 c0       	rjmp	.+36     	; 0x1bb8 <__fixunssfsi+0x46>
    1b94:	b1 30       	cpi	r27, 0x01	; 1
    1b96:	81 f0       	breq	.+32     	; 0x1bb8 <__fixunssfsi+0x46>
    1b98:	9f d0       	rcall	.+318    	; 0x1cd8 <__fp_zero>
    1b9a:	b1 e0       	ldi	r27, 0x01	; 1
    1b9c:	08 95       	ret
    1b9e:	9c c0       	rjmp	.+312    	; 0x1cd8 <__fp_zero>
    1ba0:	67 2f       	mov	r22, r23
    1ba2:	78 2f       	mov	r23, r24
    1ba4:	88 27       	eor	r24, r24
    1ba6:	b8 5f       	subi	r27, 0xF8	; 248
    1ba8:	39 f0       	breq	.+14     	; 0x1bb8 <__fixunssfsi+0x46>
    1baa:	b9 3f       	cpi	r27, 0xF9	; 249
    1bac:	cc f3       	brlt	.-14     	; 0x1ba0 <__fixunssfsi+0x2e>
    1bae:	86 95       	lsr	r24
    1bb0:	77 95       	ror	r23
    1bb2:	67 95       	ror	r22
    1bb4:	b3 95       	inc	r27
    1bb6:	d9 f7       	brne	.-10     	; 0x1bae <__fixunssfsi+0x3c>
    1bb8:	3e f4       	brtc	.+14     	; 0x1bc8 <__fixunssfsi+0x56>
    1bba:	90 95       	com	r25
    1bbc:	80 95       	com	r24
    1bbe:	70 95       	com	r23
    1bc0:	61 95       	neg	r22
    1bc2:	7f 4f       	sbci	r23, 0xFF	; 255
    1bc4:	8f 4f       	sbci	r24, 0xFF	; 255
    1bc6:	9f 4f       	sbci	r25, 0xFF	; 255
    1bc8:	08 95       	ret

00001bca <__floatunsisf>:
    1bca:	e8 94       	clt
    1bcc:	09 c0       	rjmp	.+18     	; 0x1be0 <__floatsisf+0x12>

00001bce <__floatsisf>:
    1bce:	97 fb       	bst	r25, 7
    1bd0:	3e f4       	brtc	.+14     	; 0x1be0 <__floatsisf+0x12>
    1bd2:	90 95       	com	r25
    1bd4:	80 95       	com	r24
    1bd6:	70 95       	com	r23
    1bd8:	61 95       	neg	r22
    1bda:	7f 4f       	sbci	r23, 0xFF	; 255
    1bdc:	8f 4f       	sbci	r24, 0xFF	; 255
    1bde:	9f 4f       	sbci	r25, 0xFF	; 255
    1be0:	99 23       	and	r25, r25
    1be2:	a9 f0       	breq	.+42     	; 0x1c0e <__floatsisf+0x40>
    1be4:	f9 2f       	mov	r31, r25
    1be6:	96 e9       	ldi	r25, 0x96	; 150
    1be8:	bb 27       	eor	r27, r27
    1bea:	93 95       	inc	r25
    1bec:	f6 95       	lsr	r31
    1bee:	87 95       	ror	r24
    1bf0:	77 95       	ror	r23
    1bf2:	67 95       	ror	r22
    1bf4:	b7 95       	ror	r27
    1bf6:	f1 11       	cpse	r31, r1
    1bf8:	f8 cf       	rjmp	.-16     	; 0x1bea <__floatsisf+0x1c>
    1bfa:	fa f4       	brpl	.+62     	; 0x1c3a <__floatsisf+0x6c>
    1bfc:	bb 0f       	add	r27, r27
    1bfe:	11 f4       	brne	.+4      	; 0x1c04 <__floatsisf+0x36>
    1c00:	60 ff       	sbrs	r22, 0
    1c02:	1b c0       	rjmp	.+54     	; 0x1c3a <__floatsisf+0x6c>
    1c04:	6f 5f       	subi	r22, 0xFF	; 255
    1c06:	7f 4f       	sbci	r23, 0xFF	; 255
    1c08:	8f 4f       	sbci	r24, 0xFF	; 255
    1c0a:	9f 4f       	sbci	r25, 0xFF	; 255
    1c0c:	16 c0       	rjmp	.+44     	; 0x1c3a <__floatsisf+0x6c>
    1c0e:	88 23       	and	r24, r24
    1c10:	11 f0       	breq	.+4      	; 0x1c16 <__floatsisf+0x48>
    1c12:	96 e9       	ldi	r25, 0x96	; 150
    1c14:	11 c0       	rjmp	.+34     	; 0x1c38 <__floatsisf+0x6a>
    1c16:	77 23       	and	r23, r23
    1c18:	21 f0       	breq	.+8      	; 0x1c22 <__floatsisf+0x54>
    1c1a:	9e e8       	ldi	r25, 0x8E	; 142
    1c1c:	87 2f       	mov	r24, r23
    1c1e:	76 2f       	mov	r23, r22
    1c20:	05 c0       	rjmp	.+10     	; 0x1c2c <__floatsisf+0x5e>
    1c22:	66 23       	and	r22, r22
    1c24:	71 f0       	breq	.+28     	; 0x1c42 <__floatsisf+0x74>
    1c26:	96 e8       	ldi	r25, 0x86	; 134
    1c28:	86 2f       	mov	r24, r22
    1c2a:	70 e0       	ldi	r23, 0x00	; 0
    1c2c:	60 e0       	ldi	r22, 0x00	; 0
    1c2e:	2a f0       	brmi	.+10     	; 0x1c3a <__floatsisf+0x6c>
    1c30:	9a 95       	dec	r25
    1c32:	66 0f       	add	r22, r22
    1c34:	77 1f       	adc	r23, r23
    1c36:	88 1f       	adc	r24, r24
    1c38:	da f7       	brpl	.-10     	; 0x1c30 <__floatsisf+0x62>
    1c3a:	88 0f       	add	r24, r24
    1c3c:	96 95       	lsr	r25
    1c3e:	87 95       	ror	r24
    1c40:	97 f9       	bld	r25, 7
    1c42:	08 95       	ret

00001c44 <__fp_inf>:
    1c44:	97 f9       	bld	r25, 7
    1c46:	9f 67       	ori	r25, 0x7F	; 127
    1c48:	80 e8       	ldi	r24, 0x80	; 128
    1c4a:	70 e0       	ldi	r23, 0x00	; 0
    1c4c:	60 e0       	ldi	r22, 0x00	; 0
    1c4e:	08 95       	ret

00001c50 <__fp_nan>:
    1c50:	9f ef       	ldi	r25, 0xFF	; 255
    1c52:	80 ec       	ldi	r24, 0xC0	; 192
    1c54:	08 95       	ret

00001c56 <__fp_pscA>:
    1c56:	00 24       	eor	r0, r0
    1c58:	0a 94       	dec	r0
    1c5a:	16 16       	cp	r1, r22
    1c5c:	17 06       	cpc	r1, r23
    1c5e:	18 06       	cpc	r1, r24
    1c60:	09 06       	cpc	r0, r25
    1c62:	08 95       	ret

00001c64 <__fp_pscB>:
    1c64:	00 24       	eor	r0, r0
    1c66:	0a 94       	dec	r0
    1c68:	12 16       	cp	r1, r18
    1c6a:	13 06       	cpc	r1, r19
    1c6c:	14 06       	cpc	r1, r20
    1c6e:	05 06       	cpc	r0, r21
    1c70:	08 95       	ret

00001c72 <__fp_round>:
    1c72:	09 2e       	mov	r0, r25
    1c74:	03 94       	inc	r0
    1c76:	00 0c       	add	r0, r0
    1c78:	11 f4       	brne	.+4      	; 0x1c7e <__fp_round+0xc>
    1c7a:	88 23       	and	r24, r24
    1c7c:	52 f0       	brmi	.+20     	; 0x1c92 <__fp_round+0x20>
    1c7e:	bb 0f       	add	r27, r27
    1c80:	40 f4       	brcc	.+16     	; 0x1c92 <__fp_round+0x20>
    1c82:	bf 2b       	or	r27, r31
    1c84:	11 f4       	brne	.+4      	; 0x1c8a <__fp_round+0x18>
    1c86:	60 ff       	sbrs	r22, 0
    1c88:	04 c0       	rjmp	.+8      	; 0x1c92 <__fp_round+0x20>
    1c8a:	6f 5f       	subi	r22, 0xFF	; 255
    1c8c:	7f 4f       	sbci	r23, 0xFF	; 255
    1c8e:	8f 4f       	sbci	r24, 0xFF	; 255
    1c90:	9f 4f       	sbci	r25, 0xFF	; 255
    1c92:	08 95       	ret

00001c94 <__fp_split3>:
    1c94:	57 fd       	sbrc	r21, 7
    1c96:	90 58       	subi	r25, 0x80	; 128
    1c98:	44 0f       	add	r20, r20
    1c9a:	55 1f       	adc	r21, r21
    1c9c:	59 f0       	breq	.+22     	; 0x1cb4 <__fp_splitA+0x10>
    1c9e:	5f 3f       	cpi	r21, 0xFF	; 255
    1ca0:	71 f0       	breq	.+28     	; 0x1cbe <__fp_splitA+0x1a>
    1ca2:	47 95       	ror	r20

00001ca4 <__fp_splitA>:
    1ca4:	88 0f       	add	r24, r24
    1ca6:	97 fb       	bst	r25, 7
    1ca8:	99 1f       	adc	r25, r25
    1caa:	61 f0       	breq	.+24     	; 0x1cc4 <__fp_splitA+0x20>
    1cac:	9f 3f       	cpi	r25, 0xFF	; 255
    1cae:	79 f0       	breq	.+30     	; 0x1cce <__fp_splitA+0x2a>
    1cb0:	87 95       	ror	r24
    1cb2:	08 95       	ret
    1cb4:	12 16       	cp	r1, r18
    1cb6:	13 06       	cpc	r1, r19
    1cb8:	14 06       	cpc	r1, r20
    1cba:	55 1f       	adc	r21, r21
    1cbc:	f2 cf       	rjmp	.-28     	; 0x1ca2 <__fp_split3+0xe>
    1cbe:	46 95       	lsr	r20
    1cc0:	f1 df       	rcall	.-30     	; 0x1ca4 <__fp_splitA>
    1cc2:	08 c0       	rjmp	.+16     	; 0x1cd4 <__fp_splitA+0x30>
    1cc4:	16 16       	cp	r1, r22
    1cc6:	17 06       	cpc	r1, r23
    1cc8:	18 06       	cpc	r1, r24
    1cca:	99 1f       	adc	r25, r25
    1ccc:	f1 cf       	rjmp	.-30     	; 0x1cb0 <__fp_splitA+0xc>
    1cce:	86 95       	lsr	r24
    1cd0:	71 05       	cpc	r23, r1
    1cd2:	61 05       	cpc	r22, r1
    1cd4:	08 94       	sec
    1cd6:	08 95       	ret

00001cd8 <__fp_zero>:
    1cd8:	e8 94       	clt

00001cda <__fp_szero>:
    1cda:	bb 27       	eor	r27, r27
    1cdc:	66 27       	eor	r22, r22
    1cde:	77 27       	eor	r23, r23
    1ce0:	cb 01       	movw	r24, r22
    1ce2:	97 f9       	bld	r25, 7
    1ce4:	08 95       	ret

00001ce6 <__mulsf3>:
    1ce6:	0b d0       	rcall	.+22     	; 0x1cfe <__mulsf3x>
    1ce8:	c4 cf       	rjmp	.-120    	; 0x1c72 <__fp_round>
    1cea:	b5 df       	rcall	.-150    	; 0x1c56 <__fp_pscA>
    1cec:	28 f0       	brcs	.+10     	; 0x1cf8 <__mulsf3+0x12>
    1cee:	ba df       	rcall	.-140    	; 0x1c64 <__fp_pscB>
    1cf0:	18 f0       	brcs	.+6      	; 0x1cf8 <__mulsf3+0x12>
    1cf2:	95 23       	and	r25, r21
    1cf4:	09 f0       	breq	.+2      	; 0x1cf8 <__mulsf3+0x12>
    1cf6:	a6 cf       	rjmp	.-180    	; 0x1c44 <__fp_inf>
    1cf8:	ab cf       	rjmp	.-170    	; 0x1c50 <__fp_nan>
    1cfa:	11 24       	eor	r1, r1
    1cfc:	ee cf       	rjmp	.-36     	; 0x1cda <__fp_szero>

00001cfe <__mulsf3x>:
    1cfe:	ca df       	rcall	.-108    	; 0x1c94 <__fp_split3>
    1d00:	a0 f3       	brcs	.-24     	; 0x1cea <__mulsf3+0x4>

00001d02 <__mulsf3_pse>:
    1d02:	95 9f       	mul	r25, r21
    1d04:	d1 f3       	breq	.-12     	; 0x1cfa <__mulsf3+0x14>
    1d06:	95 0f       	add	r25, r21
    1d08:	50 e0       	ldi	r21, 0x00	; 0
    1d0a:	55 1f       	adc	r21, r21
    1d0c:	62 9f       	mul	r22, r18
    1d0e:	f0 01       	movw	r30, r0
    1d10:	72 9f       	mul	r23, r18
    1d12:	bb 27       	eor	r27, r27
    1d14:	f0 0d       	add	r31, r0
    1d16:	b1 1d       	adc	r27, r1
    1d18:	63 9f       	mul	r22, r19
    1d1a:	aa 27       	eor	r26, r26
    1d1c:	f0 0d       	add	r31, r0
    1d1e:	b1 1d       	adc	r27, r1
    1d20:	aa 1f       	adc	r26, r26
    1d22:	64 9f       	mul	r22, r20
    1d24:	66 27       	eor	r22, r22
    1d26:	b0 0d       	add	r27, r0
    1d28:	a1 1d       	adc	r26, r1
    1d2a:	66 1f       	adc	r22, r22
    1d2c:	82 9f       	mul	r24, r18
    1d2e:	22 27       	eor	r18, r18
    1d30:	b0 0d       	add	r27, r0
    1d32:	a1 1d       	adc	r26, r1
    1d34:	62 1f       	adc	r22, r18
    1d36:	73 9f       	mul	r23, r19
    1d38:	b0 0d       	add	r27, r0
    1d3a:	a1 1d       	adc	r26, r1
    1d3c:	62 1f       	adc	r22, r18
    1d3e:	83 9f       	mul	r24, r19
    1d40:	a0 0d       	add	r26, r0
    1d42:	61 1d       	adc	r22, r1
    1d44:	22 1f       	adc	r18, r18
    1d46:	74 9f       	mul	r23, r20
    1d48:	33 27       	eor	r19, r19
    1d4a:	a0 0d       	add	r26, r0
    1d4c:	61 1d       	adc	r22, r1
    1d4e:	23 1f       	adc	r18, r19
    1d50:	84 9f       	mul	r24, r20
    1d52:	60 0d       	add	r22, r0
    1d54:	21 1d       	adc	r18, r1
    1d56:	82 2f       	mov	r24, r18
    1d58:	76 2f       	mov	r23, r22
    1d5a:	6a 2f       	mov	r22, r26
    1d5c:	11 24       	eor	r1, r1
    1d5e:	9f 57       	subi	r25, 0x7F	; 127
    1d60:	50 40       	sbci	r21, 0x00	; 0
    1d62:	8a f0       	brmi	.+34     	; 0x1d86 <__mulsf3_pse+0x84>
    1d64:	e1 f0       	breq	.+56     	; 0x1d9e <__mulsf3_pse+0x9c>
    1d66:	88 23       	and	r24, r24
    1d68:	4a f0       	brmi	.+18     	; 0x1d7c <__mulsf3_pse+0x7a>
    1d6a:	ee 0f       	add	r30, r30
    1d6c:	ff 1f       	adc	r31, r31
    1d6e:	bb 1f       	adc	r27, r27
    1d70:	66 1f       	adc	r22, r22
    1d72:	77 1f       	adc	r23, r23
    1d74:	88 1f       	adc	r24, r24
    1d76:	91 50       	subi	r25, 0x01	; 1
    1d78:	50 40       	sbci	r21, 0x00	; 0
    1d7a:	a9 f7       	brne	.-22     	; 0x1d66 <__mulsf3_pse+0x64>
    1d7c:	9e 3f       	cpi	r25, 0xFE	; 254
    1d7e:	51 05       	cpc	r21, r1
    1d80:	70 f0       	brcs	.+28     	; 0x1d9e <__mulsf3_pse+0x9c>
    1d82:	60 cf       	rjmp	.-320    	; 0x1c44 <__fp_inf>
    1d84:	aa cf       	rjmp	.-172    	; 0x1cda <__fp_szero>
    1d86:	5f 3f       	cpi	r21, 0xFF	; 255
    1d88:	ec f3       	brlt	.-6      	; 0x1d84 <__mulsf3_pse+0x82>
    1d8a:	98 3e       	cpi	r25, 0xE8	; 232
    1d8c:	dc f3       	brlt	.-10     	; 0x1d84 <__mulsf3_pse+0x82>
    1d8e:	86 95       	lsr	r24
    1d90:	77 95       	ror	r23
    1d92:	67 95       	ror	r22
    1d94:	b7 95       	ror	r27
    1d96:	f7 95       	ror	r31
    1d98:	e7 95       	ror	r30
    1d9a:	9f 5f       	subi	r25, 0xFF	; 255
    1d9c:	c1 f7       	brne	.-16     	; 0x1d8e <__mulsf3_pse+0x8c>
    1d9e:	fe 2b       	or	r31, r30
    1da0:	88 0f       	add	r24, r24
    1da2:	91 1d       	adc	r25, r1
    1da4:	96 95       	lsr	r25
    1da6:	87 95       	ror	r24
    1da8:	97 f9       	bld	r25, 7
    1daa:	08 95       	ret

00001dac <pow>:
    1dac:	fa 01       	movw	r30, r20
    1dae:	ee 0f       	add	r30, r30
    1db0:	ff 1f       	adc	r31, r31
    1db2:	30 96       	adiw	r30, 0x00	; 0
    1db4:	21 05       	cpc	r18, r1
    1db6:	31 05       	cpc	r19, r1
    1db8:	99 f1       	breq	.+102    	; 0x1e20 <pow+0x74>
    1dba:	61 15       	cp	r22, r1
    1dbc:	71 05       	cpc	r23, r1
    1dbe:	61 f4       	brne	.+24     	; 0x1dd8 <pow+0x2c>
    1dc0:	80 38       	cpi	r24, 0x80	; 128
    1dc2:	bf e3       	ldi	r27, 0x3F	; 63
    1dc4:	9b 07       	cpc	r25, r27
    1dc6:	49 f1       	breq	.+82     	; 0x1e1a <pow+0x6e>
    1dc8:	68 94       	set
    1dca:	90 38       	cpi	r25, 0x80	; 128
    1dcc:	81 05       	cpc	r24, r1
    1dce:	61 f0       	breq	.+24     	; 0x1de8 <pow+0x3c>
    1dd0:	80 38       	cpi	r24, 0x80	; 128
    1dd2:	bf ef       	ldi	r27, 0xFF	; 255
    1dd4:	9b 07       	cpc	r25, r27
    1dd6:	41 f0       	breq	.+16     	; 0x1de8 <pow+0x3c>
    1dd8:	99 23       	and	r25, r25
    1dda:	42 f5       	brpl	.+80     	; 0x1e2c <pow+0x80>
    1ddc:	ff 3f       	cpi	r31, 0xFF	; 255
    1dde:	e1 05       	cpc	r30, r1
    1de0:	31 05       	cpc	r19, r1
    1de2:	21 05       	cpc	r18, r1
    1de4:	11 f1       	breq	.+68     	; 0x1e2a <pow+0x7e>
    1de6:	e8 94       	clt
    1de8:	08 94       	sec
    1dea:	e7 95       	ror	r30
    1dec:	d9 01       	movw	r26, r18
    1dee:	aa 23       	and	r26, r26
    1df0:	29 f4       	brne	.+10     	; 0x1dfc <pow+0x50>
    1df2:	ab 2f       	mov	r26, r27
    1df4:	be 2f       	mov	r27, r30
    1df6:	f8 5f       	subi	r31, 0xF8	; 248
    1df8:	d0 f3       	brcs	.-12     	; 0x1dee <pow+0x42>
    1dfa:	10 c0       	rjmp	.+32     	; 0x1e1c <pow+0x70>
    1dfc:	ff 5f       	subi	r31, 0xFF	; 255
    1dfe:	70 f4       	brcc	.+28     	; 0x1e1c <pow+0x70>
    1e00:	a6 95       	lsr	r26
    1e02:	e0 f7       	brcc	.-8      	; 0x1dfc <pow+0x50>
    1e04:	f7 39       	cpi	r31, 0x97	; 151
    1e06:	50 f0       	brcs	.+20     	; 0x1e1c <pow+0x70>
    1e08:	19 f0       	breq	.+6      	; 0x1e10 <pow+0x64>
    1e0a:	ff 3a       	cpi	r31, 0xAF	; 175
    1e0c:	38 f4       	brcc	.+14     	; 0x1e1c <pow+0x70>
    1e0e:	9f 77       	andi	r25, 0x7F	; 127
    1e10:	9f 93       	push	r25
    1e12:	0c d0       	rcall	.+24     	; 0x1e2c <pow+0x80>
    1e14:	0f 90       	pop	r0
    1e16:	07 fc       	sbrc	r0, 7
    1e18:	90 58       	subi	r25, 0x80	; 128
    1e1a:	08 95       	ret
    1e1c:	3e f0       	brts	.+14     	; 0x1e2c <pow+0x80>
    1e1e:	18 cf       	rjmp	.-464    	; 0x1c50 <__fp_nan>
    1e20:	60 e0       	ldi	r22, 0x00	; 0
    1e22:	70 e0       	ldi	r23, 0x00	; 0
    1e24:	80 e8       	ldi	r24, 0x80	; 128
    1e26:	9f e3       	ldi	r25, 0x3F	; 63
    1e28:	08 95       	ret
    1e2a:	4f e7       	ldi	r20, 0x7F	; 127
    1e2c:	9f 77       	andi	r25, 0x7F	; 127
    1e2e:	5f 93       	push	r21
    1e30:	4f 93       	push	r20
    1e32:	3f 93       	push	r19
    1e34:	2f 93       	push	r18
    1e36:	9e d0       	rcall	.+316    	; 0x1f74 <log>
    1e38:	2f 91       	pop	r18
    1e3a:	3f 91       	pop	r19
    1e3c:	4f 91       	pop	r20
    1e3e:	5f 91       	pop	r21
    1e40:	52 df       	rcall	.-348    	; 0x1ce6 <__mulsf3>
    1e42:	05 c0       	rjmp	.+10     	; 0x1e4e <exp>
    1e44:	19 f4       	brne	.+6      	; 0x1e4c <pow+0xa0>
    1e46:	0e f0       	brts	.+2      	; 0x1e4a <pow+0x9e>
    1e48:	fd ce       	rjmp	.-518    	; 0x1c44 <__fp_inf>
    1e4a:	46 cf       	rjmp	.-372    	; 0x1cd8 <__fp_zero>
    1e4c:	01 cf       	rjmp	.-510    	; 0x1c50 <__fp_nan>

00001e4e <exp>:
    1e4e:	2a df       	rcall	.-428    	; 0x1ca4 <__fp_splitA>
    1e50:	c8 f3       	brcs	.-14     	; 0x1e44 <pow+0x98>
    1e52:	96 38       	cpi	r25, 0x86	; 134
    1e54:	c0 f7       	brcc	.-16     	; 0x1e46 <pow+0x9a>
    1e56:	07 f8       	bld	r0, 7
    1e58:	0f 92       	push	r0
    1e5a:	e8 94       	clt
    1e5c:	2b e3       	ldi	r18, 0x3B	; 59
    1e5e:	3a ea       	ldi	r19, 0xAA	; 170
    1e60:	48 eb       	ldi	r20, 0xB8	; 184
    1e62:	5f e7       	ldi	r21, 0x7F	; 127
    1e64:	4e df       	rcall	.-356    	; 0x1d02 <__mulsf3_pse>
    1e66:	0f 92       	push	r0
    1e68:	0f 92       	push	r0
    1e6a:	0f 92       	push	r0
    1e6c:	4d b7       	in	r20, 0x3d	; 61
    1e6e:	5e b7       	in	r21, 0x3e	; 62
    1e70:	0f 92       	push	r0
    1e72:	c0 d0       	rcall	.+384    	; 0x1ff4 <modf>
    1e74:	e8 e6       	ldi	r30, 0x68	; 104
    1e76:	f0 e0       	ldi	r31, 0x00	; 0
    1e78:	16 d0       	rcall	.+44     	; 0x1ea6 <__fp_powser>
    1e7a:	4f 91       	pop	r20
    1e7c:	5f 91       	pop	r21
    1e7e:	ef 91       	pop	r30
    1e80:	ff 91       	pop	r31
    1e82:	e5 95       	asr	r30
    1e84:	ee 1f       	adc	r30, r30
    1e86:	ff 1f       	adc	r31, r31
    1e88:	49 f0       	breq	.+18     	; 0x1e9c <exp+0x4e>
    1e8a:	fe 57       	subi	r31, 0x7E	; 126
    1e8c:	e0 68       	ori	r30, 0x80	; 128
    1e8e:	44 27       	eor	r20, r20
    1e90:	ee 0f       	add	r30, r30
    1e92:	44 1f       	adc	r20, r20
    1e94:	fa 95       	dec	r31
    1e96:	e1 f7       	brne	.-8      	; 0x1e90 <exp+0x42>
    1e98:	41 95       	neg	r20
    1e9a:	55 0b       	sbc	r21, r21
    1e9c:	32 d0       	rcall	.+100    	; 0x1f02 <ldexp>
    1e9e:	0f 90       	pop	r0
    1ea0:	07 fe       	sbrs	r0, 7
    1ea2:	26 c0       	rjmp	.+76     	; 0x1ef0 <inverse>
    1ea4:	08 95       	ret

00001ea6 <__fp_powser>:
    1ea6:	df 93       	push	r29
    1ea8:	cf 93       	push	r28
    1eaa:	1f 93       	push	r17
    1eac:	0f 93       	push	r16
    1eae:	ff 92       	push	r15
    1eb0:	ef 92       	push	r14
    1eb2:	df 92       	push	r13
    1eb4:	7b 01       	movw	r14, r22
    1eb6:	8c 01       	movw	r16, r24
    1eb8:	68 94       	set
    1eba:	05 c0       	rjmp	.+10     	; 0x1ec6 <__fp_powser+0x20>
    1ebc:	da 2e       	mov	r13, r26
    1ebe:	ef 01       	movw	r28, r30
    1ec0:	1e df       	rcall	.-452    	; 0x1cfe <__mulsf3x>
    1ec2:	fe 01       	movw	r30, r28
    1ec4:	e8 94       	clt
    1ec6:	a5 91       	lpm	r26, Z+
    1ec8:	25 91       	lpm	r18, Z+
    1eca:	35 91       	lpm	r19, Z+
    1ecc:	45 91       	lpm	r20, Z+
    1ece:	55 91       	lpm	r21, Z+
    1ed0:	ae f3       	brts	.-22     	; 0x1ebc <__fp_powser+0x16>
    1ed2:	ef 01       	movw	r28, r30
    1ed4:	8e dd       	rcall	.-1252   	; 0x19f2 <__addsf3x>
    1ed6:	fe 01       	movw	r30, r28
    1ed8:	97 01       	movw	r18, r14
    1eda:	a8 01       	movw	r20, r16
    1edc:	da 94       	dec	r13
    1ede:	79 f7       	brne	.-34     	; 0x1ebe <__fp_powser+0x18>
    1ee0:	df 90       	pop	r13
    1ee2:	ef 90       	pop	r14
    1ee4:	ff 90       	pop	r15
    1ee6:	0f 91       	pop	r16
    1ee8:	1f 91       	pop	r17
    1eea:	cf 91       	pop	r28
    1eec:	df 91       	pop	r29
    1eee:	08 95       	ret

00001ef0 <inverse>:
    1ef0:	9b 01       	movw	r18, r22
    1ef2:	ac 01       	movw	r20, r24
    1ef4:	60 e0       	ldi	r22, 0x00	; 0
    1ef6:	70 e0       	ldi	r23, 0x00	; 0
    1ef8:	80 e8       	ldi	r24, 0x80	; 128
    1efa:	9f e3       	ldi	r25, 0x3F	; 63
    1efc:	cd cd       	rjmp	.-1126   	; 0x1a98 <__divsf3>
    1efe:	a2 ce       	rjmp	.-700    	; 0x1c44 <__fp_inf>
    1f00:	ac c0       	rjmp	.+344    	; 0x205a <__fp_mpack>

00001f02 <ldexp>:
    1f02:	d0 de       	rcall	.-608    	; 0x1ca4 <__fp_splitA>
    1f04:	e8 f3       	brcs	.-6      	; 0x1f00 <inverse+0x10>
    1f06:	99 23       	and	r25, r25
    1f08:	d9 f3       	breq	.-10     	; 0x1f00 <inverse+0x10>
    1f0a:	94 0f       	add	r25, r20
    1f0c:	51 1d       	adc	r21, r1
    1f0e:	bb f3       	brvs	.-18     	; 0x1efe <inverse+0xe>
    1f10:	91 50       	subi	r25, 0x01	; 1
    1f12:	50 40       	sbci	r21, 0x00	; 0
    1f14:	94 f0       	brlt	.+36     	; 0x1f3a <ldexp+0x38>
    1f16:	59 f0       	breq	.+22     	; 0x1f2e <ldexp+0x2c>
    1f18:	88 23       	and	r24, r24
    1f1a:	32 f0       	brmi	.+12     	; 0x1f28 <ldexp+0x26>
    1f1c:	66 0f       	add	r22, r22
    1f1e:	77 1f       	adc	r23, r23
    1f20:	88 1f       	adc	r24, r24
    1f22:	91 50       	subi	r25, 0x01	; 1
    1f24:	50 40       	sbci	r21, 0x00	; 0
    1f26:	c1 f7       	brne	.-16     	; 0x1f18 <ldexp+0x16>
    1f28:	9e 3f       	cpi	r25, 0xFE	; 254
    1f2a:	51 05       	cpc	r21, r1
    1f2c:	44 f7       	brge	.-48     	; 0x1efe <inverse+0xe>
    1f2e:	88 0f       	add	r24, r24
    1f30:	91 1d       	adc	r25, r1
    1f32:	96 95       	lsr	r25
    1f34:	87 95       	ror	r24
    1f36:	97 f9       	bld	r25, 7
    1f38:	08 95       	ret
    1f3a:	5f 3f       	cpi	r21, 0xFF	; 255
    1f3c:	ac f0       	brlt	.+42     	; 0x1f68 <ldexp+0x66>
    1f3e:	98 3e       	cpi	r25, 0xE8	; 232
    1f40:	9c f0       	brlt	.+38     	; 0x1f68 <ldexp+0x66>
    1f42:	bb 27       	eor	r27, r27
    1f44:	86 95       	lsr	r24
    1f46:	77 95       	ror	r23
    1f48:	67 95       	ror	r22
    1f4a:	b7 95       	ror	r27
    1f4c:	08 f4       	brcc	.+2      	; 0x1f50 <ldexp+0x4e>
    1f4e:	b1 60       	ori	r27, 0x01	; 1
    1f50:	93 95       	inc	r25
    1f52:	c1 f7       	brne	.-16     	; 0x1f44 <ldexp+0x42>
    1f54:	bb 0f       	add	r27, r27
    1f56:	58 f7       	brcc	.-42     	; 0x1f2e <ldexp+0x2c>
    1f58:	11 f4       	brne	.+4      	; 0x1f5e <ldexp+0x5c>
    1f5a:	60 ff       	sbrs	r22, 0
    1f5c:	e8 cf       	rjmp	.-48     	; 0x1f2e <ldexp+0x2c>
    1f5e:	6f 5f       	subi	r22, 0xFF	; 255
    1f60:	7f 4f       	sbci	r23, 0xFF	; 255
    1f62:	8f 4f       	sbci	r24, 0xFF	; 255
    1f64:	9f 4f       	sbci	r25, 0xFF	; 255
    1f66:	e3 cf       	rjmp	.-58     	; 0x1f2e <ldexp+0x2c>
    1f68:	b8 ce       	rjmp	.-656    	; 0x1cda <__fp_szero>
    1f6a:	0e f0       	brts	.+2      	; 0x1f6e <ldexp+0x6c>
    1f6c:	76 c0       	rjmp	.+236    	; 0x205a <__fp_mpack>
    1f6e:	70 ce       	rjmp	.-800    	; 0x1c50 <__fp_nan>
    1f70:	68 94       	set
    1f72:	68 ce       	rjmp	.-816    	; 0x1c44 <__fp_inf>

00001f74 <log>:
    1f74:	97 de       	rcall	.-722    	; 0x1ca4 <__fp_splitA>
    1f76:	c8 f3       	brcs	.-14     	; 0x1f6a <ldexp+0x68>
    1f78:	99 23       	and	r25, r25
    1f7a:	d1 f3       	breq	.-12     	; 0x1f70 <ldexp+0x6e>
    1f7c:	c6 f3       	brts	.-16     	; 0x1f6e <ldexp+0x6c>
    1f7e:	df 93       	push	r29
    1f80:	cf 93       	push	r28
    1f82:	1f 93       	push	r17
    1f84:	0f 93       	push	r16
    1f86:	ff 92       	push	r15
    1f88:	c9 2f       	mov	r28, r25
    1f8a:	dd 27       	eor	r29, r29
    1f8c:	88 23       	and	r24, r24
    1f8e:	2a f0       	brmi	.+10     	; 0x1f9a <log+0x26>
    1f90:	21 97       	sbiw	r28, 0x01	; 1
    1f92:	66 0f       	add	r22, r22
    1f94:	77 1f       	adc	r23, r23
    1f96:	88 1f       	adc	r24, r24
    1f98:	da f7       	brpl	.-10     	; 0x1f90 <log+0x1c>
    1f9a:	20 e0       	ldi	r18, 0x00	; 0
    1f9c:	30 e0       	ldi	r19, 0x00	; 0
    1f9e:	40 e8       	ldi	r20, 0x80	; 128
    1fa0:	5f eb       	ldi	r21, 0xBF	; 191
    1fa2:	9f e3       	ldi	r25, 0x3F	; 63
    1fa4:	88 39       	cpi	r24, 0x98	; 152
    1fa6:	20 f0       	brcs	.+8      	; 0x1fb0 <log+0x3c>
    1fa8:	80 3e       	cpi	r24, 0xE0	; 224
    1faa:	30 f0       	brcs	.+12     	; 0x1fb8 <log+0x44>
    1fac:	21 96       	adiw	r28, 0x01	; 1
    1fae:	8f 77       	andi	r24, 0x7F	; 127
    1fb0:	0f dd       	rcall	.-1506   	; 0x19d0 <__addsf3>
    1fb2:	e0 e9       	ldi	r30, 0x90	; 144
    1fb4:	f0 e0       	ldi	r31, 0x00	; 0
    1fb6:	03 c0       	rjmp	.+6      	; 0x1fbe <log+0x4a>
    1fb8:	0b dd       	rcall	.-1514   	; 0x19d0 <__addsf3>
    1fba:	ed eb       	ldi	r30, 0xBD	; 189
    1fbc:	f0 e0       	ldi	r31, 0x00	; 0
    1fbe:	73 df       	rcall	.-282    	; 0x1ea6 <__fp_powser>
    1fc0:	8b 01       	movw	r16, r22
    1fc2:	be 01       	movw	r22, r28
    1fc4:	ec 01       	movw	r28, r24
    1fc6:	fb 2e       	mov	r15, r27
    1fc8:	6f 57       	subi	r22, 0x7F	; 127
    1fca:	71 09       	sbc	r23, r1
    1fcc:	75 95       	asr	r23
    1fce:	77 1f       	adc	r23, r23
    1fd0:	88 0b       	sbc	r24, r24
    1fd2:	99 0b       	sbc	r25, r25
    1fd4:	fc dd       	rcall	.-1032   	; 0x1bce <__floatsisf>
    1fd6:	28 e1       	ldi	r18, 0x18	; 24
    1fd8:	32 e7       	ldi	r19, 0x72	; 114
    1fda:	41 e3       	ldi	r20, 0x31	; 49
    1fdc:	5f e3       	ldi	r21, 0x3F	; 63
    1fde:	8f de       	rcall	.-738    	; 0x1cfe <__mulsf3x>
    1fe0:	af 2d       	mov	r26, r15
    1fe2:	98 01       	movw	r18, r16
    1fe4:	ae 01       	movw	r20, r28
    1fe6:	ff 90       	pop	r15
    1fe8:	0f 91       	pop	r16
    1fea:	1f 91       	pop	r17
    1fec:	cf 91       	pop	r28
    1fee:	df 91       	pop	r29
    1ff0:	00 dd       	rcall	.-1536   	; 0x19f2 <__addsf3x>
    1ff2:	3f ce       	rjmp	.-898    	; 0x1c72 <__fp_round>

00001ff4 <modf>:
    1ff4:	fa 01       	movw	r30, r20
    1ff6:	dc 01       	movw	r26, r24
    1ff8:	aa 0f       	add	r26, r26
    1ffa:	bb 1f       	adc	r27, r27
    1ffc:	9b 01       	movw	r18, r22
    1ffe:	ac 01       	movw	r20, r24
    2000:	bf 57       	subi	r27, 0x7F	; 127
    2002:	28 f4       	brcc	.+10     	; 0x200e <modf+0x1a>
    2004:	22 27       	eor	r18, r18
    2006:	33 27       	eor	r19, r19
    2008:	44 27       	eor	r20, r20
    200a:	50 78       	andi	r21, 0x80	; 128
    200c:	1f c0       	rjmp	.+62     	; 0x204c <modf+0x58>
    200e:	b7 51       	subi	r27, 0x17	; 23
    2010:	88 f4       	brcc	.+34     	; 0x2034 <modf+0x40>
    2012:	ab 2f       	mov	r26, r27
    2014:	00 24       	eor	r0, r0
    2016:	46 95       	lsr	r20
    2018:	37 95       	ror	r19
    201a:	27 95       	ror	r18
    201c:	01 1c       	adc	r0, r1
    201e:	a3 95       	inc	r26
    2020:	d2 f3       	brmi	.-12     	; 0x2016 <modf+0x22>
    2022:	00 20       	and	r0, r0
    2024:	69 f0       	breq	.+26     	; 0x2040 <modf+0x4c>
    2026:	22 0f       	add	r18, r18
    2028:	33 1f       	adc	r19, r19
    202a:	44 1f       	adc	r20, r20
    202c:	b3 95       	inc	r27
    202e:	da f3       	brmi	.-10     	; 0x2026 <modf+0x32>
    2030:	0d d0       	rcall	.+26     	; 0x204c <modf+0x58>
    2032:	cd cc       	rjmp	.-1638   	; 0x19ce <__subsf3>
    2034:	61 30       	cpi	r22, 0x01	; 1
    2036:	71 05       	cpc	r23, r1
    2038:	a0 e8       	ldi	r26, 0x80	; 128
    203a:	8a 07       	cpc	r24, r26
    203c:	b9 46       	sbci	r27, 0x69	; 105
    203e:	30 f4       	brcc	.+12     	; 0x204c <modf+0x58>
    2040:	9b 01       	movw	r18, r22
    2042:	ac 01       	movw	r20, r24
    2044:	66 27       	eor	r22, r22
    2046:	77 27       	eor	r23, r23
    2048:	88 27       	eor	r24, r24
    204a:	90 78       	andi	r25, 0x80	; 128
    204c:	30 96       	adiw	r30, 0x00	; 0
    204e:	21 f0       	breq	.+8      	; 0x2058 <modf+0x64>
    2050:	20 83       	st	Z, r18
    2052:	31 83       	std	Z+1, r19	; 0x01
    2054:	42 83       	std	Z+2, r20	; 0x02
    2056:	53 83       	std	Z+3, r21	; 0x03
    2058:	08 95       	ret

0000205a <__fp_mpack>:
    205a:	9f 3f       	cpi	r25, 0xFF	; 255
    205c:	31 f0       	breq	.+12     	; 0x206a <__fp_mpack_finite+0xc>

0000205e <__fp_mpack_finite>:
    205e:	91 50       	subi	r25, 0x01	; 1
    2060:	20 f4       	brcc	.+8      	; 0x206a <__fp_mpack_finite+0xc>
    2062:	87 95       	ror	r24
    2064:	77 95       	ror	r23
    2066:	67 95       	ror	r22
    2068:	b7 95       	ror	r27
    206a:	88 0f       	add	r24, r24
    206c:	91 1d       	adc	r25, r1
    206e:	96 95       	lsr	r25
    2070:	87 95       	ror	r24
    2072:	97 f9       	bld	r25, 7
    2074:	08 95       	ret

00002076 <__mulsi3>:
    2076:	db 01       	movw	r26, r22
    2078:	8f 93       	push	r24
    207a:	9f 93       	push	r25
    207c:	0e 94 a0 10 	call	0x2140	; 0x2140 <__muluhisi3>
    2080:	bf 91       	pop	r27
    2082:	af 91       	pop	r26
    2084:	a2 9f       	mul	r26, r18
    2086:	80 0d       	add	r24, r0
    2088:	91 1d       	adc	r25, r1
    208a:	a3 9f       	mul	r26, r19
    208c:	90 0d       	add	r25, r0
    208e:	b2 9f       	mul	r27, r18
    2090:	90 0d       	add	r25, r0
    2092:	11 24       	eor	r1, r1
    2094:	08 95       	ret

00002096 <__divmodhi4>:
    2096:	97 fb       	bst	r25, 7
    2098:	07 2e       	mov	r0, r23
    209a:	16 f4       	brtc	.+4      	; 0x20a0 <__divmodhi4+0xa>
    209c:	00 94       	com	r0
    209e:	07 d0       	rcall	.+14     	; 0x20ae <__divmodhi4_neg1>
    20a0:	77 fd       	sbrc	r23, 7
    20a2:	09 d0       	rcall	.+18     	; 0x20b6 <__divmodhi4_neg2>
    20a4:	0e 94 ea 10 	call	0x21d4	; 0x21d4 <__udivmodhi4>
    20a8:	07 fc       	sbrc	r0, 7
    20aa:	05 d0       	rcall	.+10     	; 0x20b6 <__divmodhi4_neg2>
    20ac:	3e f4       	brtc	.+14     	; 0x20bc <__divmodhi4_exit>

000020ae <__divmodhi4_neg1>:
    20ae:	90 95       	com	r25
    20b0:	81 95       	neg	r24
    20b2:	9f 4f       	sbci	r25, 0xFF	; 255
    20b4:	08 95       	ret

000020b6 <__divmodhi4_neg2>:
    20b6:	70 95       	com	r23
    20b8:	61 95       	neg	r22
    20ba:	7f 4f       	sbci	r23, 0xFF	; 255

000020bc <__divmodhi4_exit>:
    20bc:	08 95       	ret

000020be <__udivmodsi4>:
    20be:	a1 e2       	ldi	r26, 0x21	; 33
    20c0:	1a 2e       	mov	r1, r26
    20c2:	aa 1b       	sub	r26, r26
    20c4:	bb 1b       	sub	r27, r27
    20c6:	fd 01       	movw	r30, r26
    20c8:	0d c0       	rjmp	.+26     	; 0x20e4 <__udivmodsi4_ep>

000020ca <__udivmodsi4_loop>:
    20ca:	aa 1f       	adc	r26, r26
    20cc:	bb 1f       	adc	r27, r27
    20ce:	ee 1f       	adc	r30, r30
    20d0:	ff 1f       	adc	r31, r31
    20d2:	a2 17       	cp	r26, r18
    20d4:	b3 07       	cpc	r27, r19
    20d6:	e4 07       	cpc	r30, r20
    20d8:	f5 07       	cpc	r31, r21
    20da:	20 f0       	brcs	.+8      	; 0x20e4 <__udivmodsi4_ep>
    20dc:	a2 1b       	sub	r26, r18
    20de:	b3 0b       	sbc	r27, r19
    20e0:	e4 0b       	sbc	r30, r20
    20e2:	f5 0b       	sbc	r31, r21

000020e4 <__udivmodsi4_ep>:
    20e4:	66 1f       	adc	r22, r22
    20e6:	77 1f       	adc	r23, r23
    20e8:	88 1f       	adc	r24, r24
    20ea:	99 1f       	adc	r25, r25
    20ec:	1a 94       	dec	r1
    20ee:	69 f7       	brne	.-38     	; 0x20ca <__udivmodsi4_loop>
    20f0:	60 95       	com	r22
    20f2:	70 95       	com	r23
    20f4:	80 95       	com	r24
    20f6:	90 95       	com	r25
    20f8:	9b 01       	movw	r18, r22
    20fa:	ac 01       	movw	r20, r24
    20fc:	bd 01       	movw	r22, r26
    20fe:	cf 01       	movw	r24, r30
    2100:	08 95       	ret

00002102 <__divmodsi4>:
    2102:	05 2e       	mov	r0, r21
    2104:	97 fb       	bst	r25, 7
    2106:	1e f4       	brtc	.+6      	; 0x210e <__divmodsi4+0xc>
    2108:	00 94       	com	r0
    210a:	0e 94 98 10 	call	0x2130	; 0x2130 <__negsi2>
    210e:	57 fd       	sbrc	r21, 7
    2110:	07 d0       	rcall	.+14     	; 0x2120 <__divmodsi4_neg2>
    2112:	0e 94 5f 10 	call	0x20be	; 0x20be <__udivmodsi4>
    2116:	07 fc       	sbrc	r0, 7
    2118:	03 d0       	rcall	.+6      	; 0x2120 <__divmodsi4_neg2>
    211a:	4e f4       	brtc	.+18     	; 0x212e <__divmodsi4_exit>
    211c:	0c 94 98 10 	jmp	0x2130	; 0x2130 <__negsi2>

00002120 <__divmodsi4_neg2>:
    2120:	50 95       	com	r21
    2122:	40 95       	com	r20
    2124:	30 95       	com	r19
    2126:	21 95       	neg	r18
    2128:	3f 4f       	sbci	r19, 0xFF	; 255
    212a:	4f 4f       	sbci	r20, 0xFF	; 255
    212c:	5f 4f       	sbci	r21, 0xFF	; 255

0000212e <__divmodsi4_exit>:
    212e:	08 95       	ret

00002130 <__negsi2>:
    2130:	90 95       	com	r25
    2132:	80 95       	com	r24
    2134:	70 95       	com	r23
    2136:	61 95       	neg	r22
    2138:	7f 4f       	sbci	r23, 0xFF	; 255
    213a:	8f 4f       	sbci	r24, 0xFF	; 255
    213c:	9f 4f       	sbci	r25, 0xFF	; 255
    213e:	08 95       	ret

00002140 <__muluhisi3>:
    2140:	0e 94 fe 10 	call	0x21fc	; 0x21fc <__umulhisi3>
    2144:	a5 9f       	mul	r26, r21
    2146:	90 0d       	add	r25, r0
    2148:	b4 9f       	mul	r27, r20
    214a:	90 0d       	add	r25, r0
    214c:	a4 9f       	mul	r26, r20
    214e:	80 0d       	add	r24, r0
    2150:	91 1d       	adc	r25, r1
    2152:	11 24       	eor	r1, r1
    2154:	08 95       	ret

00002156 <__mulshisi3>:
    2156:	b7 ff       	sbrs	r27, 7
    2158:	0c 94 a0 10 	jmp	0x2140	; 0x2140 <__muluhisi3>

0000215c <__mulohisi3>:
    215c:	0e 94 a0 10 	call	0x2140	; 0x2140 <__muluhisi3>
    2160:	82 1b       	sub	r24, r18
    2162:	93 0b       	sbc	r25, r19
    2164:	08 95       	ret

00002166 <__prologue_saves__>:
    2166:	2f 92       	push	r2
    2168:	3f 92       	push	r3
    216a:	4f 92       	push	r4
    216c:	5f 92       	push	r5
    216e:	6f 92       	push	r6
    2170:	7f 92       	push	r7
    2172:	8f 92       	push	r8
    2174:	9f 92       	push	r9
    2176:	af 92       	push	r10
    2178:	bf 92       	push	r11
    217a:	cf 92       	push	r12
    217c:	df 92       	push	r13
    217e:	ef 92       	push	r14
    2180:	ff 92       	push	r15
    2182:	0f 93       	push	r16
    2184:	1f 93       	push	r17
    2186:	cf 93       	push	r28
    2188:	df 93       	push	r29
    218a:	cd b7       	in	r28, 0x3d	; 61
    218c:	de b7       	in	r29, 0x3e	; 62
    218e:	ca 1b       	sub	r28, r26
    2190:	db 0b       	sbc	r29, r27
    2192:	0f b6       	in	r0, 0x3f	; 63
    2194:	f8 94       	cli
    2196:	de bf       	out	0x3e, r29	; 62
    2198:	0f be       	out	0x3f, r0	; 63
    219a:	cd bf       	out	0x3d, r28	; 61
    219c:	09 94       	ijmp

0000219e <__epilogue_restores__>:
    219e:	2a 88       	ldd	r2, Y+18	; 0x12
    21a0:	39 88       	ldd	r3, Y+17	; 0x11
    21a2:	48 88       	ldd	r4, Y+16	; 0x10
    21a4:	5f 84       	ldd	r5, Y+15	; 0x0f
    21a6:	6e 84       	ldd	r6, Y+14	; 0x0e
    21a8:	7d 84       	ldd	r7, Y+13	; 0x0d
    21aa:	8c 84       	ldd	r8, Y+12	; 0x0c
    21ac:	9b 84       	ldd	r9, Y+11	; 0x0b
    21ae:	aa 84       	ldd	r10, Y+10	; 0x0a
    21b0:	b9 84       	ldd	r11, Y+9	; 0x09
    21b2:	c8 84       	ldd	r12, Y+8	; 0x08
    21b4:	df 80       	ldd	r13, Y+7	; 0x07
    21b6:	ee 80       	ldd	r14, Y+6	; 0x06
    21b8:	fd 80       	ldd	r15, Y+5	; 0x05
    21ba:	0c 81       	ldd	r16, Y+4	; 0x04
    21bc:	1b 81       	ldd	r17, Y+3	; 0x03
    21be:	aa 81       	ldd	r26, Y+2	; 0x02
    21c0:	b9 81       	ldd	r27, Y+1	; 0x01
    21c2:	ce 0f       	add	r28, r30
    21c4:	d1 1d       	adc	r29, r1
    21c6:	0f b6       	in	r0, 0x3f	; 63
    21c8:	f8 94       	cli
    21ca:	de bf       	out	0x3e, r29	; 62
    21cc:	0f be       	out	0x3f, r0	; 63
    21ce:	cd bf       	out	0x3d, r28	; 61
    21d0:	ed 01       	movw	r28, r26
    21d2:	08 95       	ret

000021d4 <__udivmodhi4>:
    21d4:	aa 1b       	sub	r26, r26
    21d6:	bb 1b       	sub	r27, r27
    21d8:	51 e1       	ldi	r21, 0x11	; 17
    21da:	07 c0       	rjmp	.+14     	; 0x21ea <__udivmodhi4_ep>

000021dc <__udivmodhi4_loop>:
    21dc:	aa 1f       	adc	r26, r26
    21de:	bb 1f       	adc	r27, r27
    21e0:	a6 17       	cp	r26, r22
    21e2:	b7 07       	cpc	r27, r23
    21e4:	10 f0       	brcs	.+4      	; 0x21ea <__udivmodhi4_ep>
    21e6:	a6 1b       	sub	r26, r22
    21e8:	b7 0b       	sbc	r27, r23

000021ea <__udivmodhi4_ep>:
    21ea:	88 1f       	adc	r24, r24
    21ec:	99 1f       	adc	r25, r25
    21ee:	5a 95       	dec	r21
    21f0:	a9 f7       	brne	.-22     	; 0x21dc <__udivmodhi4_loop>
    21f2:	80 95       	com	r24
    21f4:	90 95       	com	r25
    21f6:	bc 01       	movw	r22, r24
    21f8:	cd 01       	movw	r24, r26
    21fa:	08 95       	ret

000021fc <__umulhisi3>:
    21fc:	a2 9f       	mul	r26, r18
    21fe:	b0 01       	movw	r22, r0
    2200:	b3 9f       	mul	r27, r19
    2202:	c0 01       	movw	r24, r0
    2204:	a3 9f       	mul	r26, r19
    2206:	70 0d       	add	r23, r0
    2208:	81 1d       	adc	r24, r1
    220a:	11 24       	eor	r1, r1
    220c:	91 1d       	adc	r25, r1
    220e:	b2 9f       	mul	r27, r18
    2210:	70 0d       	add	r23, r0
    2212:	81 1d       	adc	r24, r1
    2214:	11 24       	eor	r1, r1
    2216:	91 1d       	adc	r25, r1
    2218:	08 95       	ret

0000221a <malloc>:
    221a:	cf 93       	push	r28
    221c:	df 93       	push	r29
    221e:	82 30       	cpi	r24, 0x02	; 2
    2220:	91 05       	cpc	r25, r1
    2222:	10 f4       	brcc	.+4      	; 0x2228 <malloc+0xe>
    2224:	82 e0       	ldi	r24, 0x02	; 2
    2226:	90 e0       	ldi	r25, 0x00	; 0
    2228:	e0 91 e4 02 	lds	r30, 0x02E4
    222c:	f0 91 e5 02 	lds	r31, 0x02E5
    2230:	20 e0       	ldi	r18, 0x00	; 0
    2232:	30 e0       	ldi	r19, 0x00	; 0
    2234:	a0 e0       	ldi	r26, 0x00	; 0
    2236:	b0 e0       	ldi	r27, 0x00	; 0
    2238:	30 97       	sbiw	r30, 0x00	; 0
    223a:	39 f1       	breq	.+78     	; 0x228a <malloc+0x70>
    223c:	40 81       	ld	r20, Z
    223e:	51 81       	ldd	r21, Z+1	; 0x01
    2240:	48 17       	cp	r20, r24
    2242:	59 07       	cpc	r21, r25
    2244:	b8 f0       	brcs	.+46     	; 0x2274 <malloc+0x5a>
    2246:	48 17       	cp	r20, r24
    2248:	59 07       	cpc	r21, r25
    224a:	71 f4       	brne	.+28     	; 0x2268 <malloc+0x4e>
    224c:	82 81       	ldd	r24, Z+2	; 0x02
    224e:	93 81       	ldd	r25, Z+3	; 0x03
    2250:	10 97       	sbiw	r26, 0x00	; 0
    2252:	29 f0       	breq	.+10     	; 0x225e <malloc+0x44>
    2254:	13 96       	adiw	r26, 0x03	; 3
    2256:	9c 93       	st	X, r25
    2258:	8e 93       	st	-X, r24
    225a:	12 97       	sbiw	r26, 0x02	; 2
    225c:	2c c0       	rjmp	.+88     	; 0x22b6 <malloc+0x9c>
    225e:	90 93 e5 02 	sts	0x02E5, r25
    2262:	80 93 e4 02 	sts	0x02E4, r24
    2266:	27 c0       	rjmp	.+78     	; 0x22b6 <malloc+0x9c>
    2268:	21 15       	cp	r18, r1
    226a:	31 05       	cpc	r19, r1
    226c:	31 f0       	breq	.+12     	; 0x227a <malloc+0x60>
    226e:	42 17       	cp	r20, r18
    2270:	53 07       	cpc	r21, r19
    2272:	18 f0       	brcs	.+6      	; 0x227a <malloc+0x60>
    2274:	a9 01       	movw	r20, r18
    2276:	db 01       	movw	r26, r22
    2278:	01 c0       	rjmp	.+2      	; 0x227c <malloc+0x62>
    227a:	ef 01       	movw	r28, r30
    227c:	9a 01       	movw	r18, r20
    227e:	bd 01       	movw	r22, r26
    2280:	df 01       	movw	r26, r30
    2282:	02 80       	ldd	r0, Z+2	; 0x02
    2284:	f3 81       	ldd	r31, Z+3	; 0x03
    2286:	e0 2d       	mov	r30, r0
    2288:	d7 cf       	rjmp	.-82     	; 0x2238 <malloc+0x1e>
    228a:	21 15       	cp	r18, r1
    228c:	31 05       	cpc	r19, r1
    228e:	f9 f0       	breq	.+62     	; 0x22ce <malloc+0xb4>
    2290:	28 1b       	sub	r18, r24
    2292:	39 0b       	sbc	r19, r25
    2294:	24 30       	cpi	r18, 0x04	; 4
    2296:	31 05       	cpc	r19, r1
    2298:	80 f4       	brcc	.+32     	; 0x22ba <malloc+0xa0>
    229a:	8a 81       	ldd	r24, Y+2	; 0x02
    229c:	9b 81       	ldd	r25, Y+3	; 0x03
    229e:	61 15       	cp	r22, r1
    22a0:	71 05       	cpc	r23, r1
    22a2:	21 f0       	breq	.+8      	; 0x22ac <malloc+0x92>
    22a4:	fb 01       	movw	r30, r22
    22a6:	93 83       	std	Z+3, r25	; 0x03
    22a8:	82 83       	std	Z+2, r24	; 0x02
    22aa:	04 c0       	rjmp	.+8      	; 0x22b4 <malloc+0x9a>
    22ac:	90 93 e5 02 	sts	0x02E5, r25
    22b0:	80 93 e4 02 	sts	0x02E4, r24
    22b4:	fe 01       	movw	r30, r28
    22b6:	32 96       	adiw	r30, 0x02	; 2
    22b8:	44 c0       	rjmp	.+136    	; 0x2342 <malloc+0x128>
    22ba:	fe 01       	movw	r30, r28
    22bc:	e2 0f       	add	r30, r18
    22be:	f3 1f       	adc	r31, r19
    22c0:	81 93       	st	Z+, r24
    22c2:	91 93       	st	Z+, r25
    22c4:	22 50       	subi	r18, 0x02	; 2
    22c6:	31 09       	sbc	r19, r1
    22c8:	39 83       	std	Y+1, r19	; 0x01
    22ca:	28 83       	st	Y, r18
    22cc:	3a c0       	rjmp	.+116    	; 0x2342 <malloc+0x128>
    22ce:	20 91 e2 02 	lds	r18, 0x02E2
    22d2:	30 91 e3 02 	lds	r19, 0x02E3
    22d6:	23 2b       	or	r18, r19
    22d8:	41 f4       	brne	.+16     	; 0x22ea <malloc+0xd0>
    22da:	20 91 10 01 	lds	r18, 0x0110
    22de:	30 91 11 01 	lds	r19, 0x0111
    22e2:	30 93 e3 02 	sts	0x02E3, r19
    22e6:	20 93 e2 02 	sts	0x02E2, r18
    22ea:	20 91 0e 01 	lds	r18, 0x010E
    22ee:	30 91 0f 01 	lds	r19, 0x010F
    22f2:	21 15       	cp	r18, r1
    22f4:	31 05       	cpc	r19, r1
    22f6:	41 f4       	brne	.+16     	; 0x2308 <malloc+0xee>
    22f8:	2d b7       	in	r18, 0x3d	; 61
    22fa:	3e b7       	in	r19, 0x3e	; 62
    22fc:	40 91 12 01 	lds	r20, 0x0112
    2300:	50 91 13 01 	lds	r21, 0x0113
    2304:	24 1b       	sub	r18, r20
    2306:	35 0b       	sbc	r19, r21
    2308:	e0 91 e2 02 	lds	r30, 0x02E2
    230c:	f0 91 e3 02 	lds	r31, 0x02E3
    2310:	e2 17       	cp	r30, r18
    2312:	f3 07       	cpc	r31, r19
    2314:	a0 f4       	brcc	.+40     	; 0x233e <malloc+0x124>
    2316:	2e 1b       	sub	r18, r30
    2318:	3f 0b       	sbc	r19, r31
    231a:	28 17       	cp	r18, r24
    231c:	39 07       	cpc	r19, r25
    231e:	78 f0       	brcs	.+30     	; 0x233e <malloc+0x124>
    2320:	ac 01       	movw	r20, r24
    2322:	4e 5f       	subi	r20, 0xFE	; 254
    2324:	5f 4f       	sbci	r21, 0xFF	; 255
    2326:	24 17       	cp	r18, r20
    2328:	35 07       	cpc	r19, r21
    232a:	48 f0       	brcs	.+18     	; 0x233e <malloc+0x124>
    232c:	4e 0f       	add	r20, r30
    232e:	5f 1f       	adc	r21, r31
    2330:	50 93 e3 02 	sts	0x02E3, r21
    2334:	40 93 e2 02 	sts	0x02E2, r20
    2338:	81 93       	st	Z+, r24
    233a:	91 93       	st	Z+, r25
    233c:	02 c0       	rjmp	.+4      	; 0x2342 <malloc+0x128>
    233e:	e0 e0       	ldi	r30, 0x00	; 0
    2340:	f0 e0       	ldi	r31, 0x00	; 0
    2342:	cf 01       	movw	r24, r30
    2344:	df 91       	pop	r29
    2346:	cf 91       	pop	r28
    2348:	08 95       	ret

0000234a <free>:
    234a:	cf 93       	push	r28
    234c:	df 93       	push	r29
    234e:	00 97       	sbiw	r24, 0x00	; 0
    2350:	09 f4       	brne	.+2      	; 0x2354 <free+0xa>
    2352:	87 c0       	rjmp	.+270    	; 0x2462 <free+0x118>
    2354:	fc 01       	movw	r30, r24
    2356:	32 97       	sbiw	r30, 0x02	; 2
    2358:	13 82       	std	Z+3, r1	; 0x03
    235a:	12 82       	std	Z+2, r1	; 0x02
    235c:	c0 91 e4 02 	lds	r28, 0x02E4
    2360:	d0 91 e5 02 	lds	r29, 0x02E5
    2364:	20 97       	sbiw	r28, 0x00	; 0
    2366:	81 f4       	brne	.+32     	; 0x2388 <free+0x3e>
    2368:	20 81       	ld	r18, Z
    236a:	31 81       	ldd	r19, Z+1	; 0x01
    236c:	28 0f       	add	r18, r24
    236e:	39 1f       	adc	r19, r25
    2370:	80 91 e2 02 	lds	r24, 0x02E2
    2374:	90 91 e3 02 	lds	r25, 0x02E3
    2378:	82 17       	cp	r24, r18
    237a:	93 07       	cpc	r25, r19
    237c:	79 f5       	brne	.+94     	; 0x23dc <free+0x92>
    237e:	f0 93 e3 02 	sts	0x02E3, r31
    2382:	e0 93 e2 02 	sts	0x02E2, r30
    2386:	6d c0       	rjmp	.+218    	; 0x2462 <free+0x118>
    2388:	de 01       	movw	r26, r28
    238a:	20 e0       	ldi	r18, 0x00	; 0
    238c:	30 e0       	ldi	r19, 0x00	; 0
    238e:	ae 17       	cp	r26, r30
    2390:	bf 07       	cpc	r27, r31
    2392:	50 f4       	brcc	.+20     	; 0x23a8 <free+0x5e>
    2394:	12 96       	adiw	r26, 0x02	; 2
    2396:	4d 91       	ld	r20, X+
    2398:	5c 91       	ld	r21, X
    239a:	13 97       	sbiw	r26, 0x03	; 3
    239c:	9d 01       	movw	r18, r26
    239e:	41 15       	cp	r20, r1
    23a0:	51 05       	cpc	r21, r1
    23a2:	09 f1       	breq	.+66     	; 0x23e6 <free+0x9c>
    23a4:	da 01       	movw	r26, r20
    23a6:	f3 cf       	rjmp	.-26     	; 0x238e <free+0x44>
    23a8:	b3 83       	std	Z+3, r27	; 0x03
    23aa:	a2 83       	std	Z+2, r26	; 0x02
    23ac:	40 81       	ld	r20, Z
    23ae:	51 81       	ldd	r21, Z+1	; 0x01
    23b0:	84 0f       	add	r24, r20
    23b2:	95 1f       	adc	r25, r21
    23b4:	8a 17       	cp	r24, r26
    23b6:	9b 07       	cpc	r25, r27
    23b8:	71 f4       	brne	.+28     	; 0x23d6 <free+0x8c>
    23ba:	8d 91       	ld	r24, X+
    23bc:	9c 91       	ld	r25, X
    23be:	11 97       	sbiw	r26, 0x01	; 1
    23c0:	84 0f       	add	r24, r20
    23c2:	95 1f       	adc	r25, r21
    23c4:	02 96       	adiw	r24, 0x02	; 2
    23c6:	91 83       	std	Z+1, r25	; 0x01
    23c8:	80 83       	st	Z, r24
    23ca:	12 96       	adiw	r26, 0x02	; 2
    23cc:	8d 91       	ld	r24, X+
    23ce:	9c 91       	ld	r25, X
    23d0:	13 97       	sbiw	r26, 0x03	; 3
    23d2:	93 83       	std	Z+3, r25	; 0x03
    23d4:	82 83       	std	Z+2, r24	; 0x02
    23d6:	21 15       	cp	r18, r1
    23d8:	31 05       	cpc	r19, r1
    23da:	29 f4       	brne	.+10     	; 0x23e6 <free+0x9c>
    23dc:	f0 93 e5 02 	sts	0x02E5, r31
    23e0:	e0 93 e4 02 	sts	0x02E4, r30
    23e4:	3e c0       	rjmp	.+124    	; 0x2462 <free+0x118>
    23e6:	d9 01       	movw	r26, r18
    23e8:	13 96       	adiw	r26, 0x03	; 3
    23ea:	fc 93       	st	X, r31
    23ec:	ee 93       	st	-X, r30
    23ee:	12 97       	sbiw	r26, 0x02	; 2
    23f0:	4d 91       	ld	r20, X+
    23f2:	5d 91       	ld	r21, X+
    23f4:	a4 0f       	add	r26, r20
    23f6:	b5 1f       	adc	r27, r21
    23f8:	ea 17       	cp	r30, r26
    23fa:	fb 07       	cpc	r31, r27
    23fc:	79 f4       	brne	.+30     	; 0x241c <free+0xd2>
    23fe:	80 81       	ld	r24, Z
    2400:	91 81       	ldd	r25, Z+1	; 0x01
    2402:	84 0f       	add	r24, r20
    2404:	95 1f       	adc	r25, r21
    2406:	02 96       	adiw	r24, 0x02	; 2
    2408:	d9 01       	movw	r26, r18
    240a:	11 96       	adiw	r26, 0x01	; 1
    240c:	9c 93       	st	X, r25
    240e:	8e 93       	st	-X, r24
    2410:	82 81       	ldd	r24, Z+2	; 0x02
    2412:	93 81       	ldd	r25, Z+3	; 0x03
    2414:	13 96       	adiw	r26, 0x03	; 3
    2416:	9c 93       	st	X, r25
    2418:	8e 93       	st	-X, r24
    241a:	12 97       	sbiw	r26, 0x02	; 2
    241c:	e0 e0       	ldi	r30, 0x00	; 0
    241e:	f0 e0       	ldi	r31, 0x00	; 0
    2420:	8a 81       	ldd	r24, Y+2	; 0x02
    2422:	9b 81       	ldd	r25, Y+3	; 0x03
    2424:	00 97       	sbiw	r24, 0x00	; 0
    2426:	19 f0       	breq	.+6      	; 0x242e <free+0xe4>
    2428:	fe 01       	movw	r30, r28
    242a:	ec 01       	movw	r28, r24
    242c:	f9 cf       	rjmp	.-14     	; 0x2420 <free+0xd6>
    242e:	ce 01       	movw	r24, r28
    2430:	02 96       	adiw	r24, 0x02	; 2
    2432:	28 81       	ld	r18, Y
    2434:	39 81       	ldd	r19, Y+1	; 0x01
    2436:	82 0f       	add	r24, r18
    2438:	93 1f       	adc	r25, r19
    243a:	20 91 e2 02 	lds	r18, 0x02E2
    243e:	30 91 e3 02 	lds	r19, 0x02E3
    2442:	28 17       	cp	r18, r24
    2444:	39 07       	cpc	r19, r25
    2446:	69 f4       	brne	.+26     	; 0x2462 <free+0x118>
    2448:	30 97       	sbiw	r30, 0x00	; 0
    244a:	29 f4       	brne	.+10     	; 0x2456 <free+0x10c>
    244c:	10 92 e5 02 	sts	0x02E5, r1
    2450:	10 92 e4 02 	sts	0x02E4, r1
    2454:	02 c0       	rjmp	.+4      	; 0x245a <free+0x110>
    2456:	13 82       	std	Z+3, r1	; 0x03
    2458:	12 82       	std	Z+2, r1	; 0x02
    245a:	d0 93 e3 02 	sts	0x02E3, r29
    245e:	c0 93 e2 02 	sts	0x02E2, r28
    2462:	df 91       	pop	r29
    2464:	cf 91       	pop	r28
    2466:	08 95       	ret

00002468 <__ftoa_engine>:
    2468:	28 30       	cpi	r18, 0x08	; 8
    246a:	08 f0       	brcs	.+2      	; 0x246e <__ftoa_engine+0x6>
    246c:	27 e0       	ldi	r18, 0x07	; 7
    246e:	33 27       	eor	r19, r19
    2470:	da 01       	movw	r26, r20
    2472:	99 0f       	add	r25, r25
    2474:	31 1d       	adc	r19, r1
    2476:	87 fd       	sbrc	r24, 7
    2478:	91 60       	ori	r25, 0x01	; 1
    247a:	00 96       	adiw	r24, 0x00	; 0
    247c:	61 05       	cpc	r22, r1
    247e:	71 05       	cpc	r23, r1
    2480:	39 f4       	brne	.+14     	; 0x2490 <__ftoa_engine+0x28>
    2482:	32 60       	ori	r19, 0x02	; 2
    2484:	2e 5f       	subi	r18, 0xFE	; 254
    2486:	3d 93       	st	X+, r19
    2488:	30 e3       	ldi	r19, 0x30	; 48
    248a:	2a 95       	dec	r18
    248c:	e1 f7       	brne	.-8      	; 0x2486 <__ftoa_engine+0x1e>
    248e:	08 95       	ret
    2490:	9f 3f       	cpi	r25, 0xFF	; 255
    2492:	30 f0       	brcs	.+12     	; 0x24a0 <__ftoa_engine+0x38>
    2494:	80 38       	cpi	r24, 0x80	; 128
    2496:	71 05       	cpc	r23, r1
    2498:	61 05       	cpc	r22, r1
    249a:	09 f0       	breq	.+2      	; 0x249e <__ftoa_engine+0x36>
    249c:	3c 5f       	subi	r19, 0xFC	; 252
    249e:	3c 5f       	subi	r19, 0xFC	; 252
    24a0:	3d 93       	st	X+, r19
    24a2:	91 30       	cpi	r25, 0x01	; 1
    24a4:	08 f0       	brcs	.+2      	; 0x24a8 <__ftoa_engine+0x40>
    24a6:	80 68       	ori	r24, 0x80	; 128
    24a8:	91 1d       	adc	r25, r1
    24aa:	df 93       	push	r29
    24ac:	cf 93       	push	r28
    24ae:	1f 93       	push	r17
    24b0:	0f 93       	push	r16
    24b2:	ff 92       	push	r15
    24b4:	ef 92       	push	r14
    24b6:	19 2f       	mov	r17, r25
    24b8:	98 7f       	andi	r25, 0xF8	; 248
    24ba:	96 95       	lsr	r25
    24bc:	e9 2f       	mov	r30, r25
    24be:	96 95       	lsr	r25
    24c0:	96 95       	lsr	r25
    24c2:	e9 0f       	add	r30, r25
    24c4:	ff 27       	eor	r31, r31
    24c6:	e4 5b       	subi	r30, 0xB4	; 180
    24c8:	fe 4f       	sbci	r31, 0xFE	; 254
    24ca:	99 27       	eor	r25, r25
    24cc:	33 27       	eor	r19, r19
    24ce:	ee 24       	eor	r14, r14
    24d0:	ff 24       	eor	r15, r15
    24d2:	a7 01       	movw	r20, r14
    24d4:	e7 01       	movw	r28, r14
    24d6:	05 90       	lpm	r0, Z+
    24d8:	08 94       	sec
    24da:	07 94       	ror	r0
    24dc:	28 f4       	brcc	.+10     	; 0x24e8 <__ftoa_engine+0x80>
    24de:	36 0f       	add	r19, r22
    24e0:	e7 1e       	adc	r14, r23
    24e2:	f8 1e       	adc	r15, r24
    24e4:	49 1f       	adc	r20, r25
    24e6:	51 1d       	adc	r21, r1
    24e8:	66 0f       	add	r22, r22
    24ea:	77 1f       	adc	r23, r23
    24ec:	88 1f       	adc	r24, r24
    24ee:	99 1f       	adc	r25, r25
    24f0:	06 94       	lsr	r0
    24f2:	a1 f7       	brne	.-24     	; 0x24dc <__ftoa_engine+0x74>
    24f4:	05 90       	lpm	r0, Z+
    24f6:	07 94       	ror	r0
    24f8:	28 f4       	brcc	.+10     	; 0x2504 <__ftoa_engine+0x9c>
    24fa:	e7 0e       	add	r14, r23
    24fc:	f8 1e       	adc	r15, r24
    24fe:	49 1f       	adc	r20, r25
    2500:	56 1f       	adc	r21, r22
    2502:	c1 1d       	adc	r28, r1
    2504:	77 0f       	add	r23, r23
    2506:	88 1f       	adc	r24, r24
    2508:	99 1f       	adc	r25, r25
    250a:	66 1f       	adc	r22, r22
    250c:	06 94       	lsr	r0
    250e:	a1 f7       	brne	.-24     	; 0x24f8 <__ftoa_engine+0x90>
    2510:	05 90       	lpm	r0, Z+
    2512:	07 94       	ror	r0
    2514:	28 f4       	brcc	.+10     	; 0x2520 <__ftoa_engine+0xb8>
    2516:	f8 0e       	add	r15, r24
    2518:	49 1f       	adc	r20, r25
    251a:	56 1f       	adc	r21, r22
    251c:	c7 1f       	adc	r28, r23
    251e:	d1 1d       	adc	r29, r1
    2520:	88 0f       	add	r24, r24
    2522:	99 1f       	adc	r25, r25
    2524:	66 1f       	adc	r22, r22
    2526:	77 1f       	adc	r23, r23
    2528:	06 94       	lsr	r0
    252a:	a1 f7       	brne	.-24     	; 0x2514 <__ftoa_engine+0xac>
    252c:	05 90       	lpm	r0, Z+
    252e:	07 94       	ror	r0
    2530:	20 f4       	brcc	.+8      	; 0x253a <__ftoa_engine+0xd2>
    2532:	49 0f       	add	r20, r25
    2534:	56 1f       	adc	r21, r22
    2536:	c7 1f       	adc	r28, r23
    2538:	d8 1f       	adc	r29, r24
    253a:	99 0f       	add	r25, r25
    253c:	66 1f       	adc	r22, r22
    253e:	77 1f       	adc	r23, r23
    2540:	88 1f       	adc	r24, r24
    2542:	06 94       	lsr	r0
    2544:	a9 f7       	brne	.-22     	; 0x2530 <__ftoa_engine+0xc8>
    2546:	84 91       	lpm	r24, Z
    2548:	10 95       	com	r17
    254a:	17 70       	andi	r17, 0x07	; 7
    254c:	41 f0       	breq	.+16     	; 0x255e <__ftoa_engine+0xf6>
    254e:	d6 95       	lsr	r29
    2550:	c7 95       	ror	r28
    2552:	57 95       	ror	r21
    2554:	47 95       	ror	r20
    2556:	f7 94       	ror	r15
    2558:	e7 94       	ror	r14
    255a:	1a 95       	dec	r17
    255c:	c1 f7       	brne	.-16     	; 0x254e <__ftoa_engine+0xe6>
    255e:	e2 ef       	ldi	r30, 0xF2	; 242
    2560:	f0 e0       	ldi	r31, 0x00	; 0
    2562:	68 94       	set
    2564:	15 90       	lpm	r1, Z+
    2566:	15 91       	lpm	r17, Z+
    2568:	35 91       	lpm	r19, Z+
    256a:	65 91       	lpm	r22, Z+
    256c:	95 91       	lpm	r25, Z+
    256e:	05 90       	lpm	r0, Z+
    2570:	7f e2       	ldi	r23, 0x2F	; 47
    2572:	73 95       	inc	r23
    2574:	e1 18       	sub	r14, r1
    2576:	f1 0a       	sbc	r15, r17
    2578:	43 0b       	sbc	r20, r19
    257a:	56 0b       	sbc	r21, r22
    257c:	c9 0b       	sbc	r28, r25
    257e:	d0 09       	sbc	r29, r0
    2580:	c0 f7       	brcc	.-16     	; 0x2572 <__ftoa_engine+0x10a>
    2582:	e1 0c       	add	r14, r1
    2584:	f1 1e       	adc	r15, r17
    2586:	43 1f       	adc	r20, r19
    2588:	56 1f       	adc	r21, r22
    258a:	c9 1f       	adc	r28, r25
    258c:	d0 1d       	adc	r29, r0
    258e:	7e f4       	brtc	.+30     	; 0x25ae <__ftoa_engine+0x146>
    2590:	70 33       	cpi	r23, 0x30	; 48
    2592:	11 f4       	brne	.+4      	; 0x2598 <__ftoa_engine+0x130>
    2594:	8a 95       	dec	r24
    2596:	e6 cf       	rjmp	.-52     	; 0x2564 <__ftoa_engine+0xfc>
    2598:	e8 94       	clt
    259a:	01 50       	subi	r16, 0x01	; 1
    259c:	30 f0       	brcs	.+12     	; 0x25aa <__ftoa_engine+0x142>
    259e:	08 0f       	add	r16, r24
    25a0:	0a f4       	brpl	.+2      	; 0x25a4 <__ftoa_engine+0x13c>
    25a2:	00 27       	eor	r16, r16
    25a4:	02 17       	cp	r16, r18
    25a6:	08 f4       	brcc	.+2      	; 0x25aa <__ftoa_engine+0x142>
    25a8:	20 2f       	mov	r18, r16
    25aa:	23 95       	inc	r18
    25ac:	02 2f       	mov	r16, r18
    25ae:	7a 33       	cpi	r23, 0x3A	; 58
    25b0:	28 f0       	brcs	.+10     	; 0x25bc <__ftoa_engine+0x154>
    25b2:	79 e3       	ldi	r23, 0x39	; 57
    25b4:	7d 93       	st	X+, r23
    25b6:	2a 95       	dec	r18
    25b8:	e9 f7       	brne	.-6      	; 0x25b4 <__ftoa_engine+0x14c>
    25ba:	10 c0       	rjmp	.+32     	; 0x25dc <__ftoa_engine+0x174>
    25bc:	7d 93       	st	X+, r23
    25be:	2a 95       	dec	r18
    25c0:	89 f6       	brne	.-94     	; 0x2564 <__ftoa_engine+0xfc>
    25c2:	06 94       	lsr	r0
    25c4:	97 95       	ror	r25
    25c6:	67 95       	ror	r22
    25c8:	37 95       	ror	r19
    25ca:	17 95       	ror	r17
    25cc:	17 94       	ror	r1
    25ce:	e1 18       	sub	r14, r1
    25d0:	f1 0a       	sbc	r15, r17
    25d2:	43 0b       	sbc	r20, r19
    25d4:	56 0b       	sbc	r21, r22
    25d6:	c9 0b       	sbc	r28, r25
    25d8:	d0 09       	sbc	r29, r0
    25da:	98 f0       	brcs	.+38     	; 0x2602 <__ftoa_engine+0x19a>
    25dc:	23 95       	inc	r18
    25de:	7e 91       	ld	r23, -X
    25e0:	73 95       	inc	r23
    25e2:	7a 33       	cpi	r23, 0x3A	; 58
    25e4:	08 f0       	brcs	.+2      	; 0x25e8 <__ftoa_engine+0x180>
    25e6:	70 e3       	ldi	r23, 0x30	; 48
    25e8:	7c 93       	st	X, r23
    25ea:	20 13       	cpse	r18, r16
    25ec:	b8 f7       	brcc	.-18     	; 0x25dc <__ftoa_engine+0x174>
    25ee:	7e 91       	ld	r23, -X
    25f0:	70 61       	ori	r23, 0x10	; 16
    25f2:	7d 93       	st	X+, r23
    25f4:	30 f0       	brcs	.+12     	; 0x2602 <__ftoa_engine+0x19a>
    25f6:	83 95       	inc	r24
    25f8:	71 e3       	ldi	r23, 0x31	; 49
    25fa:	7d 93       	st	X+, r23
    25fc:	70 e3       	ldi	r23, 0x30	; 48
    25fe:	2a 95       	dec	r18
    2600:	e1 f7       	brne	.-8      	; 0x25fa <__ftoa_engine+0x192>
    2602:	11 24       	eor	r1, r1
    2604:	ef 90       	pop	r14
    2606:	ff 90       	pop	r15
    2608:	0f 91       	pop	r16
    260a:	1f 91       	pop	r17
    260c:	cf 91       	pop	r28
    260e:	df 91       	pop	r29
    2610:	99 27       	eor	r25, r25
    2612:	87 fd       	sbrc	r24, 7
    2614:	90 95       	com	r25
    2616:	08 95       	ret

00002618 <strnlen_P>:
    2618:	fc 01       	movw	r30, r24
    261a:	05 90       	lpm	r0, Z+
    261c:	61 50       	subi	r22, 0x01	; 1
    261e:	70 40       	sbci	r23, 0x00	; 0
    2620:	01 10       	cpse	r0, r1
    2622:	d8 f7       	brcc	.-10     	; 0x261a <strnlen_P+0x2>
    2624:	80 95       	com	r24
    2626:	90 95       	com	r25
    2628:	8e 0f       	add	r24, r30
    262a:	9f 1f       	adc	r25, r31
    262c:	08 95       	ret

0000262e <strcpy>:
    262e:	fb 01       	movw	r30, r22
    2630:	dc 01       	movw	r26, r24
    2632:	01 90       	ld	r0, Z+
    2634:	0d 92       	st	X+, r0
    2636:	00 20       	and	r0, r0
    2638:	e1 f7       	brne	.-8      	; 0x2632 <strcpy+0x4>
    263a:	08 95       	ret

0000263c <strnlen>:
    263c:	fc 01       	movw	r30, r24
    263e:	61 50       	subi	r22, 0x01	; 1
    2640:	70 40       	sbci	r23, 0x00	; 0
    2642:	01 90       	ld	r0, Z+
    2644:	01 10       	cpse	r0, r1
    2646:	d8 f7       	brcc	.-10     	; 0x263e <strnlen+0x2>
    2648:	80 95       	com	r24
    264a:	90 95       	com	r25
    264c:	8e 0f       	add	r24, r30
    264e:	9f 1f       	adc	r25, r31
    2650:	08 95       	ret

00002652 <strstr>:
    2652:	fb 01       	movw	r30, r22
    2654:	51 91       	ld	r21, Z+
    2656:	55 23       	and	r21, r21
    2658:	a9 f0       	breq	.+42     	; 0x2684 <strstr+0x32>
    265a:	bf 01       	movw	r22, r30
    265c:	dc 01       	movw	r26, r24
    265e:	4d 91       	ld	r20, X+
    2660:	45 17       	cp	r20, r21
    2662:	41 11       	cpse	r20, r1
    2664:	e1 f7       	brne	.-8      	; 0x265e <strstr+0xc>
    2666:	59 f4       	brne	.+22     	; 0x267e <strstr+0x2c>
    2668:	cd 01       	movw	r24, r26
    266a:	01 90       	ld	r0, Z+
    266c:	00 20       	and	r0, r0
    266e:	49 f0       	breq	.+18     	; 0x2682 <strstr+0x30>
    2670:	4d 91       	ld	r20, X+
    2672:	40 15       	cp	r20, r0
    2674:	41 11       	cpse	r20, r1
    2676:	c9 f3       	breq	.-14     	; 0x266a <strstr+0x18>
    2678:	fb 01       	movw	r30, r22
    267a:	41 11       	cpse	r20, r1
    267c:	ef cf       	rjmp	.-34     	; 0x265c <strstr+0xa>
    267e:	81 e0       	ldi	r24, 0x01	; 1
    2680:	90 e0       	ldi	r25, 0x00	; 0
    2682:	01 97       	sbiw	r24, 0x01	; 1
    2684:	08 95       	ret

00002686 <fputc>:
    2686:	0f 93       	push	r16
    2688:	1f 93       	push	r17
    268a:	cf 93       	push	r28
    268c:	df 93       	push	r29
    268e:	18 2f       	mov	r17, r24
    2690:	09 2f       	mov	r16, r25
    2692:	eb 01       	movw	r28, r22
    2694:	8b 81       	ldd	r24, Y+3	; 0x03
    2696:	81 fd       	sbrc	r24, 1
    2698:	03 c0       	rjmp	.+6      	; 0x26a0 <fputc+0x1a>
    269a:	8f ef       	ldi	r24, 0xFF	; 255
    269c:	9f ef       	ldi	r25, 0xFF	; 255
    269e:	20 c0       	rjmp	.+64     	; 0x26e0 <fputc+0x5a>
    26a0:	82 ff       	sbrs	r24, 2
    26a2:	10 c0       	rjmp	.+32     	; 0x26c4 <fputc+0x3e>
    26a4:	4e 81       	ldd	r20, Y+6	; 0x06
    26a6:	5f 81       	ldd	r21, Y+7	; 0x07
    26a8:	2c 81       	ldd	r18, Y+4	; 0x04
    26aa:	3d 81       	ldd	r19, Y+5	; 0x05
    26ac:	42 17       	cp	r20, r18
    26ae:	53 07       	cpc	r21, r19
    26b0:	7c f4       	brge	.+30     	; 0x26d0 <fputc+0x4a>
    26b2:	e8 81       	ld	r30, Y
    26b4:	f9 81       	ldd	r31, Y+1	; 0x01
    26b6:	9f 01       	movw	r18, r30
    26b8:	2f 5f       	subi	r18, 0xFF	; 255
    26ba:	3f 4f       	sbci	r19, 0xFF	; 255
    26bc:	39 83       	std	Y+1, r19	; 0x01
    26be:	28 83       	st	Y, r18
    26c0:	10 83       	st	Z, r17
    26c2:	06 c0       	rjmp	.+12     	; 0x26d0 <fputc+0x4a>
    26c4:	e8 85       	ldd	r30, Y+8	; 0x08
    26c6:	f9 85       	ldd	r31, Y+9	; 0x09
    26c8:	81 2f       	mov	r24, r17
    26ca:	09 95       	icall
    26cc:	89 2b       	or	r24, r25
    26ce:	29 f7       	brne	.-54     	; 0x269a <fputc+0x14>
    26d0:	2e 81       	ldd	r18, Y+6	; 0x06
    26d2:	3f 81       	ldd	r19, Y+7	; 0x07
    26d4:	2f 5f       	subi	r18, 0xFF	; 255
    26d6:	3f 4f       	sbci	r19, 0xFF	; 255
    26d8:	3f 83       	std	Y+7, r19	; 0x07
    26da:	2e 83       	std	Y+6, r18	; 0x06
    26dc:	81 2f       	mov	r24, r17
    26de:	90 2f       	mov	r25, r16
    26e0:	df 91       	pop	r29
    26e2:	cf 91       	pop	r28
    26e4:	1f 91       	pop	r17
    26e6:	0f 91       	pop	r16
    26e8:	08 95       	ret

000026ea <printf>:
    26ea:	a0 e0       	ldi	r26, 0x00	; 0
    26ec:	b0 e0       	ldi	r27, 0x00	; 0
    26ee:	eb e7       	ldi	r30, 0x7B	; 123
    26f0:	f3 e1       	ldi	r31, 0x13	; 19
    26f2:	0c 94 c3 10 	jmp	0x2186	; 0x2186 <__prologue_saves__+0x20>
    26f6:	fe 01       	movw	r30, r28
    26f8:	35 96       	adiw	r30, 0x05	; 5
    26fa:	61 91       	ld	r22, Z+
    26fc:	71 91       	ld	r23, Z+
    26fe:	af 01       	movw	r20, r30
    2700:	80 91 e8 02 	lds	r24, 0x02E8
    2704:	90 91 e9 02 	lds	r25, 0x02E9
    2708:	0e 94 6c 09 	call	0x12d8	; 0x12d8 <vfprintf>
    270c:	e2 e0       	ldi	r30, 0x02	; 2
    270e:	0c 94 df 10 	jmp	0x21be	; 0x21be <__epilogue_restores__+0x20>

00002712 <puts>:
    2712:	0f 93       	push	r16
    2714:	1f 93       	push	r17
    2716:	cf 93       	push	r28
    2718:	df 93       	push	r29
    271a:	e0 91 e8 02 	lds	r30, 0x02E8
    271e:	f0 91 e9 02 	lds	r31, 0x02E9
    2722:	23 81       	ldd	r18, Z+3	; 0x03
    2724:	21 ff       	sbrs	r18, 1
    2726:	1b c0       	rjmp	.+54     	; 0x275e <puts+0x4c>
    2728:	ec 01       	movw	r28, r24
    272a:	00 e0       	ldi	r16, 0x00	; 0
    272c:	10 e0       	ldi	r17, 0x00	; 0
    272e:	89 91       	ld	r24, Y+
    2730:	60 91 e8 02 	lds	r22, 0x02E8
    2734:	70 91 e9 02 	lds	r23, 0x02E9
    2738:	db 01       	movw	r26, r22
    273a:	18 96       	adiw	r26, 0x08	; 8
    273c:	ed 91       	ld	r30, X+
    273e:	fc 91       	ld	r31, X
    2740:	19 97       	sbiw	r26, 0x09	; 9
    2742:	88 23       	and	r24, r24
    2744:	31 f0       	breq	.+12     	; 0x2752 <puts+0x40>
    2746:	09 95       	icall
    2748:	89 2b       	or	r24, r25
    274a:	89 f3       	breq	.-30     	; 0x272e <puts+0x1c>
    274c:	0f ef       	ldi	r16, 0xFF	; 255
    274e:	1f ef       	ldi	r17, 0xFF	; 255
    2750:	ee cf       	rjmp	.-36     	; 0x272e <puts+0x1c>
    2752:	8a e0       	ldi	r24, 0x0A	; 10
    2754:	09 95       	icall
    2756:	89 2b       	or	r24, r25
    2758:	11 f4       	brne	.+4      	; 0x275e <puts+0x4c>
    275a:	c8 01       	movw	r24, r16
    275c:	02 c0       	rjmp	.+4      	; 0x2762 <puts+0x50>
    275e:	8f ef       	ldi	r24, 0xFF	; 255
    2760:	9f ef       	ldi	r25, 0xFF	; 255
    2762:	df 91       	pop	r29
    2764:	cf 91       	pop	r28
    2766:	1f 91       	pop	r17
    2768:	0f 91       	pop	r16
    276a:	08 95       	ret

0000276c <sprintf>:
    276c:	ae e0       	ldi	r26, 0x0E	; 14
    276e:	b0 e0       	ldi	r27, 0x00	; 0
    2770:	ec eb       	ldi	r30, 0xBC	; 188
    2772:	f3 e1       	ldi	r31, 0x13	; 19
    2774:	0c 94 c1 10 	jmp	0x2182	; 0x2182 <__prologue_saves__+0x1c>
    2778:	0d 89       	ldd	r16, Y+21	; 0x15
    277a:	1e 89       	ldd	r17, Y+22	; 0x16
    277c:	86 e0       	ldi	r24, 0x06	; 6
    277e:	8c 83       	std	Y+4, r24	; 0x04
    2780:	1a 83       	std	Y+2, r17	; 0x02
    2782:	09 83       	std	Y+1, r16	; 0x01
    2784:	8f ef       	ldi	r24, 0xFF	; 255
    2786:	9f e7       	ldi	r25, 0x7F	; 127
    2788:	9e 83       	std	Y+6, r25	; 0x06
    278a:	8d 83       	std	Y+5, r24	; 0x05
    278c:	ae 01       	movw	r20, r28
    278e:	47 5e       	subi	r20, 0xE7	; 231
    2790:	5f 4f       	sbci	r21, 0xFF	; 255
    2792:	6f 89       	ldd	r22, Y+23	; 0x17
    2794:	78 8d       	ldd	r23, Y+24	; 0x18
    2796:	ce 01       	movw	r24, r28
    2798:	01 96       	adiw	r24, 0x01	; 1
    279a:	0e 94 6c 09 	call	0x12d8	; 0x12d8 <vfprintf>
    279e:	ef 81       	ldd	r30, Y+7	; 0x07
    27a0:	f8 85       	ldd	r31, Y+8	; 0x08
    27a2:	e0 0f       	add	r30, r16
    27a4:	f1 1f       	adc	r31, r17
    27a6:	10 82       	st	Z, r1
    27a8:	2e 96       	adiw	r28, 0x0e	; 14
    27aa:	e4 e0       	ldi	r30, 0x04	; 4
    27ac:	0c 94 dd 10 	jmp	0x21ba	; 0x21ba <__epilogue_restores__+0x1c>

000027b0 <sscanf>:
    27b0:	ae e0       	ldi	r26, 0x0E	; 14
    27b2:	b0 e0       	ldi	r27, 0x00	; 0
    27b4:	ee ed       	ldi	r30, 0xDE	; 222
    27b6:	f3 e1       	ldi	r31, 0x13	; 19
    27b8:	0c 94 c3 10 	jmp	0x2186	; 0x2186 <__prologue_saves__+0x20>
    27bc:	85 e0       	ldi	r24, 0x05	; 5
    27be:	8c 83       	std	Y+4, r24	; 0x04
    27c0:	8b 89       	ldd	r24, Y+19	; 0x13
    27c2:	9c 89       	ldd	r25, Y+20	; 0x14
    27c4:	9a 83       	std	Y+2, r25	; 0x02
    27c6:	89 83       	std	Y+1, r24	; 0x01
    27c8:	ae 01       	movw	r20, r28
    27ca:	49 5e       	subi	r20, 0xE9	; 233
    27cc:	5f 4f       	sbci	r21, 0xFF	; 255
    27ce:	6d 89       	ldd	r22, Y+21	; 0x15
    27d0:	7e 89       	ldd	r23, Y+22	; 0x16
    27d2:	ce 01       	movw	r24, r28
    27d4:	01 96       	adiw	r24, 0x01	; 1
    27d6:	0e 94 cd 15 	call	0x2b9a	; 0x2b9a <vfscanf>
    27da:	2e 96       	adiw	r28, 0x0e	; 14
    27dc:	e2 e0       	ldi	r30, 0x02	; 2
    27de:	0c 94 df 10 	jmp	0x21be	; 0x21be <__epilogue_restores__+0x20>

000027e2 <__ultoa_invert>:
    27e2:	fa 01       	movw	r30, r20
    27e4:	aa 27       	eor	r26, r26
    27e6:	28 30       	cpi	r18, 0x08	; 8
    27e8:	51 f1       	breq	.+84     	; 0x283e <__ultoa_invert+0x5c>
    27ea:	20 31       	cpi	r18, 0x10	; 16
    27ec:	81 f1       	breq	.+96     	; 0x284e <__ultoa_invert+0x6c>
    27ee:	e8 94       	clt
    27f0:	6f 93       	push	r22
    27f2:	6e 7f       	andi	r22, 0xFE	; 254
    27f4:	6e 5f       	subi	r22, 0xFE	; 254
    27f6:	7f 4f       	sbci	r23, 0xFF	; 255
    27f8:	8f 4f       	sbci	r24, 0xFF	; 255
    27fa:	9f 4f       	sbci	r25, 0xFF	; 255
    27fc:	af 4f       	sbci	r26, 0xFF	; 255
    27fe:	b1 e0       	ldi	r27, 0x01	; 1
    2800:	3e d0       	rcall	.+124    	; 0x287e <__ultoa_invert+0x9c>
    2802:	b4 e0       	ldi	r27, 0x04	; 4
    2804:	3c d0       	rcall	.+120    	; 0x287e <__ultoa_invert+0x9c>
    2806:	67 0f       	add	r22, r23
    2808:	78 1f       	adc	r23, r24
    280a:	89 1f       	adc	r24, r25
    280c:	9a 1f       	adc	r25, r26
    280e:	a1 1d       	adc	r26, r1
    2810:	68 0f       	add	r22, r24
    2812:	79 1f       	adc	r23, r25
    2814:	8a 1f       	adc	r24, r26
    2816:	91 1d       	adc	r25, r1
    2818:	a1 1d       	adc	r26, r1
    281a:	6a 0f       	add	r22, r26
    281c:	71 1d       	adc	r23, r1
    281e:	81 1d       	adc	r24, r1
    2820:	91 1d       	adc	r25, r1
    2822:	a1 1d       	adc	r26, r1
    2824:	20 d0       	rcall	.+64     	; 0x2866 <__ultoa_invert+0x84>
    2826:	09 f4       	brne	.+2      	; 0x282a <__ultoa_invert+0x48>
    2828:	68 94       	set
    282a:	3f 91       	pop	r19
    282c:	2a e0       	ldi	r18, 0x0A	; 10
    282e:	26 9f       	mul	r18, r22
    2830:	11 24       	eor	r1, r1
    2832:	30 19       	sub	r19, r0
    2834:	30 5d       	subi	r19, 0xD0	; 208
    2836:	31 93       	st	Z+, r19
    2838:	de f6       	brtc	.-74     	; 0x27f0 <__ultoa_invert+0xe>
    283a:	cf 01       	movw	r24, r30
    283c:	08 95       	ret
    283e:	46 2f       	mov	r20, r22
    2840:	47 70       	andi	r20, 0x07	; 7
    2842:	40 5d       	subi	r20, 0xD0	; 208
    2844:	41 93       	st	Z+, r20
    2846:	b3 e0       	ldi	r27, 0x03	; 3
    2848:	0f d0       	rcall	.+30     	; 0x2868 <__ultoa_invert+0x86>
    284a:	c9 f7       	brne	.-14     	; 0x283e <__ultoa_invert+0x5c>
    284c:	f6 cf       	rjmp	.-20     	; 0x283a <__ultoa_invert+0x58>
    284e:	46 2f       	mov	r20, r22
    2850:	4f 70       	andi	r20, 0x0F	; 15
    2852:	40 5d       	subi	r20, 0xD0	; 208
    2854:	4a 33       	cpi	r20, 0x3A	; 58
    2856:	18 f0       	brcs	.+6      	; 0x285e <__ultoa_invert+0x7c>
    2858:	49 5d       	subi	r20, 0xD9	; 217
    285a:	31 fd       	sbrc	r19, 1
    285c:	40 52       	subi	r20, 0x20	; 32
    285e:	41 93       	st	Z+, r20
    2860:	02 d0       	rcall	.+4      	; 0x2866 <__ultoa_invert+0x84>
    2862:	a9 f7       	brne	.-22     	; 0x284e <__ultoa_invert+0x6c>
    2864:	ea cf       	rjmp	.-44     	; 0x283a <__ultoa_invert+0x58>
    2866:	b4 e0       	ldi	r27, 0x04	; 4
    2868:	a6 95       	lsr	r26
    286a:	97 95       	ror	r25
    286c:	87 95       	ror	r24
    286e:	77 95       	ror	r23
    2870:	67 95       	ror	r22
    2872:	ba 95       	dec	r27
    2874:	c9 f7       	brne	.-14     	; 0x2868 <__ultoa_invert+0x86>
    2876:	00 97       	sbiw	r24, 0x00	; 0
    2878:	61 05       	cpc	r22, r1
    287a:	71 05       	cpc	r23, r1
    287c:	08 95       	ret
    287e:	9b 01       	movw	r18, r22
    2880:	ac 01       	movw	r20, r24
    2882:	0a 2e       	mov	r0, r26
    2884:	06 94       	lsr	r0
    2886:	57 95       	ror	r21
    2888:	47 95       	ror	r20
    288a:	37 95       	ror	r19
    288c:	27 95       	ror	r18
    288e:	ba 95       	dec	r27
    2890:	c9 f7       	brne	.-14     	; 0x2884 <__ultoa_invert+0xa2>
    2892:	62 0f       	add	r22, r18
    2894:	73 1f       	adc	r23, r19
    2896:	84 1f       	adc	r24, r20
    2898:	95 1f       	adc	r25, r21
    289a:	a0 1d       	adc	r26, r0
    289c:	08 95       	ret

0000289e <putval>:
    289e:	20 fd       	sbrc	r18, 0
    28a0:	09 c0       	rjmp	.+18     	; 0x28b4 <putval+0x16>
    28a2:	fc 01       	movw	r30, r24
    28a4:	23 fd       	sbrc	r18, 3
    28a6:	05 c0       	rjmp	.+10     	; 0x28b2 <putval+0x14>
    28a8:	22 ff       	sbrs	r18, 2
    28aa:	02 c0       	rjmp	.+4      	; 0x28b0 <putval+0x12>
    28ac:	73 83       	std	Z+3, r23	; 0x03
    28ae:	62 83       	std	Z+2, r22	; 0x02
    28b0:	51 83       	std	Z+1, r21	; 0x01
    28b2:	40 83       	st	Z, r20
    28b4:	08 95       	ret

000028b6 <mulacc>:
    28b6:	44 fd       	sbrc	r20, 4
    28b8:	10 c0       	rjmp	.+32     	; 0x28da <mulacc+0x24>
    28ba:	46 fd       	sbrc	r20, 6
    28bc:	10 c0       	rjmp	.+32     	; 0x28de <mulacc+0x28>
    28be:	db 01       	movw	r26, r22
    28c0:	fc 01       	movw	r30, r24
    28c2:	aa 0f       	add	r26, r26
    28c4:	bb 1f       	adc	r27, r27
    28c6:	ee 1f       	adc	r30, r30
    28c8:	ff 1f       	adc	r31, r31
    28ca:	10 94       	com	r1
    28cc:	d1 f7       	brne	.-12     	; 0x28c2 <mulacc+0xc>
    28ce:	6a 0f       	add	r22, r26
    28d0:	7b 1f       	adc	r23, r27
    28d2:	8e 1f       	adc	r24, r30
    28d4:	9f 1f       	adc	r25, r31
    28d6:	31 e0       	ldi	r19, 0x01	; 1
    28d8:	03 c0       	rjmp	.+6      	; 0x28e0 <mulacc+0x2a>
    28da:	33 e0       	ldi	r19, 0x03	; 3
    28dc:	01 c0       	rjmp	.+2      	; 0x28e0 <mulacc+0x2a>
    28de:	34 e0       	ldi	r19, 0x04	; 4
    28e0:	66 0f       	add	r22, r22
    28e2:	77 1f       	adc	r23, r23
    28e4:	88 1f       	adc	r24, r24
    28e6:	99 1f       	adc	r25, r25
    28e8:	31 50       	subi	r19, 0x01	; 1
    28ea:	d1 f7       	brne	.-12     	; 0x28e0 <mulacc+0x2a>
    28ec:	62 0f       	add	r22, r18
    28ee:	71 1d       	adc	r23, r1
    28f0:	81 1d       	adc	r24, r1
    28f2:	91 1d       	adc	r25, r1
    28f4:	08 95       	ret

000028f6 <skip_spaces>:
    28f6:	0f 93       	push	r16
    28f8:	1f 93       	push	r17
    28fa:	cf 93       	push	r28
    28fc:	df 93       	push	r29
    28fe:	8c 01       	movw	r16, r24
    2900:	c8 01       	movw	r24, r16
    2902:	0e 94 17 17 	call	0x2e2e	; 0x2e2e <fgetc>
    2906:	ec 01       	movw	r28, r24
    2908:	97 fd       	sbrc	r25, 7
    290a:	08 c0       	rjmp	.+16     	; 0x291c <skip_spaces+0x26>
    290c:	0e 94 04 17 	call	0x2e08	; 0x2e08 <isspace>
    2910:	89 2b       	or	r24, r25
    2912:	b1 f7       	brne	.-20     	; 0x2900 <skip_spaces+0xa>
    2914:	b8 01       	movw	r22, r16
    2916:	ce 01       	movw	r24, r28
    2918:	0e 94 55 17 	call	0x2eaa	; 0x2eaa <ungetc>
    291c:	ce 01       	movw	r24, r28
    291e:	df 91       	pop	r29
    2920:	cf 91       	pop	r28
    2922:	1f 91       	pop	r17
    2924:	0f 91       	pop	r16
    2926:	08 95       	ret

00002928 <conv_int>:
    2928:	8f 92       	push	r8
    292a:	9f 92       	push	r9
    292c:	af 92       	push	r10
    292e:	cf 92       	push	r12
    2930:	df 92       	push	r13
    2932:	ef 92       	push	r14
    2934:	ff 92       	push	r15
    2936:	0f 93       	push	r16
    2938:	1f 93       	push	r17
    293a:	cf 93       	push	r28
    293c:	df 93       	push	r29
    293e:	ec 01       	movw	r28, r24
    2940:	a6 2e       	mov	r10, r22
    2942:	4a 01       	movw	r8, r20
    2944:	02 2f       	mov	r16, r18
    2946:	0e 94 17 17 	call	0x2e2e	; 0x2e2e <fgetc>
    294a:	ac 01       	movw	r20, r24
    294c:	55 27       	eor	r21, r21
    294e:	4b 32       	cpi	r20, 0x2B	; 43
    2950:	51 05       	cpc	r21, r1
    2952:	21 f0       	breq	.+8      	; 0x295c <conv_int+0x34>
    2954:	4d 32       	cpi	r20, 0x2D	; 45
    2956:	51 05       	cpc	r21, r1
    2958:	51 f4       	brne	.+20     	; 0x296e <conv_int+0x46>
    295a:	00 68       	ori	r16, 0x80	; 128
    295c:	aa 94       	dec	r10
    295e:	11 f4       	brne	.+4      	; 0x2964 <conv_int+0x3c>
    2960:	80 e0       	ldi	r24, 0x00	; 0
    2962:	67 c0       	rjmp	.+206    	; 0x2a32 <conv_int+0x10a>
    2964:	ce 01       	movw	r24, r28
    2966:	0e 94 17 17 	call	0x2e2e	; 0x2e2e <fgetc>
    296a:	97 fd       	sbrc	r25, 7
    296c:	f9 cf       	rjmp	.-14     	; 0x2960 <conv_int+0x38>
    296e:	10 2f       	mov	r17, r16
    2970:	1d 7f       	andi	r17, 0xFD	; 253
    2972:	30 2f       	mov	r19, r16
    2974:	30 73       	andi	r19, 0x30	; 48
    2976:	01 f5       	brne	.+64     	; 0x29b8 <conv_int+0x90>
    2978:	80 33       	cpi	r24, 0x30	; 48
    297a:	f1 f4       	brne	.+60     	; 0x29b8 <conv_int+0x90>
    297c:	ff 24       	eor	r15, r15
    297e:	fa 94       	dec	r15
    2980:	fa 0c       	add	r15, r10
    2982:	09 f4       	brne	.+2      	; 0x2986 <conv_int+0x5e>
    2984:	42 c0       	rjmp	.+132    	; 0x2a0a <conv_int+0xe2>
    2986:	ce 01       	movw	r24, r28
    2988:	0e 94 17 17 	call	0x2e2e	; 0x2e2e <fgetc>
    298c:	97 fd       	sbrc	r25, 7
    298e:	3d c0       	rjmp	.+122    	; 0x2a0a <conv_int+0xe2>
    2990:	38 2f       	mov	r19, r24
    2992:	3f 7d       	andi	r19, 0xDF	; 223
    2994:	38 35       	cpi	r19, 0x58	; 88
    2996:	51 f4       	brne	.+20     	; 0x29ac <conv_int+0x84>
    2998:	12 64       	ori	r17, 0x42	; 66
    299a:	aa 94       	dec	r10
    299c:	aa 94       	dec	r10
    299e:	a9 f1       	breq	.+106    	; 0x2a0a <conv_int+0xe2>
    29a0:	ce 01       	movw	r24, r28
    29a2:	0e 94 17 17 	call	0x2e2e	; 0x2e2e <fgetc>
    29a6:	97 ff       	sbrs	r25, 7
    29a8:	07 c0       	rjmp	.+14     	; 0x29b8 <conv_int+0x90>
    29aa:	2f c0       	rjmp	.+94     	; 0x2a0a <conv_int+0xe2>
    29ac:	06 ff       	sbrs	r16, 6
    29ae:	02 c0       	rjmp	.+4      	; 0x29b4 <conv_int+0x8c>
    29b0:	12 60       	ori	r17, 0x02	; 2
    29b2:	01 c0       	rjmp	.+2      	; 0x29b6 <conv_int+0x8e>
    29b4:	12 61       	ori	r17, 0x12	; 18
    29b6:	af 2c       	mov	r10, r15
    29b8:	c1 2c       	mov	r12, r1
    29ba:	d1 2c       	mov	r13, r1
    29bc:	76 01       	movw	r14, r12
    29be:	20 ed       	ldi	r18, 0xD0	; 208
    29c0:	28 0f       	add	r18, r24
    29c2:	28 30       	cpi	r18, 0x08	; 8
    29c4:	80 f0       	brcs	.+32     	; 0x29e6 <conv_int+0xbe>
    29c6:	14 ff       	sbrs	r17, 4
    29c8:	04 c0       	rjmp	.+8      	; 0x29d2 <conv_int+0xaa>
    29ca:	be 01       	movw	r22, r28
    29cc:	0e 94 55 17 	call	0x2eaa	; 0x2eaa <ungetc>
    29d0:	19 c0       	rjmp	.+50     	; 0x2a04 <conv_int+0xdc>
    29d2:	2a 30       	cpi	r18, 0x0A	; 10
    29d4:	40 f0       	brcs	.+16     	; 0x29e6 <conv_int+0xbe>
    29d6:	16 ff       	sbrs	r17, 6
    29d8:	f8 cf       	rjmp	.-16     	; 0x29ca <conv_int+0xa2>
    29da:	2f 7d       	andi	r18, 0xDF	; 223
    29dc:	3f ee       	ldi	r19, 0xEF	; 239
    29de:	32 0f       	add	r19, r18
    29e0:	36 30       	cpi	r19, 0x06	; 6
    29e2:	98 f7       	brcc	.-26     	; 0x29ca <conv_int+0xa2>
    29e4:	27 50       	subi	r18, 0x07	; 7
    29e6:	41 2f       	mov	r20, r17
    29e8:	c7 01       	movw	r24, r14
    29ea:	b6 01       	movw	r22, r12
    29ec:	0e 94 5b 14 	call	0x28b6	; 0x28b6 <mulacc>
    29f0:	6b 01       	movw	r12, r22
    29f2:	7c 01       	movw	r14, r24
    29f4:	12 60       	ori	r17, 0x02	; 2
    29f6:	aa 94       	dec	r10
    29f8:	59 f0       	breq	.+22     	; 0x2a10 <conv_int+0xe8>
    29fa:	ce 01       	movw	r24, r28
    29fc:	0e 94 17 17 	call	0x2e2e	; 0x2e2e <fgetc>
    2a00:	97 ff       	sbrs	r25, 7
    2a02:	dd cf       	rjmp	.-70     	; 0x29be <conv_int+0x96>
    2a04:	11 fd       	sbrc	r17, 1
    2a06:	04 c0       	rjmp	.+8      	; 0x2a10 <conv_int+0xe8>
    2a08:	ab cf       	rjmp	.-170    	; 0x2960 <conv_int+0x38>
    2a0a:	c1 2c       	mov	r12, r1
    2a0c:	d1 2c       	mov	r13, r1
    2a0e:	76 01       	movw	r14, r12
    2a10:	17 ff       	sbrs	r17, 7
    2a12:	08 c0       	rjmp	.+16     	; 0x2a24 <conv_int+0xfc>
    2a14:	f0 94       	com	r15
    2a16:	e0 94       	com	r14
    2a18:	d0 94       	com	r13
    2a1a:	c0 94       	com	r12
    2a1c:	c1 1c       	adc	r12, r1
    2a1e:	d1 1c       	adc	r13, r1
    2a20:	e1 1c       	adc	r14, r1
    2a22:	f1 1c       	adc	r15, r1
    2a24:	21 2f       	mov	r18, r17
    2a26:	b7 01       	movw	r22, r14
    2a28:	a6 01       	movw	r20, r12
    2a2a:	c4 01       	movw	r24, r8
    2a2c:	0e 94 4f 14 	call	0x289e	; 0x289e <putval>
    2a30:	81 e0       	ldi	r24, 0x01	; 1
    2a32:	df 91       	pop	r29
    2a34:	cf 91       	pop	r28
    2a36:	1f 91       	pop	r17
    2a38:	0f 91       	pop	r16
    2a3a:	ff 90       	pop	r15
    2a3c:	ef 90       	pop	r14
    2a3e:	df 90       	pop	r13
    2a40:	cf 90       	pop	r12
    2a42:	af 90       	pop	r10
    2a44:	9f 90       	pop	r9
    2a46:	8f 90       	pop	r8
    2a48:	08 95       	ret

00002a4a <conv_brk>:
    2a4a:	a1 e2       	ldi	r26, 0x21	; 33
    2a4c:	b0 e0       	ldi	r27, 0x00	; 0
    2a4e:	eb e2       	ldi	r30, 0x2B	; 43
    2a50:	f5 e1       	ldi	r31, 0x15	; 21
    2a52:	0c 94 b8 10 	jmp	0x2170	; 0x2170 <__prologue_saves__+0xa>
    2a56:	5c 01       	movw	r10, r24
    2a58:	7a 01       	movw	r14, r20
    2a5a:	8e 01       	movw	r16, r28
    2a5c:	0f 5f       	subi	r16, 0xFF	; 255
    2a5e:	1f 4f       	sbci	r17, 0xFF	; 255
    2a60:	68 01       	movw	r12, r16
    2a62:	80 e2       	ldi	r24, 0x20	; 32
    2a64:	d8 01       	movw	r26, r16
    2a66:	1d 92       	st	X+, r1
    2a68:	8a 95       	dec	r24
    2a6a:	e9 f7       	brne	.-6      	; 0x2a66 <conv_brk+0x1c>
    2a6c:	f5 01       	movw	r30, r10
    2a6e:	73 80       	ldd	r7, Z+3	; 0x03
    2a70:	40 e0       	ldi	r20, 0x00	; 0
    2a72:	50 e0       	ldi	r21, 0x00	; 0
    2a74:	81 2c       	mov	r8, r1
    2a76:	b0 e0       	ldi	r27, 0x00	; 0
    2a78:	91 2c       	mov	r9, r1
    2a7a:	81 e0       	ldi	r24, 0x01	; 1
    2a7c:	90 e0       	ldi	r25, 0x00	; 0
    2a7e:	f9 01       	movw	r30, r18
    2a80:	73 fc       	sbrc	r7, 3
    2a82:	a5 91       	lpm	r26, Z+
    2a84:	73 fe       	sbrs	r7, 3
    2a86:	a1 91       	ld	r26, Z+
    2a88:	8f 01       	movw	r16, r30
    2a8a:	7a 2f       	mov	r23, r26
    2a8c:	9f 01       	movw	r18, r30
    2a8e:	a1 11       	cpse	r26, r1
    2a90:	03 c0       	rjmp	.+6      	; 0x2a98 <conv_brk+0x4e>
    2a92:	80 e0       	ldi	r24, 0x00	; 0
    2a94:	90 e0       	ldi	r25, 0x00	; 0
    2a96:	7d c0       	rjmp	.+250    	; 0x2b92 <conv_brk+0x148>
    2a98:	ae 35       	cpi	r26, 0x5E	; 94
    2a9a:	19 f4       	brne	.+6      	; 0x2aa2 <conv_brk+0x58>
    2a9c:	41 15       	cp	r20, r1
    2a9e:	51 05       	cpc	r21, r1
    2aa0:	59 f1       	breq	.+86     	; 0x2af8 <conv_brk+0xae>
    2aa2:	e9 2d       	mov	r30, r9
    2aa4:	f0 e0       	ldi	r31, 0x00	; 0
    2aa6:	e4 17       	cp	r30, r20
    2aa8:	f5 07       	cpc	r31, r21
    2aaa:	3c f4       	brge	.+14     	; 0x2aba <conv_brk+0x70>
    2aac:	ad 35       	cpi	r26, 0x5D	; 93
    2aae:	69 f1       	breq	.+90     	; 0x2b0a <conv_brk+0xc0>
    2ab0:	ad 32       	cpi	r26, 0x2D	; 45
    2ab2:	19 f4       	brne	.+6      	; 0x2aba <conv_brk+0x70>
    2ab4:	bb 23       	and	r27, r27
    2ab6:	19 f1       	breq	.+70     	; 0x2afe <conv_brk+0xb4>
    2ab8:	03 c0       	rjmp	.+6      	; 0x2ac0 <conv_brk+0x76>
    2aba:	b1 11       	cpse	r27, r1
    2abc:	01 c0       	rjmp	.+2      	; 0x2ac0 <conv_brk+0x76>
    2abe:	8a 2e       	mov	r8, r26
    2ac0:	e7 2f       	mov	r30, r23
    2ac2:	e6 95       	lsr	r30
    2ac4:	e6 95       	lsr	r30
    2ac6:	e6 95       	lsr	r30
    2ac8:	86 01       	movw	r16, r12
    2aca:	0e 0f       	add	r16, r30
    2acc:	11 1d       	adc	r17, r1
    2ace:	f8 01       	movw	r30, r16
    2ad0:	a7 2f       	mov	r26, r23
    2ad2:	a7 70       	andi	r26, 0x07	; 7
    2ad4:	8c 01       	movw	r16, r24
    2ad6:	02 c0       	rjmp	.+4      	; 0x2adc <conv_brk+0x92>
    2ad8:	00 0f       	add	r16, r16
    2ada:	11 1f       	adc	r17, r17
    2adc:	aa 95       	dec	r26
    2ade:	e2 f7       	brpl	.-8      	; 0x2ad8 <conv_brk+0x8e>
    2ae0:	d8 01       	movw	r26, r16
    2ae2:	b0 81       	ld	r27, Z
    2ae4:	ba 2b       	or	r27, r26
    2ae6:	b0 83       	st	Z, r27
    2ae8:	78 15       	cp	r23, r8
    2aea:	59 f0       	breq	.+22     	; 0x2b02 <conv_brk+0xb8>
    2aec:	78 15       	cp	r23, r8
    2aee:	10 f4       	brcc	.+4      	; 0x2af4 <conv_brk+0xaa>
    2af0:	7f 5f       	subi	r23, 0xFF	; 255
    2af2:	e6 cf       	rjmp	.-52     	; 0x2ac0 <conv_brk+0x76>
    2af4:	71 50       	subi	r23, 0x01	; 1
    2af6:	e4 cf       	rjmp	.-56     	; 0x2ac0 <conv_brk+0x76>
    2af8:	99 24       	eor	r9, r9
    2afa:	93 94       	inc	r9
    2afc:	03 c0       	rjmp	.+6      	; 0x2b04 <conv_brk+0xba>
    2afe:	b1 e0       	ldi	r27, 0x01	; 1
    2b00:	01 c0       	rjmp	.+2      	; 0x2b04 <conv_brk+0xba>
    2b02:	b0 e0       	ldi	r27, 0x00	; 0
    2b04:	4f 5f       	subi	r20, 0xFF	; 255
    2b06:	5f 4f       	sbci	r21, 0xFF	; 255
    2b08:	ba cf       	rjmp	.-140    	; 0x2a7e <conv_brk+0x34>
    2b0a:	bb 23       	and	r27, r27
    2b0c:	19 f0       	breq	.+6      	; 0x2b14 <conv_brk+0xca>
    2b0e:	8e 81       	ldd	r24, Y+6	; 0x06
    2b10:	80 62       	ori	r24, 0x20	; 32
    2b12:	8e 83       	std	Y+6, r24	; 0x06
    2b14:	91 10       	cpse	r9, r1
    2b16:	03 c0       	rjmp	.+6      	; 0x2b1e <conv_brk+0xd4>
    2b18:	99 24       	eor	r9, r9
    2b1a:	93 94       	inc	r9
    2b1c:	15 c0       	rjmp	.+42     	; 0x2b48 <conv_brk+0xfe>
    2b1e:	f6 01       	movw	r30, r12
    2b20:	ce 01       	movw	r24, r28
    2b22:	81 96       	adiw	r24, 0x21	; 33
    2b24:	20 81       	ld	r18, Z
    2b26:	20 95       	com	r18
    2b28:	21 93       	st	Z+, r18
    2b2a:	e8 17       	cp	r30, r24
    2b2c:	f9 07       	cpc	r31, r25
    2b2e:	d1 f7       	brne	.-12     	; 0x2b24 <conv_brk+0xda>
    2b30:	f3 cf       	rjmp	.-26     	; 0x2b18 <conv_brk+0xce>
    2b32:	e1 14       	cp	r14, r1
    2b34:	f1 04       	cpc	r15, r1
    2b36:	29 f0       	breq	.+10     	; 0x2b42 <conv_brk+0xf8>
    2b38:	d7 01       	movw	r26, r14
    2b3a:	8c 93       	st	X, r24
    2b3c:	f7 01       	movw	r30, r14
    2b3e:	31 96       	adiw	r30, 0x01	; 1
    2b40:	7f 01       	movw	r14, r30
    2b42:	61 50       	subi	r22, 0x01	; 1
    2b44:	01 f1       	breq	.+64     	; 0x2b86 <conv_brk+0x13c>
    2b46:	91 2c       	mov	r9, r1
    2b48:	c5 01       	movw	r24, r10
    2b4a:	69 a3       	std	Y+33, r22	; 0x21
    2b4c:	0e 94 17 17 	call	0x2e2e	; 0x2e2e <fgetc>
    2b50:	69 a1       	ldd	r22, Y+33	; 0x21
    2b52:	97 fd       	sbrc	r25, 7
    2b54:	16 c0       	rjmp	.+44     	; 0x2b82 <conv_brk+0x138>
    2b56:	28 2f       	mov	r18, r24
    2b58:	26 95       	lsr	r18
    2b5a:	26 95       	lsr	r18
    2b5c:	26 95       	lsr	r18
    2b5e:	f6 01       	movw	r30, r12
    2b60:	e2 0f       	add	r30, r18
    2b62:	f1 1d       	adc	r31, r1
    2b64:	20 81       	ld	r18, Z
    2b66:	30 e0       	ldi	r19, 0x00	; 0
    2b68:	ac 01       	movw	r20, r24
    2b6a:	47 70       	andi	r20, 0x07	; 7
    2b6c:	55 27       	eor	r21, r21
    2b6e:	02 c0       	rjmp	.+4      	; 0x2b74 <conv_brk+0x12a>
    2b70:	35 95       	asr	r19
    2b72:	27 95       	ror	r18
    2b74:	4a 95       	dec	r20
    2b76:	e2 f7       	brpl	.-8      	; 0x2b70 <conv_brk+0x126>
    2b78:	20 fd       	sbrc	r18, 0
    2b7a:	db cf       	rjmp	.-74     	; 0x2b32 <conv_brk+0xe8>
    2b7c:	b5 01       	movw	r22, r10
    2b7e:	0e 94 55 17 	call	0x2eaa	; 0x2eaa <ungetc>
    2b82:	91 10       	cpse	r9, r1
    2b84:	86 cf       	rjmp	.-244    	; 0x2a92 <conv_brk+0x48>
    2b86:	e1 14       	cp	r14, r1
    2b88:	f1 04       	cpc	r15, r1
    2b8a:	11 f0       	breq	.+4      	; 0x2b90 <conv_brk+0x146>
    2b8c:	d7 01       	movw	r26, r14
    2b8e:	1c 92       	st	X, r1
    2b90:	c8 01       	movw	r24, r16
    2b92:	a1 96       	adiw	r28, 0x21	; 33
    2b94:	ed e0       	ldi	r30, 0x0D	; 13
    2b96:	0c 94 d4 10 	jmp	0x21a8	; 0x21a8 <__epilogue_restores__+0xa>

00002b9a <vfscanf>:
    2b9a:	4f 92       	push	r4
    2b9c:	5f 92       	push	r5
    2b9e:	7f 92       	push	r7
    2ba0:	8f 92       	push	r8
    2ba2:	9f 92       	push	r9
    2ba4:	af 92       	push	r10
    2ba6:	bf 92       	push	r11
    2ba8:	cf 92       	push	r12
    2baa:	df 92       	push	r13
    2bac:	ef 92       	push	r14
    2bae:	ff 92       	push	r15
    2bb0:	0f 93       	push	r16
    2bb2:	1f 93       	push	r17
    2bb4:	cf 93       	push	r28
    2bb6:	df 93       	push	r29
    2bb8:	1f 92       	push	r1
    2bba:	cd b7       	in	r28, 0x3d	; 61
    2bbc:	de b7       	in	r29, 0x3e	; 62
    2bbe:	8c 01       	movw	r16, r24
    2bc0:	2b 01       	movw	r4, r22
    2bc2:	7a 01       	movw	r14, r20
    2bc4:	fc 01       	movw	r30, r24
    2bc6:	17 82       	std	Z+7, r1	; 0x07
    2bc8:	16 82       	std	Z+6, r1	; 0x06
    2bca:	a1 2c       	mov	r10, r1
    2bcc:	f8 01       	movw	r30, r16
    2bce:	d3 80       	ldd	r13, Z+3	; 0x03
    2bd0:	f2 01       	movw	r30, r4
    2bd2:	d3 fc       	sbrc	r13, 3
    2bd4:	85 91       	lpm	r24, Z+
    2bd6:	d3 fe       	sbrs	r13, 3
    2bd8:	81 91       	ld	r24, Z+
    2bda:	38 2f       	mov	r19, r24
    2bdc:	2f 01       	movw	r4, r30
    2bde:	88 23       	and	r24, r24
    2be0:	09 f4       	brne	.+2      	; 0x2be4 <vfscanf+0x4a>
    2be2:	fc c0       	rjmp	.+504    	; 0x2ddc <vfscanf+0x242>
    2be4:	90 e0       	ldi	r25, 0x00	; 0
    2be6:	39 83       	std	Y+1, r19	; 0x01
    2be8:	0e 94 04 17 	call	0x2e08	; 0x2e08 <isspace>
    2bec:	39 81       	ldd	r19, Y+1	; 0x01
    2bee:	89 2b       	or	r24, r25
    2bf0:	21 f0       	breq	.+8      	; 0x2bfa <vfscanf+0x60>
    2bf2:	c8 01       	movw	r24, r16
    2bf4:	0e 94 7b 14 	call	0x28f6	; 0x28f6 <skip_spaces>
    2bf8:	e9 cf       	rjmp	.-46     	; 0x2bcc <vfscanf+0x32>
    2bfa:	35 32       	cpi	r19, 0x25	; 37
    2bfc:	41 f4       	brne	.+16     	; 0x2c0e <vfscanf+0x74>
    2bfe:	f2 01       	movw	r30, r4
    2c00:	d3 fc       	sbrc	r13, 3
    2c02:	35 91       	lpm	r19, Z+
    2c04:	d3 fe       	sbrs	r13, 3
    2c06:	31 91       	ld	r19, Z+
    2c08:	2f 01       	movw	r4, r30
    2c0a:	35 32       	cpi	r19, 0x25	; 37
    2c0c:	69 f4       	brne	.+26     	; 0x2c28 <vfscanf+0x8e>
    2c0e:	c8 01       	movw	r24, r16
    2c10:	39 83       	std	Y+1, r19	; 0x01
    2c12:	0e 94 17 17 	call	0x2e2e	; 0x2e2e <fgetc>
    2c16:	39 81       	ldd	r19, Y+1	; 0x01
    2c18:	97 fd       	sbrc	r25, 7
    2c1a:	de c0       	rjmp	.+444    	; 0x2dd8 <vfscanf+0x23e>
    2c1c:	38 17       	cp	r19, r24
    2c1e:	b1 f2       	breq	.-84     	; 0x2bcc <vfscanf+0x32>
    2c20:	b8 01       	movw	r22, r16
    2c22:	0e 94 55 17 	call	0x2eaa	; 0x2eaa <ungetc>
    2c26:	da c0       	rjmp	.+436    	; 0x2ddc <vfscanf+0x242>
    2c28:	3a 32       	cpi	r19, 0x2A	; 42
    2c2a:	41 f4       	brne	.+16     	; 0x2c3c <vfscanf+0xa2>
    2c2c:	d3 fc       	sbrc	r13, 3
    2c2e:	35 91       	lpm	r19, Z+
    2c30:	d3 fe       	sbrs	r13, 3
    2c32:	31 91       	ld	r19, Z+
    2c34:	2f 01       	movw	r4, r30
    2c36:	bb 24       	eor	r11, r11
    2c38:	b3 94       	inc	r11
    2c3a:	01 c0       	rjmp	.+2      	; 0x2c3e <vfscanf+0xa4>
    2c3c:	b1 2c       	mov	r11, r1
    2c3e:	71 2c       	mov	r7, r1
    2c40:	20 ed       	ldi	r18, 0xD0	; 208
    2c42:	23 0f       	add	r18, r19
    2c44:	2a 30       	cpi	r18, 0x0A	; 10
    2c46:	90 f4       	brcc	.+36     	; 0x2c6c <vfscanf+0xd2>
    2c48:	fb 2d       	mov	r31, r11
    2c4a:	f2 60       	ori	r31, 0x02	; 2
    2c4c:	bf 2e       	mov	r11, r31
    2c4e:	67 2d       	mov	r22, r7
    2c50:	70 e0       	ldi	r23, 0x00	; 0
    2c52:	80 e0       	ldi	r24, 0x00	; 0
    2c54:	90 e0       	ldi	r25, 0x00	; 0
    2c56:	40 e2       	ldi	r20, 0x20	; 32
    2c58:	0e 94 5b 14 	call	0x28b6	; 0x28b6 <mulacc>
    2c5c:	76 2e       	mov	r7, r22
    2c5e:	f2 01       	movw	r30, r4
    2c60:	d3 fc       	sbrc	r13, 3
    2c62:	35 91       	lpm	r19, Z+
    2c64:	d3 fe       	sbrs	r13, 3
    2c66:	31 91       	ld	r19, Z+
    2c68:	2f 01       	movw	r4, r30
    2c6a:	ea cf       	rjmp	.-44     	; 0x2c40 <vfscanf+0xa6>
    2c6c:	b1 fe       	sbrs	r11, 1
    2c6e:	03 c0       	rjmp	.+6      	; 0x2c76 <vfscanf+0xdc>
    2c70:	71 10       	cpse	r7, r1
    2c72:	03 c0       	rjmp	.+6      	; 0x2c7a <vfscanf+0xe0>
    2c74:	b3 c0       	rjmp	.+358    	; 0x2ddc <vfscanf+0x242>
    2c76:	77 24       	eor	r7, r7
    2c78:	7a 94       	dec	r7
    2c7a:	38 36       	cpi	r19, 0x68	; 104
    2c7c:	19 f0       	breq	.+6      	; 0x2c84 <vfscanf+0xea>
    2c7e:	3c 36       	cpi	r19, 0x6C	; 108
    2c80:	61 f0       	breq	.+24     	; 0x2c9a <vfscanf+0x100>
    2c82:	14 c0       	rjmp	.+40     	; 0x2cac <vfscanf+0x112>
    2c84:	f2 01       	movw	r30, r4
    2c86:	d3 fc       	sbrc	r13, 3
    2c88:	35 91       	lpm	r19, Z+
    2c8a:	d3 fe       	sbrs	r13, 3
    2c8c:	31 91       	ld	r19, Z+
    2c8e:	2f 01       	movw	r4, r30
    2c90:	38 36       	cpi	r19, 0x68	; 104
    2c92:	61 f4       	brne	.+24     	; 0x2cac <vfscanf+0x112>
    2c94:	fb 2d       	mov	r31, r11
    2c96:	f8 60       	ori	r31, 0x08	; 8
    2c98:	bf 2e       	mov	r11, r31
    2c9a:	8b 2d       	mov	r24, r11
    2c9c:	84 60       	ori	r24, 0x04	; 4
    2c9e:	b8 2e       	mov	r11, r24
    2ca0:	f2 01       	movw	r30, r4
    2ca2:	d3 fc       	sbrc	r13, 3
    2ca4:	35 91       	lpm	r19, Z+
    2ca6:	d3 fe       	sbrs	r13, 3
    2ca8:	31 91       	ld	r19, Z+
    2caa:	2f 01       	movw	r4, r30
    2cac:	33 23       	and	r19, r19
    2cae:	09 f4       	brne	.+2      	; 0x2cb2 <vfscanf+0x118>
    2cb0:	95 c0       	rjmp	.+298    	; 0x2ddc <vfscanf+0x242>
    2cb2:	63 2f       	mov	r22, r19
    2cb4:	70 e0       	ldi	r23, 0x00	; 0
    2cb6:	8c ee       	ldi	r24, 0xEC	; 236
    2cb8:	91 e0       	ldi	r25, 0x01	; 1
    2cba:	39 83       	std	Y+1, r19	; 0x01
    2cbc:	0e 94 0c 17 	call	0x2e18	; 0x2e18 <strchr_P>
    2cc0:	39 81       	ldd	r19, Y+1	; 0x01
    2cc2:	89 2b       	or	r24, r25
    2cc4:	09 f4       	brne	.+2      	; 0x2cc8 <vfscanf+0x12e>
    2cc6:	8a c0       	rjmp	.+276    	; 0x2ddc <vfscanf+0x242>
    2cc8:	b0 fc       	sbrc	r11, 0
    2cca:	07 c0       	rjmp	.+14     	; 0x2cda <vfscanf+0x140>
    2ccc:	f7 01       	movw	r30, r14
    2cce:	c0 80       	ld	r12, Z
    2cd0:	d1 80       	ldd	r13, Z+1	; 0x01
    2cd2:	c7 01       	movw	r24, r14
    2cd4:	02 96       	adiw	r24, 0x02	; 2
    2cd6:	7c 01       	movw	r14, r24
    2cd8:	02 c0       	rjmp	.+4      	; 0x2cde <vfscanf+0x144>
    2cda:	c1 2c       	mov	r12, r1
    2cdc:	d1 2c       	mov	r13, r1
    2cde:	3e 36       	cpi	r19, 0x6E	; 110
    2ce0:	51 f4       	brne	.+20     	; 0x2cf6 <vfscanf+0x15c>
    2ce2:	f8 01       	movw	r30, r16
    2ce4:	46 81       	ldd	r20, Z+6	; 0x06
    2ce6:	57 81       	ldd	r21, Z+7	; 0x07
    2ce8:	60 e0       	ldi	r22, 0x00	; 0
    2cea:	70 e0       	ldi	r23, 0x00	; 0
    2cec:	2b 2d       	mov	r18, r11
    2cee:	c6 01       	movw	r24, r12
    2cf0:	0e 94 4f 14 	call	0x289e	; 0x289e <putval>
    2cf4:	6b cf       	rjmp	.-298    	; 0x2bcc <vfscanf+0x32>
    2cf6:	33 36       	cpi	r19, 0x63	; 99
    2cf8:	a1 f4       	brne	.+40     	; 0x2d22 <vfscanf+0x188>
    2cfa:	b1 fc       	sbrc	r11, 1
    2cfc:	02 c0       	rjmp	.+4      	; 0x2d02 <vfscanf+0x168>
    2cfe:	77 24       	eor	r7, r7
    2d00:	73 94       	inc	r7
    2d02:	c8 01       	movw	r24, r16
    2d04:	0e 94 17 17 	call	0x2e2e	; 0x2e2e <fgetc>
    2d08:	97 fd       	sbrc	r25, 7
    2d0a:	66 c0       	rjmp	.+204    	; 0x2dd8 <vfscanf+0x23e>
    2d0c:	c1 14       	cp	r12, r1
    2d0e:	d1 04       	cpc	r13, r1
    2d10:	29 f0       	breq	.+10     	; 0x2d1c <vfscanf+0x182>
    2d12:	f6 01       	movw	r30, r12
    2d14:	80 83       	st	Z, r24
    2d16:	c6 01       	movw	r24, r12
    2d18:	01 96       	adiw	r24, 0x01	; 1
    2d1a:	6c 01       	movw	r12, r24
    2d1c:	7a 94       	dec	r7
    2d1e:	89 f7       	brne	.-30     	; 0x2d02 <vfscanf+0x168>
    2d20:	57 c0       	rjmp	.+174    	; 0x2dd0 <vfscanf+0x236>
    2d22:	3b 35       	cpi	r19, 0x5B	; 91
    2d24:	59 f4       	brne	.+22     	; 0x2d3c <vfscanf+0x1a2>
    2d26:	92 01       	movw	r18, r4
    2d28:	a6 01       	movw	r20, r12
    2d2a:	67 2d       	mov	r22, r7
    2d2c:	c8 01       	movw	r24, r16
    2d2e:	0e 94 25 15 	call	0x2a4a	; 0x2a4a <conv_brk>
    2d32:	2c 01       	movw	r4, r24
    2d34:	00 97       	sbiw	r24, 0x00	; 0
    2d36:	09 f0       	breq	.+2      	; 0x2d3a <vfscanf+0x1a0>
    2d38:	4b c0       	rjmp	.+150    	; 0x2dd0 <vfscanf+0x236>
    2d3a:	45 c0       	rjmp	.+138    	; 0x2dc6 <vfscanf+0x22c>
    2d3c:	c8 01       	movw	r24, r16
    2d3e:	39 83       	std	Y+1, r19	; 0x01
    2d40:	0e 94 7b 14 	call	0x28f6	; 0x28f6 <skip_spaces>
    2d44:	39 81       	ldd	r19, Y+1	; 0x01
    2d46:	97 fd       	sbrc	r25, 7
    2d48:	47 c0       	rjmp	.+142    	; 0x2dd8 <vfscanf+0x23e>
    2d4a:	3f 36       	cpi	r19, 0x6F	; 111
    2d4c:	69 f1       	breq	.+90     	; 0x2da8 <vfscanf+0x20e>
    2d4e:	28 f4       	brcc	.+10     	; 0x2d5a <vfscanf+0x1c0>
    2d50:	34 36       	cpi	r19, 0x64	; 100
    2d52:	31 f1       	breq	.+76     	; 0x2da0 <vfscanf+0x206>
    2d54:	39 36       	cpi	r19, 0x69	; 105
    2d56:	79 f1       	breq	.+94     	; 0x2db6 <vfscanf+0x21c>
    2d58:	2b c0       	rjmp	.+86     	; 0x2db0 <vfscanf+0x216>
    2d5a:	33 37       	cpi	r19, 0x73	; 115
    2d5c:	69 f0       	breq	.+26     	; 0x2d78 <vfscanf+0x1de>
    2d5e:	35 37       	cpi	r19, 0x75	; 117
    2d60:	f9 f0       	breq	.+62     	; 0x2da0 <vfscanf+0x206>
    2d62:	26 c0       	rjmp	.+76     	; 0x2db0 <vfscanf+0x216>
    2d64:	c1 14       	cp	r12, r1
    2d66:	d1 04       	cpc	r13, r1
    2d68:	29 f0       	breq	.+10     	; 0x2d74 <vfscanf+0x1da>
    2d6a:	f6 01       	movw	r30, r12
    2d6c:	80 82       	st	Z, r8
    2d6e:	c6 01       	movw	r24, r12
    2d70:	01 96       	adiw	r24, 0x01	; 1
    2d72:	6c 01       	movw	r12, r24
    2d74:	7a 94       	dec	r7
    2d76:	71 f0       	breq	.+28     	; 0x2d94 <vfscanf+0x1fa>
    2d78:	c8 01       	movw	r24, r16
    2d7a:	0e 94 17 17 	call	0x2e2e	; 0x2e2e <fgetc>
    2d7e:	4c 01       	movw	r8, r24
    2d80:	97 fd       	sbrc	r25, 7
    2d82:	08 c0       	rjmp	.+16     	; 0x2d94 <vfscanf+0x1fa>
    2d84:	0e 94 04 17 	call	0x2e08	; 0x2e08 <isspace>
    2d88:	89 2b       	or	r24, r25
    2d8a:	61 f3       	breq	.-40     	; 0x2d64 <vfscanf+0x1ca>
    2d8c:	b8 01       	movw	r22, r16
    2d8e:	c4 01       	movw	r24, r8
    2d90:	0e 94 55 17 	call	0x2eaa	; 0x2eaa <ungetc>
    2d94:	c1 14       	cp	r12, r1
    2d96:	d1 04       	cpc	r13, r1
    2d98:	d9 f0       	breq	.+54     	; 0x2dd0 <vfscanf+0x236>
    2d9a:	f6 01       	movw	r30, r12
    2d9c:	10 82       	st	Z, r1
    2d9e:	18 c0       	rjmp	.+48     	; 0x2dd0 <vfscanf+0x236>
    2da0:	fb 2d       	mov	r31, r11
    2da2:	f0 62       	ori	r31, 0x20	; 32
    2da4:	bf 2e       	mov	r11, r31
    2da6:	07 c0       	rjmp	.+14     	; 0x2db6 <vfscanf+0x21c>
    2da8:	8b 2d       	mov	r24, r11
    2daa:	80 61       	ori	r24, 0x10	; 16
    2dac:	b8 2e       	mov	r11, r24
    2dae:	03 c0       	rjmp	.+6      	; 0x2db6 <vfscanf+0x21c>
    2db0:	9b 2d       	mov	r25, r11
    2db2:	90 64       	ori	r25, 0x40	; 64
    2db4:	b9 2e       	mov	r11, r25
    2db6:	2b 2d       	mov	r18, r11
    2db8:	a6 01       	movw	r20, r12
    2dba:	67 2d       	mov	r22, r7
    2dbc:	c8 01       	movw	r24, r16
    2dbe:	0e 94 94 14 	call	0x2928	; 0x2928 <conv_int>
    2dc2:	81 11       	cpse	r24, r1
    2dc4:	05 c0       	rjmp	.+10     	; 0x2dd0 <vfscanf+0x236>
    2dc6:	f8 01       	movw	r30, r16
    2dc8:	83 81       	ldd	r24, Z+3	; 0x03
    2dca:	80 73       	andi	r24, 0x30	; 48
    2dcc:	29 f4       	brne	.+10     	; 0x2dd8 <vfscanf+0x23e>
    2dce:	06 c0       	rjmp	.+12     	; 0x2ddc <vfscanf+0x242>
    2dd0:	b0 fc       	sbrc	r11, 0
    2dd2:	fc ce       	rjmp	.-520    	; 0x2bcc <vfscanf+0x32>
    2dd4:	a3 94       	inc	r10
    2dd6:	fa ce       	rjmp	.-524    	; 0x2bcc <vfscanf+0x32>
    2dd8:	aa 20       	and	r10, r10
    2dda:	19 f0       	breq	.+6      	; 0x2de2 <vfscanf+0x248>
    2ddc:	8a 2d       	mov	r24, r10
    2dde:	90 e0       	ldi	r25, 0x00	; 0
    2de0:	02 c0       	rjmp	.+4      	; 0x2de6 <vfscanf+0x24c>
    2de2:	8f ef       	ldi	r24, 0xFF	; 255
    2de4:	9f ef       	ldi	r25, 0xFF	; 255
    2de6:	0f 90       	pop	r0
    2de8:	df 91       	pop	r29
    2dea:	cf 91       	pop	r28
    2dec:	1f 91       	pop	r17
    2dee:	0f 91       	pop	r16
    2df0:	ff 90       	pop	r15
    2df2:	ef 90       	pop	r14
    2df4:	df 90       	pop	r13
    2df6:	cf 90       	pop	r12
    2df8:	bf 90       	pop	r11
    2dfa:	af 90       	pop	r10
    2dfc:	9f 90       	pop	r9
    2dfe:	8f 90       	pop	r8
    2e00:	7f 90       	pop	r7
    2e02:	5f 90       	pop	r5
    2e04:	4f 90       	pop	r4
    2e06:	08 95       	ret

00002e08 <isspace>:
    2e08:	91 11       	cpse	r25, r1
    2e0a:	68 c0       	rjmp	.+208    	; 0x2edc <__ctype_isfalse>
    2e0c:	80 32       	cpi	r24, 0x20	; 32
    2e0e:	19 f0       	breq	.+6      	; 0x2e16 <isspace+0xe>
    2e10:	89 50       	subi	r24, 0x09	; 9
    2e12:	85 50       	subi	r24, 0x05	; 5
    2e14:	d0 f7       	brcc	.-12     	; 0x2e0a <isspace+0x2>
    2e16:	08 95       	ret

00002e18 <strchr_P>:
    2e18:	fc 01       	movw	r30, r24
    2e1a:	05 90       	lpm	r0, Z+
    2e1c:	06 16       	cp	r0, r22
    2e1e:	21 f0       	breq	.+8      	; 0x2e28 <strchr_P+0x10>
    2e20:	00 20       	and	r0, r0
    2e22:	d9 f7       	brne	.-10     	; 0x2e1a <strchr_P+0x2>
    2e24:	c0 01       	movw	r24, r0
    2e26:	08 95       	ret
    2e28:	31 97       	sbiw	r30, 0x01	; 1
    2e2a:	cf 01       	movw	r24, r30
    2e2c:	08 95       	ret

00002e2e <fgetc>:
    2e2e:	cf 93       	push	r28
    2e30:	df 93       	push	r29
    2e32:	ec 01       	movw	r28, r24
    2e34:	2b 81       	ldd	r18, Y+3	; 0x03
    2e36:	20 ff       	sbrs	r18, 0
    2e38:	33 c0       	rjmp	.+102    	; 0x2ea0 <fgetc+0x72>
    2e3a:	26 ff       	sbrs	r18, 6
    2e3c:	0a c0       	rjmp	.+20     	; 0x2e52 <fgetc+0x24>
    2e3e:	2f 7b       	andi	r18, 0xBF	; 191
    2e40:	2b 83       	std	Y+3, r18	; 0x03
    2e42:	8e 81       	ldd	r24, Y+6	; 0x06
    2e44:	9f 81       	ldd	r25, Y+7	; 0x07
    2e46:	01 96       	adiw	r24, 0x01	; 1
    2e48:	9f 83       	std	Y+7, r25	; 0x07
    2e4a:	8e 83       	std	Y+6, r24	; 0x06
    2e4c:	8a 81       	ldd	r24, Y+2	; 0x02
    2e4e:	90 e0       	ldi	r25, 0x00	; 0
    2e50:	29 c0       	rjmp	.+82     	; 0x2ea4 <fgetc+0x76>
    2e52:	22 ff       	sbrs	r18, 2
    2e54:	0f c0       	rjmp	.+30     	; 0x2e74 <fgetc+0x46>
    2e56:	e8 81       	ld	r30, Y
    2e58:	f9 81       	ldd	r31, Y+1	; 0x01
    2e5a:	80 81       	ld	r24, Z
    2e5c:	99 27       	eor	r25, r25
    2e5e:	87 fd       	sbrc	r24, 7
    2e60:	90 95       	com	r25
    2e62:	00 97       	sbiw	r24, 0x00	; 0
    2e64:	19 f4       	brne	.+6      	; 0x2e6c <fgetc+0x3e>
    2e66:	20 62       	ori	r18, 0x20	; 32
    2e68:	2b 83       	std	Y+3, r18	; 0x03
    2e6a:	1a c0       	rjmp	.+52     	; 0x2ea0 <fgetc+0x72>
    2e6c:	31 96       	adiw	r30, 0x01	; 1
    2e6e:	f9 83       	std	Y+1, r31	; 0x01
    2e70:	e8 83       	st	Y, r30
    2e72:	0e c0       	rjmp	.+28     	; 0x2e90 <fgetc+0x62>
    2e74:	ea 85       	ldd	r30, Y+10	; 0x0a
    2e76:	fb 85       	ldd	r31, Y+11	; 0x0b
    2e78:	09 95       	icall
    2e7a:	97 ff       	sbrs	r25, 7
    2e7c:	09 c0       	rjmp	.+18     	; 0x2e90 <fgetc+0x62>
    2e7e:	2b 81       	ldd	r18, Y+3	; 0x03
    2e80:	01 96       	adiw	r24, 0x01	; 1
    2e82:	11 f4       	brne	.+4      	; 0x2e88 <fgetc+0x5a>
    2e84:	80 e1       	ldi	r24, 0x10	; 16
    2e86:	01 c0       	rjmp	.+2      	; 0x2e8a <fgetc+0x5c>
    2e88:	80 e2       	ldi	r24, 0x20	; 32
    2e8a:	82 2b       	or	r24, r18
    2e8c:	8b 83       	std	Y+3, r24	; 0x03
    2e8e:	08 c0       	rjmp	.+16     	; 0x2ea0 <fgetc+0x72>
    2e90:	2e 81       	ldd	r18, Y+6	; 0x06
    2e92:	3f 81       	ldd	r19, Y+7	; 0x07
    2e94:	2f 5f       	subi	r18, 0xFF	; 255
    2e96:	3f 4f       	sbci	r19, 0xFF	; 255
    2e98:	3f 83       	std	Y+7, r19	; 0x07
    2e9a:	2e 83       	std	Y+6, r18	; 0x06
    2e9c:	99 27       	eor	r25, r25
    2e9e:	02 c0       	rjmp	.+4      	; 0x2ea4 <fgetc+0x76>
    2ea0:	8f ef       	ldi	r24, 0xFF	; 255
    2ea2:	9f ef       	ldi	r25, 0xFF	; 255
    2ea4:	df 91       	pop	r29
    2ea6:	cf 91       	pop	r28
    2ea8:	08 95       	ret

00002eaa <ungetc>:
    2eaa:	fb 01       	movw	r30, r22
    2eac:	23 81       	ldd	r18, Z+3	; 0x03
    2eae:	20 ff       	sbrs	r18, 0
    2eb0:	12 c0       	rjmp	.+36     	; 0x2ed6 <ungetc+0x2c>
    2eb2:	26 fd       	sbrc	r18, 6
    2eb4:	10 c0       	rjmp	.+32     	; 0x2ed6 <ungetc+0x2c>
    2eb6:	8f 3f       	cpi	r24, 0xFF	; 255
    2eb8:	3f ef       	ldi	r19, 0xFF	; 255
    2eba:	93 07       	cpc	r25, r19
    2ebc:	61 f0       	breq	.+24     	; 0x2ed6 <ungetc+0x2c>
    2ebe:	82 83       	std	Z+2, r24	; 0x02
    2ec0:	2f 7d       	andi	r18, 0xDF	; 223
    2ec2:	20 64       	ori	r18, 0x40	; 64
    2ec4:	23 83       	std	Z+3, r18	; 0x03
    2ec6:	26 81       	ldd	r18, Z+6	; 0x06
    2ec8:	37 81       	ldd	r19, Z+7	; 0x07
    2eca:	21 50       	subi	r18, 0x01	; 1
    2ecc:	31 09       	sbc	r19, r1
    2ece:	37 83       	std	Z+7, r19	; 0x07
    2ed0:	26 83       	std	Z+6, r18	; 0x06
    2ed2:	99 27       	eor	r25, r25
    2ed4:	08 95       	ret
    2ed6:	8f ef       	ldi	r24, 0xFF	; 255
    2ed8:	9f ef       	ldi	r25, 0xFF	; 255
    2eda:	08 95       	ret

00002edc <__ctype_isfalse>:
    2edc:	99 27       	eor	r25, r25
    2ede:	88 27       	eor	r24, r24

00002ee0 <__ctype_istrue>:
    2ee0:	08 95       	ret

00002ee2 <_exit>:
    2ee2:	f8 94       	cli

00002ee4 <__stop_program>:
    2ee4:	ff cf       	rjmp	.-2      	; 0x2ee4 <__stop_program>
