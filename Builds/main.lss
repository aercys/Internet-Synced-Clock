
Builds/main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000001e2  00800100  00002fa6  0000303a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002fa6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000048  008002e2  008002e2  0000321c  2**0
                  ALLOC
  3 .stab         0000327c  00000000  00000000  0000321c  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00001ab3  00000000  00000000  00006498  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      00000011  00000000  00000000  00007f4b  2**0
                  CONTENTS, READONLY
  6 .debug_aranges 000001c0  00000000  00000000  00007f60  2**3
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00000a64  00000000  00000000  00008120  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000118  00000000  00000000  00008b84  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000591  00000000  00000000  00008c9c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 fc 00 	jmp	0x1f8	; 0x1f8 <__ctors_end>
       4:	0c 94 19 01 	jmp	0x232	; 0x232 <__bad_interrupt>
       8:	0c 94 19 01 	jmp	0x232	; 0x232 <__bad_interrupt>
       c:	0c 94 19 01 	jmp	0x232	; 0x232 <__bad_interrupt>
      10:	0c 94 19 01 	jmp	0x232	; 0x232 <__bad_interrupt>
      14:	0c 94 19 01 	jmp	0x232	; 0x232 <__bad_interrupt>
      18:	0c 94 19 01 	jmp	0x232	; 0x232 <__bad_interrupt>
      1c:	0c 94 19 01 	jmp	0x232	; 0x232 <__bad_interrupt>
      20:	0c 94 19 01 	jmp	0x232	; 0x232 <__bad_interrupt>
      24:	0c 94 4f 06 	jmp	0xc9e	; 0xc9e <__vector_9>
      28:	0c 94 19 01 	jmp	0x232	; 0x232 <__bad_interrupt>
      2c:	0c 94 19 01 	jmp	0x232	; 0x232 <__bad_interrupt>
      30:	0c 94 19 01 	jmp	0x232	; 0x232 <__bad_interrupt>
      34:	0c 94 19 01 	jmp	0x232	; 0x232 <__bad_interrupt>
      38:	0c 94 19 01 	jmp	0x232	; 0x232 <__bad_interrupt>
      3c:	0c 94 19 01 	jmp	0x232	; 0x232 <__bad_interrupt>
      40:	0c 94 19 01 	jmp	0x232	; 0x232 <__bad_interrupt>
      44:	0c 94 19 01 	jmp	0x232	; 0x232 <__bad_interrupt>
      48:	0c 94 19 01 	jmp	0x232	; 0x232 <__bad_interrupt>
      4c:	0c 94 19 01 	jmp	0x232	; 0x232 <__bad_interrupt>
      50:	0c 94 19 01 	jmp	0x232	; 0x232 <__bad_interrupt>
      54:	0c 94 19 01 	jmp	0x232	; 0x232 <__bad_interrupt>
      58:	0c 94 19 01 	jmp	0x232	; 0x232 <__bad_interrupt>
      5c:	0c 94 19 01 	jmp	0x232	; 0x232 <__bad_interrupt>
      60:	0c 94 19 01 	jmp	0x232	; 0x232 <__bad_interrupt>
      64:	0c 94 19 01 	jmp	0x232	; 0x232 <__bad_interrupt>
      68:	07 63       	ori	r16, 0x37	; 55
      6a:	42 36       	cpi	r20, 0x62	; 98
      6c:	b7 9b       	sbis	0x16, 7	; 22
      6e:	d8 a7       	std	Y+40, r29	; 0x28
      70:	1a 39       	cpi	r17, 0x9A	; 154
      72:	68 56       	subi	r22, 0x68	; 104
      74:	18 ae       	std	Y+56, r1	; 0x38
      76:	ba ab       	std	Y+50, r27	; 0x32
      78:	55 8c       	ldd	r5, Z+29	; 0x1d
      7a:	1d 3c       	cpi	r17, 0xCD	; 205
      7c:	b7 cc       	rjmp	.-1682   	; 0xfffff9ec <__eeprom_end+0xff7ef9ec>
      7e:	57 63       	ori	r21, 0x37	; 55
      80:	bd 6d       	ori	r27, 0xDD	; 221
      82:	ed fd       	.word	0xfded	; ????
      84:	75 3e       	cpi	r23, 0xE5	; 229
      86:	f6 17       	cp	r31, r22
      88:	72 31       	cpi	r23, 0x12	; 18
      8a:	bf 00       	.word	0x00bf	; ????
      8c:	00 00       	nop
      8e:	80 3f       	cpi	r24, 0xF0	; 240
      90:	08 00       	.word	0x0008	; ????
      92:	00 00       	nop
      94:	be 92       	st	-X, r11
      96:	24 49       	sbci	r18, 0x94	; 148
      98:	12 3e       	cpi	r17, 0xE2	; 226
      9a:	ab aa       	std	Y+51, r10	; 0x33
      9c:	aa 2a       	or	r10, r26
      9e:	be cd       	rjmp	.-1156   	; 0xfffffc1c <__eeprom_end+0xff7efc1c>
      a0:	cc cc       	rjmp	.-1640   	; 0xfffffa3a <__eeprom_end+0xff7efa3a>
      a2:	4c 3e       	cpi	r20, 0xEC	; 236
      a4:	00 00       	nop
      a6:	00 80       	ld	r0, Z
      a8:	be ab       	std	Y+54, r27	; 0x36
      aa:	aa aa       	std	Y+50, r10	; 0x32
      ac:	aa 3e       	cpi	r26, 0xEA	; 234
      ae:	00 00       	nop
      b0:	00 00       	nop
      b2:	bf 00       	.word	0x00bf	; ????
      b4:	00 00       	nop
      b6:	80 3f       	cpi	r24, 0xF0	; 240
      b8:	00 00       	nop
      ba:	00 00       	nop
      bc:	00 08       	sbc	r0, r0
      be:	41 78       	andi	r20, 0x81	; 129
      c0:	d3 bb       	out	0x13, r29	; 19
      c2:	43 87       	std	Z+11, r20	; 0x0b
      c4:	d1 13       	cpse	r29, r17
      c6:	3d 19       	sub	r19, r13
      c8:	0e 3c       	cpi	r16, 0xCE	; 206
      ca:	c3 bd       	out	0x23, r28	; 35
      cc:	42 82       	std	Z+2, r4	; 0x02
      ce:	ad 2b       	or	r26, r29
      d0:	3e 68       	ori	r19, 0x8E	; 142
      d2:	ec 82       	std	Y+4, r14	; 0x04
      d4:	76 be       	out	0x36, r7	; 54
      d6:	d9 8f       	std	Y+25, r29	; 0x19
      d8:	e1 a9       	ldd	r30, Z+49	; 0x31
      da:	3e 4c       	sbci	r19, 0xCE	; 206
      dc:	80 ef       	ldi	r24, 0xF0	; 240
      de:	ff be       	out	0x3f, r15	; 63
      e0:	01 c4       	rjmp	.+2050   	; 0x8e4 <read_coeffs+0x100>
      e2:	ff 7f       	andi	r31, 0xFF	; 255
      e4:	3f 00       	.word	0x003f	; ????
      e6:	00 00       	nop
	...

000000ea <__trampolines_end>:
      ea:	6e 61       	ori	r22, 0x1E	; 30
      ec:	6e 00       	.word	0x006e	; ????

000000ee <__c.2128>:
      ee:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      fe:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
     10e:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
     11e:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
     12e:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
     13e:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
     14e:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     15e:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     16e:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     17e:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     18e:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     19e:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     1ae:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     1be:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     1ce:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     1de:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

000001ec <__c.2268>:
     1ec:	63 64 69 6e 6f 70 73 75 78 58 5b 00                 cdinopsuxX[.

000001f8 <__ctors_end>:
     1f8:	11 24       	eor	r1, r1
     1fa:	1f be       	out	0x3f, r1	; 63
     1fc:	cf ef       	ldi	r28, 0xFF	; 255
     1fe:	d8 e0       	ldi	r29, 0x08	; 8
     200:	de bf       	out	0x3e, r29	; 62
     202:	cd bf       	out	0x3d, r28	; 61

00000204 <__do_copy_data>:
     204:	12 e0       	ldi	r17, 0x02	; 2
     206:	a0 e0       	ldi	r26, 0x00	; 0
     208:	b1 e0       	ldi	r27, 0x01	; 1
     20a:	e6 ea       	ldi	r30, 0xA6	; 166
     20c:	ff e2       	ldi	r31, 0x2F	; 47
     20e:	02 c0       	rjmp	.+4      	; 0x214 <__do_copy_data+0x10>
     210:	05 90       	lpm	r0, Z+
     212:	0d 92       	st	X+, r0
     214:	a2 3e       	cpi	r26, 0xE2	; 226
     216:	b1 07       	cpc	r27, r17
     218:	d9 f7       	brne	.-10     	; 0x210 <__do_copy_data+0xc>

0000021a <__do_clear_bss>:
     21a:	23 e0       	ldi	r18, 0x03	; 3
     21c:	a2 ee       	ldi	r26, 0xE2	; 226
     21e:	b2 e0       	ldi	r27, 0x02	; 2
     220:	01 c0       	rjmp	.+2      	; 0x224 <.do_clear_bss_start>

00000222 <.do_clear_bss_loop>:
     222:	1d 92       	st	X+, r1

00000224 <.do_clear_bss_start>:
     224:	aa 32       	cpi	r26, 0x2A	; 42
     226:	b2 07       	cpc	r27, r18
     228:	e1 f7       	brne	.-8      	; 0x222 <.do_clear_bss_loop>
     22a:	0e 94 9c 09 	call	0x1338	; 0x1338 <main>
     22e:	0c 94 d1 17 	jmp	0x2fa2	; 0x2fa2 <_exit>

00000232 <__bad_interrupt>:
     232:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000236 <calculate_altitude>:
    X2 = (-7357 * _pressure) >> 16;
    bmp_180.pressure = _pressure + ((X1 + X2 + 3791) >> 4);
}

void calculate_altitude() {
    bmp_180.altitude = (float) 44330 * (1 - pow(((float) bmp_180.pressure / pressure_sea_level), 0.1903));
     236:	60 91 fe 02 	lds	r22, 0x02FE
     23a:	70 91 ff 02 	lds	r23, 0x02FF
     23e:	80 91 00 03 	lds	r24, 0x0300
     242:	90 91 01 03 	lds	r25, 0x0301
     246:	0e 94 2b 0e 	call	0x1c56	; 0x1c56 <__floatsisf>
     24a:	20 e8       	ldi	r18, 0x80	; 128
     24c:	36 ee       	ldi	r19, 0xE6	; 230
     24e:	45 ec       	ldi	r20, 0xC5	; 197
     250:	57 e4       	ldi	r21, 0x47	; 71
     252:	0e 94 90 0d 	call	0x1b20	; 0x1b20 <__divsf3>
     256:	21 e0       	ldi	r18, 0x01	; 1
     258:	3e ed       	ldi	r19, 0xDE	; 222
     25a:	42 e4       	ldi	r20, 0x42	; 66
     25c:	5e e3       	ldi	r21, 0x3E	; 62
     25e:	0e 94 1a 0f 	call	0x1e34	; 0x1e34 <pow>
     262:	9b 01       	movw	r18, r22
     264:	ac 01       	movw	r20, r24
     266:	60 e0       	ldi	r22, 0x00	; 0
     268:	70 e0       	ldi	r23, 0x00	; 0
     26a:	80 e8       	ldi	r24, 0x80	; 128
     26c:	9f e3       	ldi	r25, 0x3F	; 63
     26e:	0e 94 2b 0d 	call	0x1a56	; 0x1a56 <__subsf3>
     272:	20 e0       	ldi	r18, 0x00	; 0
     274:	3a e2       	ldi	r19, 0x2A	; 42
     276:	4d e2       	ldi	r20, 0x2D	; 45
     278:	57 e4       	ldi	r21, 0x47	; 71
     27a:	0e 94 b7 0e 	call	0x1d6e	; 0x1d6e <__mulsf3>
     27e:	60 93 02 03 	sts	0x0302, r22
     282:	70 93 03 03 	sts	0x0303, r23
     286:	80 93 04 03 	sts	0x0304, r24
     28a:	90 93 05 03 	sts	0x0305, r25
     28e:	08 95       	ret

00000290 <read_temperature>:
}

long read_temperature() {
     290:	cf 93       	push	r28
     292:	df 93       	push	r29
    short _temperature;
    
    start_transmission();
     294:	0e 94 19 05 	call	0xa32	; 0xa32 <start_transmission>
    send_addr(bmp180_write_addr);
     298:	8e ee       	ldi	r24, 0xEE	; 238
     29a:	0e 94 49 05 	call	0xa92	; 0xa92 <send_addr>
    send_data(control_reg_addr);
     29e:	84 ef       	ldi	r24, 0xF4	; 244
     2a0:	0e 94 5f 05 	call	0xabe	; 0xabe <send_data>
    send_data(temperature_sel);
     2a4:	8e e2       	ldi	r24, 0x2E	; 46
     2a6:	0e 94 5f 05 	call	0xabe	; 0xabe <send_data>
    end_transmission();
     2aa:	0e 94 26 05 	call	0xa4c	; 0xa4c <end_transmission>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     2ae:	87 e2       	ldi	r24, 0x27	; 39
     2b0:	93 e2       	ldi	r25, 0x23	; 35
     2b2:	01 97       	sbiw	r24, 0x01	; 1
     2b4:	f1 f7       	brne	.-4      	; 0x2b2 <read_temperature+0x22>
     2b6:	00 c0       	rjmp	.+0      	; 0x2b8 <read_temperature+0x28>
     2b8:	00 00       	nop
    
    _delay_ms(wait_temperature);
    
    start_transmission();
     2ba:	0e 94 19 05 	call	0xa32	; 0xa32 <start_transmission>
    send_addr(bmp180_write_addr);
     2be:	8e ee       	ldi	r24, 0xEE	; 238
     2c0:	0e 94 49 05 	call	0xa92	; 0xa92 <send_addr>
    send_data(out_msb);
     2c4:	86 ef       	ldi	r24, 0xF6	; 246
     2c6:	0e 94 5f 05 	call	0xabe	; 0xabe <send_data>
    send_data(out_lsb);
     2ca:	87 ef       	ldi	r24, 0xF7	; 247
     2cc:	0e 94 5f 05 	call	0xabe	; 0xabe <send_data>
    restart();
     2d0:	0e 94 38 05 	call	0xa70	; 0xa70 <restart>
    send_addr(bmp180_read_addr);
     2d4:	8f ee       	ldi	r24, 0xEF	; 239
     2d6:	0e 94 49 05 	call	0xa92	; 0xa92 <send_addr>
    _temperature = read_data(1) << 8;
     2da:	81 e0       	ldi	r24, 0x01	; 1
     2dc:	90 e0       	ldi	r25, 0x00	; 0
     2de:	0e 94 2a 05 	call	0xa54	; 0xa54 <read_data>
     2e2:	68 2f       	mov	r22, r24
     2e4:	70 e0       	ldi	r23, 0x00	; 0
     2e6:	d6 2f       	mov	r29, r22
     2e8:	cc 27       	eor	r28, r28
    _temperature |= read_data(0);
     2ea:	80 e0       	ldi	r24, 0x00	; 0
     2ec:	90 e0       	ldi	r25, 0x00	; 0
     2ee:	0e 94 2a 05 	call	0xa54	; 0xa54 <read_data>
     2f2:	c8 2b       	or	r28, r24
    end_transmission();
     2f4:	0e 94 26 05 	call	0xa4c	; 0xa4c <end_transmission>
    return (long) _temperature;
     2f8:	be 01       	movw	r22, r28
     2fa:	88 27       	eor	r24, r24
     2fc:	77 fd       	sbrc	r23, 7
     2fe:	80 95       	com	r24
     300:	98 2f       	mov	r25, r24
}
     302:	df 91       	pop	r29
     304:	cf 91       	pop	r28
     306:	08 95       	ret

00000308 <calculate_temperature>:
    init_twi();
    read_coeffs();
    bmp_180.mode = mode;
}

void calculate_temperature() {
     308:	8f 92       	push	r8
     30a:	9f 92       	push	r9
     30c:	af 92       	push	r10
     30e:	bf 92       	push	r11
     310:	cf 92       	push	r12
     312:	df 92       	push	r13
     314:	ef 92       	push	r14
     316:	ff 92       	push	r15
    long UT, X1, X2, B5;
    
    UT = read_temperature();
     318:	0e 94 48 01 	call	0x290	; 0x290 <read_temperature>
     31c:	9b 01       	movw	r18, r22
     31e:	ac 01       	movw	r20, r24
    X1 = (UT - bmp_180.calib_coeffs.AC6) * bmp_180.calib_coeffs.AC5 / pow(2, 15);
     320:	80 91 10 03 	lds	r24, 0x0310
     324:	90 91 11 03 	lds	r25, 0x0311
     328:	28 1b       	sub	r18, r24
     32a:	39 0b       	sbc	r19, r25
     32c:	41 09       	sbc	r20, r1
     32e:	51 09       	sbc	r21, r1
     330:	a0 91 0e 03 	lds	r26, 0x030E
     334:	b0 91 0f 03 	lds	r27, 0x030F
     338:	0e 94 e4 10 	call	0x21c8	; 0x21c8 <__muluhisi3>
     33c:	0e 94 2b 0e 	call	0x1c56	; 0x1c56 <__floatsisf>
     340:	20 e0       	ldi	r18, 0x00	; 0
     342:	30 e0       	ldi	r19, 0x00	; 0
     344:	40 e0       	ldi	r20, 0x00	; 0
     346:	58 e3       	ldi	r21, 0x38	; 56
     348:	0e 94 b7 0e 	call	0x1d6e	; 0x1d6e <__mulsf3>
     34c:	0e 94 f8 0d 	call	0x1bf0	; 0x1bf0 <__fixsfsi>
     350:	6b 01       	movw	r12, r22
     352:	7c 01       	movw	r14, r24
    X2 = bmp_180.calib_coeffs.MC * pow(2, 11) / (X1 + bmp_180.calib_coeffs.MD);
     354:	60 91 1c 03 	lds	r22, 0x031C
     358:	70 91 1d 03 	lds	r23, 0x031D
     35c:	88 27       	eor	r24, r24
     35e:	77 fd       	sbrc	r23, 7
     360:	80 95       	com	r24
     362:	98 2f       	mov	r25, r24
     364:	0e 94 2b 0e 	call	0x1c56	; 0x1c56 <__floatsisf>
     368:	20 e0       	ldi	r18, 0x00	; 0
     36a:	30 e0       	ldi	r19, 0x00	; 0
     36c:	40 e0       	ldi	r20, 0x00	; 0
     36e:	55 e4       	ldi	r21, 0x45	; 69
     370:	0e 94 b7 0e 	call	0x1d6e	; 0x1d6e <__mulsf3>
     374:	4b 01       	movw	r8, r22
     376:	5c 01       	movw	r10, r24
     378:	80 91 1e 03 	lds	r24, 0x031E
     37c:	90 91 1f 03 	lds	r25, 0x031F
     380:	bc 01       	movw	r22, r24
     382:	88 27       	eor	r24, r24
     384:	77 fd       	sbrc	r23, 7
     386:	80 95       	com	r24
     388:	98 2f       	mov	r25, r24
     38a:	6c 0d       	add	r22, r12
     38c:	7d 1d       	adc	r23, r13
     38e:	8e 1d       	adc	r24, r14
     390:	9f 1d       	adc	r25, r15
     392:	0e 94 2b 0e 	call	0x1c56	; 0x1c56 <__floatsisf>
     396:	9b 01       	movw	r18, r22
     398:	ac 01       	movw	r20, r24
     39a:	c5 01       	movw	r24, r10
     39c:	b4 01       	movw	r22, r8
     39e:	0e 94 90 0d 	call	0x1b20	; 0x1b20 <__divsf3>
     3a2:	0e 94 f8 0d 	call	0x1bf0	; 0x1bf0 <__fixsfsi>
    B5 = X1 + X2;
     3a6:	6c 0d       	add	r22, r12
     3a8:	7d 1d       	adc	r23, r13
     3aa:	8e 1d       	adc	r24, r14
     3ac:	9f 1d       	adc	r25, r15
    bmp_180.calib_coeffs.B5 = B5;
     3ae:	60 93 16 03 	sts	0x0316, r22
     3b2:	70 93 17 03 	sts	0x0317, r23
     3b6:	80 93 18 03 	sts	0x0318, r24
     3ba:	90 93 19 03 	sts	0x0319, r25
    bmp_180.temperature = (B5 + 8) / pow(2, 4);
     3be:	68 5f       	subi	r22, 0xF8	; 248
     3c0:	7f 4f       	sbci	r23, 0xFF	; 255
     3c2:	8f 4f       	sbci	r24, 0xFF	; 255
     3c4:	9f 4f       	sbci	r25, 0xFF	; 255
     3c6:	0e 94 2b 0e 	call	0x1c56	; 0x1c56 <__floatsisf>
     3ca:	20 e0       	ldi	r18, 0x00	; 0
     3cc:	30 e0       	ldi	r19, 0x00	; 0
     3ce:	40 e8       	ldi	r20, 0x80	; 128
     3d0:	5d e3       	ldi	r21, 0x3D	; 61
     3d2:	0e 94 b7 0e 	call	0x1d6e	; 0x1d6e <__mulsf3>
     3d6:	0e 94 f8 0d 	call	0x1bf0	; 0x1bf0 <__fixsfsi>
     3da:	60 93 fa 02 	sts	0x02FA, r22
     3de:	70 93 fb 02 	sts	0x02FB, r23
     3e2:	80 93 fc 02 	sts	0x02FC, r24
     3e6:	90 93 fd 02 	sts	0x02FD, r25
}
     3ea:	ff 90       	pop	r15
     3ec:	ef 90       	pop	r14
     3ee:	df 90       	pop	r13
     3f0:	cf 90       	pop	r12
     3f2:	bf 90       	pop	r11
     3f4:	af 90       	pop	r10
     3f6:	9f 90       	pop	r9
     3f8:	8f 90       	pop	r8
     3fa:	08 95       	ret

000003fc <read_pressure>:
    _temperature |= read_data(0);
    end_transmission();
    return (long) _temperature;
}

long read_pressure() {
     3fc:	1f 93       	push	r17
     3fe:	cf 93       	push	r28
     400:	df 93       	push	r29
    long UP;
    uint8_t msb, lsb, xlsb;
    
    start_transmission();
     402:	0e 94 19 05 	call	0xa32	; 0xa32 <start_transmission>
    send_addr(bmp180_write_addr);
     406:	8e ee       	ldi	r24, 0xEE	; 238
     408:	0e 94 49 05 	call	0xa92	; 0xa92 <send_addr>
    send_data(control_reg_addr);
     40c:	84 ef       	ldi	r24, 0xF4	; 244
     40e:	0e 94 5f 05 	call	0xabe	; 0xabe <send_data>
    
    switch (bmp_180.mode) {
     412:	80 91 f0 02 	lds	r24, 0x02F0
     416:	90 91 f1 02 	lds	r25, 0x02F1
     41a:	82 30       	cpi	r24, 0x02	; 2
     41c:	91 05       	cpc	r25, r1
     41e:	c9 f0       	breq	.+50     	; 0x452 <read_pressure+0x56>
     420:	83 30       	cpi	r24, 0x03	; 3
     422:	91 05       	cpc	r25, r1
     424:	01 f1       	breq	.+64     	; 0x466 <read_pressure+0x6a>
     426:	01 97       	sbiw	r24, 0x01	; 1
     428:	51 f0       	breq	.+20     	; 0x43e <read_pressure+0x42>
        default:
        case bmp180_mode_0:
            send_data(pressure_0_sel);
     42a:	84 e3       	ldi	r24, 0x34	; 52
     42c:	0e 94 5f 05 	call	0xabe	; 0xabe <send_data>
            end_transmission();
     430:	0e 94 26 05 	call	0xa4c	; 0xa4c <end_transmission>
     434:	87 e2       	ldi	r24, 0x27	; 39
     436:	93 e2       	ldi	r25, 0x23	; 35
     438:	01 97       	sbiw	r24, 0x01	; 1
     43a:	f1 f7       	brne	.-4      	; 0x438 <read_pressure+0x3c>
     43c:	1d c0       	rjmp	.+58     	; 0x478 <read_pressure+0x7c>
            _delay_ms(wait_pressure_mode_0);
            break;
        case bmp180_mode_1:
            send_data(pressure_1_sel);
     43e:	84 e7       	ldi	r24, 0x74	; 116
     440:	0e 94 5f 05 	call	0xabe	; 0xabe <send_data>
            end_transmission();
     444:	0e 94 26 05 	call	0xa4c	; 0xa4c <end_transmission>
     448:	87 e9       	ldi	r24, 0x97	; 151
     44a:	9a e3       	ldi	r25, 0x3A	; 58
     44c:	01 97       	sbiw	r24, 0x01	; 1
     44e:	f1 f7       	brne	.-4      	; 0x44c <read_pressure+0x50>
     450:	13 c0       	rjmp	.+38     	; 0x478 <read_pressure+0x7c>
            _delay_ms(wait_pressure_mode_1);
            break;
        case bmp180_mode_2:
            send_data(pressure_2_sel);
     452:	84 eb       	ldi	r24, 0xB4	; 180
     454:	0e 94 5f 05 	call	0xabe	; 0xabe <send_data>
            end_transmission();
     458:	0e 94 26 05 	call	0xa4c	; 0xa4c <end_transmission>
     45c:	87 e7       	ldi	r24, 0x77	; 119
     45e:	99 e6       	ldi	r25, 0x69	; 105
     460:	01 97       	sbiw	r24, 0x01	; 1
     462:	f1 f7       	brne	.-4      	; 0x460 <read_pressure+0x64>
     464:	09 c0       	rjmp	.+18     	; 0x478 <read_pressure+0x7c>
            _delay_ms(wait_pressure_mode_2);
            break;
        case bmp180_mode_3:
            send_data(pressure_3_sel);
     466:	84 ef       	ldi	r24, 0xF4	; 244
     468:	0e 94 5f 05 	call	0xabe	; 0xabe <send_data>
            end_transmission();
     46c:	0e 94 26 05 	call	0xa4c	; 0xa4c <end_transmission>
     470:	87 e3       	ldi	r24, 0x37	; 55
     472:	97 ec       	ldi	r25, 0xC7	; 199
     474:	01 97       	sbiw	r24, 0x01	; 1
     476:	f1 f7       	brne	.-4      	; 0x474 <read_pressure+0x78>
     478:	00 c0       	rjmp	.+0      	; 0x47a <read_pressure+0x7e>
     47a:	00 00       	nop
     47c:	8f ec       	ldi	r24, 0xCF	; 207
     47e:	97 e0       	ldi	r25, 0x07	; 7
     480:	01 97       	sbiw	r24, 0x01	; 1
     482:	f1 f7       	brne	.-4      	; 0x480 <read_pressure+0x84>
     484:	00 c0       	rjmp	.+0      	; 0x486 <read_pressure+0x8a>
     486:	00 00       	nop
            _delay_ms(wait_pressure_mode_3);
            break;
    }
    
    _delay_ms(1);
    start_transmission();
     488:	0e 94 19 05 	call	0xa32	; 0xa32 <start_transmission>
    send_addr(bmp180_write_addr);
     48c:	8e ee       	ldi	r24, 0xEE	; 238
     48e:	0e 94 49 05 	call	0xa92	; 0xa92 <send_addr>
    send_data(out_msb);
     492:	86 ef       	ldi	r24, 0xF6	; 246
     494:	0e 94 5f 05 	call	0xabe	; 0xabe <send_data>
    send_data(out_lsb);
     498:	87 ef       	ldi	r24, 0xF7	; 247
     49a:	0e 94 5f 05 	call	0xabe	; 0xabe <send_data>
    restart();
     49e:	0e 94 38 05 	call	0xa70	; 0xa70 <restart>
    send_addr(bmp180_read_addr);
     4a2:	8f ee       	ldi	r24, 0xEF	; 239
     4a4:	0e 94 49 05 	call	0xa92	; 0xa92 <send_addr>
    msb = read_data(1);
     4a8:	81 e0       	ldi	r24, 0x01	; 1
     4aa:	90 e0       	ldi	r25, 0x00	; 0
     4ac:	0e 94 2a 05 	call	0xa54	; 0xa54 <read_data>
     4b0:	c8 2f       	mov	r28, r24
    lsb = read_data(0);
     4b2:	80 e0       	ldi	r24, 0x00	; 0
     4b4:	90 e0       	ldi	r25, 0x00	; 0
     4b6:	0e 94 2a 05 	call	0xa54	; 0xa54 <read_data>
     4ba:	18 2f       	mov	r17, r24
    end_transmission();
     4bc:	0e 94 26 05 	call	0xa4c	; 0xa4c <end_transmission>
     4c0:	8f ec       	ldi	r24, 0xCF	; 207
     4c2:	97 e0       	ldi	r25, 0x07	; 7
     4c4:	01 97       	sbiw	r24, 0x01	; 1
     4c6:	f1 f7       	brne	.-4      	; 0x4c4 <read_pressure+0xc8>
     4c8:	00 c0       	rjmp	.+0      	; 0x4ca <read_pressure+0xce>
     4ca:	00 00       	nop
    _delay_ms(1);
    start_transmission();
     4cc:	0e 94 19 05 	call	0xa32	; 0xa32 <start_transmission>
    send_addr(bmp180_write_addr);
     4d0:	8e ee       	ldi	r24, 0xEE	; 238
     4d2:	0e 94 49 05 	call	0xa92	; 0xa92 <send_addr>
    send_data(out_xlsb);
     4d6:	88 ef       	ldi	r24, 0xF8	; 248
     4d8:	0e 94 5f 05 	call	0xabe	; 0xabe <send_data>
    restart();
     4dc:	0e 94 38 05 	call	0xa70	; 0xa70 <restart>
    send_addr(bmp180_read_addr);
     4e0:	8f ee       	ldi	r24, 0xEF	; 239
     4e2:	0e 94 49 05 	call	0xa92	; 0xa92 <send_addr>
    xlsb = read_data(0);
     4e6:	80 e0       	ldi	r24, 0x00	; 0
     4e8:	90 e0       	ldi	r25, 0x00	; 0
     4ea:	0e 94 2a 05 	call	0xa54	; 0xa54 <read_data>
     4ee:	d8 2f       	mov	r29, r24
    end_transmission();
     4f0:	0e 94 26 05 	call	0xa4c	; 0xa4c <end_transmission>
    
    UP = ((unsigned long) msb << 16 | (unsigned long) lsb << 8 | (unsigned long) xlsb) >> (8 - bmp_180.mode);
     4f4:	81 2f       	mov	r24, r17
     4f6:	90 e0       	ldi	r25, 0x00	; 0
     4f8:	a0 e0       	ldi	r26, 0x00	; 0
     4fa:	b0 e0       	ldi	r27, 0x00	; 0
     4fc:	66 27       	eor	r22, r22
     4fe:	78 2f       	mov	r23, r24
     500:	89 2f       	mov	r24, r25
     502:	9a 2f       	mov	r25, r26
     504:	8c 2b       	or	r24, r28
     506:	6d 2b       	or	r22, r29
     508:	28 e0       	ldi	r18, 0x08	; 8
     50a:	30 e0       	ldi	r19, 0x00	; 0
     50c:	40 91 f0 02 	lds	r20, 0x02F0
     510:	50 91 f1 02 	lds	r21, 0x02F1
     514:	24 1b       	sub	r18, r20
     516:	35 0b       	sbc	r19, r21
     518:	04 c0       	rjmp	.+8      	; 0x522 <read_pressure+0x126>
     51a:	96 95       	lsr	r25
     51c:	87 95       	ror	r24
     51e:	77 95       	ror	r23
     520:	67 95       	ror	r22
     522:	2a 95       	dec	r18
     524:	d2 f7       	brpl	.-12     	; 0x51a <read_pressure+0x11e>
    return (long) UP;
}
     526:	df 91       	pop	r29
     528:	cf 91       	pop	r28
     52a:	1f 91       	pop	r17
     52c:	08 95       	ret

0000052e <calculate_pressure>:
    B5 = X1 + X2;
    bmp_180.calib_coeffs.B5 = B5;
    bmp_180.temperature = (B5 + 8) / pow(2, 4);
}

void calculate_pressure() {
     52e:	3f 92       	push	r3
     530:	4f 92       	push	r4
     532:	5f 92       	push	r5
     534:	6f 92       	push	r6
     536:	7f 92       	push	r7
     538:	8f 92       	push	r8
     53a:	9f 92       	push	r9
     53c:	af 92       	push	r10
     53e:	bf 92       	push	r11
     540:	cf 92       	push	r12
     542:	df 92       	push	r13
     544:	ef 92       	push	r14
     546:	ff 92       	push	r15
     548:	0f 93       	push	r16
     54a:	1f 93       	push	r17
     54c:	cf 93       	push	r28
     54e:	df 93       	push	r29
     550:	cd b7       	in	r28, 0x3d	; 61
     552:	de b7       	in	r29, 0x3e	; 62
     554:	28 97       	sbiw	r28, 0x08	; 8
     556:	0f b6       	in	r0, 0x3f	; 63
     558:	f8 94       	cli
     55a:	de bf       	out	0x3e, r29	; 62
     55c:	0f be       	out	0x3f, r0	; 63
     55e:	cd bf       	out	0x3d, r28	; 61
    long UP, X1, X2, X3, B3, B6, _pressure;
    unsigned long B4, B7;
    
    UP = read_pressure();
     560:	0e 94 fe 01 	call	0x3fc	; 0x3fc <read_pressure>
     564:	6d 83       	std	Y+5, r22	; 0x05
     566:	7e 83       	std	Y+6, r23	; 0x06
     568:	8f 83       	std	Y+7, r24	; 0x07
     56a:	98 87       	std	Y+8, r25	; 0x08
    B6 = bmp_180.calib_coeffs.B5 - 4000;
     56c:	80 90 16 03 	lds	r8, 0x0316
     570:	90 90 17 03 	lds	r9, 0x0317
     574:	a0 90 18 03 	lds	r10, 0x0318
     578:	b0 90 19 03 	lds	r11, 0x0319
     57c:	80 ea       	ldi	r24, 0xA0	; 160
     57e:	88 1a       	sub	r8, r24
     580:	8f e0       	ldi	r24, 0x0F	; 15
     582:	98 0a       	sbc	r9, r24
     584:	a1 08       	sbc	r10, r1
     586:	b1 08       	sbc	r11, r1
    X1 = (bmp_180.calib_coeffs.B2 * (B6 * B6 >> 12)) >> 11;
     588:	a5 01       	movw	r20, r10
     58a:	94 01       	movw	r18, r8
     58c:	c5 01       	movw	r24, r10
     58e:	b4 01       	movw	r22, r8
     590:	0e 94 7f 10 	call	0x20fe	; 0x20fe <__mulsi3>
     594:	2b 01       	movw	r4, r22
     596:	3c 01       	movw	r6, r24
     598:	fc e0       	ldi	r31, 0x0C	; 12
     59a:	75 94       	asr	r7
     59c:	67 94       	ror	r6
     59e:	57 94       	ror	r5
     5a0:	47 94       	ror	r4
     5a2:	fa 95       	dec	r31
     5a4:	d1 f7       	brne	.-12     	; 0x59a <calculate_pressure+0x6c>
    X2 = bmp_180.calib_coeffs.AC2 * B6 >> 11;
    X3 = X1 + X2;
    B3 = ((((long)bmp_180.calib_coeffs.AC1 * 4 + X3) << bmp_180.mode) + 2) / 4;
     5a6:	00 91 06 03 	lds	r16, 0x0306
     5aa:	10 91 07 03 	lds	r17, 0x0307
     5ae:	30 90 f0 02 	lds	r3, 0x02F0
    X1 = bmp_180.calib_coeffs.AC3 * B6 >> 13;
     5b2:	a0 91 0a 03 	lds	r26, 0x030A
     5b6:	b0 91 0b 03 	lds	r27, 0x030B
     5ba:	0e 94 ef 10 	call	0x21de	; 0x21de <__mulshisi3>
     5be:	6b 01       	movw	r12, r22
     5c0:	7c 01       	movw	r14, r24
     5c2:	ad e0       	ldi	r26, 0x0D	; 13
     5c4:	f5 94       	asr	r15
     5c6:	e7 94       	ror	r14
     5c8:	d7 94       	ror	r13
     5ca:	c7 94       	ror	r12
     5cc:	aa 95       	dec	r26
     5ce:	d1 f7       	brne	.-12     	; 0x5c4 <calculate_pressure+0x96>
    X2 = (bmp_180.calib_coeffs.B1 * (B6 * B6 >> 12)) >> 16;
     5d0:	a0 91 12 03 	lds	r26, 0x0312
     5d4:	b0 91 13 03 	lds	r27, 0x0313
     5d8:	a3 01       	movw	r20, r6
     5da:	92 01       	movw	r18, r4
     5dc:	0e 94 ef 10 	call	0x21de	; 0x21de <__mulshisi3>
     5e0:	bb 27       	eor	r27, r27
     5e2:	97 fd       	sbrc	r25, 7
     5e4:	b0 95       	com	r27
     5e6:	ab 2f       	mov	r26, r27
    X3 = ((X1 + X2) + 2) >> 2;
     5e8:	c8 0e       	add	r12, r24
     5ea:	d9 1e       	adc	r13, r25
     5ec:	ea 1e       	adc	r14, r26
     5ee:	fb 1e       	adc	r15, r27
     5f0:	92 e0       	ldi	r25, 0x02	; 2
     5f2:	c9 0e       	add	r12, r25
     5f4:	d1 1c       	adc	r13, r1
     5f6:	e1 1c       	adc	r14, r1
     5f8:	f1 1c       	adc	r15, r1
     5fa:	82 e0       	ldi	r24, 0x02	; 2
     5fc:	f5 94       	asr	r15
     5fe:	e7 94       	ror	r14
     600:	d7 94       	ror	r13
     602:	c7 94       	ror	r12
     604:	8a 95       	dec	r24
     606:	d1 f7       	brne	.-12     	; 0x5fc <calculate_pressure+0xce>
    B4 = bmp_180.calib_coeffs.AC4 * (unsigned long) (X3 + 32768) >> 15;
     608:	a0 e8       	ldi	r26, 0x80	; 128
     60a:	da 0e       	add	r13, r26
     60c:	e1 1c       	adc	r14, r1
     60e:	f1 1c       	adc	r15, r1
     610:	a0 91 0c 03 	lds	r26, 0x030C
     614:	b0 91 0d 03 	lds	r27, 0x030D
     618:	a7 01       	movw	r20, r14
     61a:	96 01       	movw	r18, r12
     61c:	0e 94 e4 10 	call	0x21c8	; 0x21c8 <__muluhisi3>
     620:	dc 01       	movw	r26, r24
     622:	cb 01       	movw	r24, r22
     624:	2f e0       	ldi	r18, 0x0F	; 15
     626:	b6 95       	lsr	r27
     628:	a7 95       	ror	r26
     62a:	97 95       	ror	r25
     62c:	87 95       	ror	r24
     62e:	2a 95       	dec	r18
     630:	d1 f7       	brne	.-12     	; 0x626 <calculate_pressure+0xf8>
     632:	89 83       	std	Y+1, r24	; 0x01
     634:	9a 83       	std	Y+2, r25	; 0x02
     636:	ab 83       	std	Y+3, r26	; 0x03
     638:	bc 83       	std	Y+4, r27	; 0x04
    UP = read_pressure();
    B6 = bmp_180.calib_coeffs.B5 - 4000;
    X1 = (bmp_180.calib_coeffs.B2 * (B6 * B6 >> 12)) >> 11;
    X2 = bmp_180.calib_coeffs.AC2 * B6 >> 11;
    X3 = X1 + X2;
    B3 = ((((long)bmp_180.calib_coeffs.AC1 * 4 + X3) << bmp_180.mode) + 2) / 4;
     63a:	68 01       	movw	r12, r16
     63c:	ee 24       	eor	r14, r14
     63e:	d7 fc       	sbrc	r13, 7
     640:	e0 94       	com	r14
     642:	fe 2c       	mov	r15, r14
     644:	32 e0       	ldi	r19, 0x02	; 2
     646:	cc 0c       	add	r12, r12
     648:	dd 1c       	adc	r13, r13
     64a:	ee 1c       	adc	r14, r14
     64c:	ff 1c       	adc	r15, r15
     64e:	3a 95       	dec	r19
     650:	d1 f7       	brne	.-12     	; 0x646 <calculate_pressure+0x118>
    long UP, X1, X2, X3, B3, B6, _pressure;
    unsigned long B4, B7;
    
    UP = read_pressure();
    B6 = bmp_180.calib_coeffs.B5 - 4000;
    X1 = (bmp_180.calib_coeffs.B2 * (B6 * B6 >> 12)) >> 11;
     652:	a0 91 14 03 	lds	r26, 0x0314
     656:	b0 91 15 03 	lds	r27, 0x0315
     65a:	a3 01       	movw	r20, r6
     65c:	92 01       	movw	r18, r4
     65e:	0e 94 ef 10 	call	0x21de	; 0x21de <__mulshisi3>
     662:	2b 01       	movw	r4, r22
     664:	3c 01       	movw	r6, r24
     666:	4b e0       	ldi	r20, 0x0B	; 11
     668:	75 94       	asr	r7
     66a:	67 94       	ror	r6
     66c:	57 94       	ror	r5
     66e:	47 94       	ror	r4
     670:	4a 95       	dec	r20
     672:	d1 f7       	brne	.-12     	; 0x668 <calculate_pressure+0x13a>
    X2 = bmp_180.calib_coeffs.AC2 * B6 >> 11;
     674:	a0 91 08 03 	lds	r26, 0x0308
     678:	b0 91 09 03 	lds	r27, 0x0309
     67c:	a5 01       	movw	r20, r10
     67e:	94 01       	movw	r18, r8
     680:	0e 94 ef 10 	call	0x21de	; 0x21de <__mulshisi3>
     684:	5b e0       	ldi	r21, 0x0B	; 11
     686:	95 95       	asr	r25
     688:	87 95       	ror	r24
     68a:	77 95       	ror	r23
     68c:	67 95       	ror	r22
     68e:	5a 95       	dec	r21
     690:	d1 f7       	brne	.-12     	; 0x686 <calculate_pressure+0x158>
    X3 = X1 + X2;
     692:	46 0e       	add	r4, r22
     694:	57 1e       	adc	r5, r23
     696:	68 1e       	adc	r6, r24
     698:	79 1e       	adc	r7, r25
    B3 = ((((long)bmp_180.calib_coeffs.AC1 * 4 + X3) << bmp_180.mode) + 2) / 4;
     69a:	c4 0c       	add	r12, r4
     69c:	d5 1c       	adc	r13, r5
     69e:	e6 1c       	adc	r14, r6
     6a0:	f7 1c       	adc	r15, r7
     6a2:	03 2c       	mov	r0, r3
     6a4:	04 c0       	rjmp	.+8      	; 0x6ae <calculate_pressure+0x180>
     6a6:	cc 0c       	add	r12, r12
     6a8:	dd 1c       	adc	r13, r13
     6aa:	ee 1c       	adc	r14, r14
     6ac:	ff 1c       	adc	r15, r15
     6ae:	0a 94       	dec	r0
     6b0:	d2 f7       	brpl	.-12     	; 0x6a6 <calculate_pressure+0x178>
     6b2:	92 e0       	ldi	r25, 0x02	; 2
     6b4:	c9 0e       	add	r12, r25
     6b6:	d1 1c       	adc	r13, r1
     6b8:	e1 1c       	adc	r14, r1
     6ba:	f1 1c       	adc	r15, r1
     6bc:	c7 01       	movw	r24, r14
     6be:	b6 01       	movw	r22, r12
     6c0:	24 e0       	ldi	r18, 0x04	; 4
     6c2:	30 e0       	ldi	r19, 0x00	; 0
     6c4:	40 e0       	ldi	r20, 0x00	; 0
     6c6:	50 e0       	ldi	r21, 0x00	; 0
     6c8:	0e 94 c5 10 	call	0x218a	; 0x218a <__divmodsi4>
    X1 = bmp_180.calib_coeffs.AC3 * B6 >> 13;
    X2 = (bmp_180.calib_coeffs.B1 * (B6 * B6 >> 12)) >> 16;
    X3 = ((X1 + X2) + 2) >> 2;
    B4 = bmp_180.calib_coeffs.AC4 * (unsigned long) (X3 + 32768) >> 15;
    B7 = ((unsigned long) UP - B3) * (50000UL >> bmp_180.mode);
     6cc:	8d 81       	ldd	r24, Y+5	; 0x05
     6ce:	9e 81       	ldd	r25, Y+6	; 0x06
     6d0:	af 81       	ldd	r26, Y+7	; 0x07
     6d2:	b8 85       	ldd	r27, Y+8	; 0x08
     6d4:	82 1b       	sub	r24, r18
     6d6:	93 0b       	sbc	r25, r19
     6d8:	a4 0b       	sbc	r26, r20
     6da:	b5 0b       	sbc	r27, r21
     6dc:	8d 83       	std	Y+5, r24	; 0x05
     6de:	9e 83       	std	Y+6, r25	; 0x06
     6e0:	af 83       	std	Y+7, r26	; 0x07
     6e2:	b8 87       	std	Y+8, r27	; 0x08
     6e4:	60 e5       	ldi	r22, 0x50	; 80
     6e6:	73 ec       	ldi	r23, 0xC3	; 195
     6e8:	80 e0       	ldi	r24, 0x00	; 0
     6ea:	90 e0       	ldi	r25, 0x00	; 0
     6ec:	04 c0       	rjmp	.+8      	; 0x6f6 <calculate_pressure+0x1c8>
     6ee:	96 95       	lsr	r25
     6f0:	87 95       	ror	r24
     6f2:	77 95       	ror	r23
     6f4:	67 95       	ror	r22
     6f6:	3a 94       	dec	r3
     6f8:	d2 f7       	brpl	.-12     	; 0x6ee <calculate_pressure+0x1c0>
     6fa:	2d 81       	ldd	r18, Y+5	; 0x05
     6fc:	3e 81       	ldd	r19, Y+6	; 0x06
     6fe:	4f 81       	ldd	r20, Y+7	; 0x07
     700:	58 85       	ldd	r21, Y+8	; 0x08
     702:	0e 94 7f 10 	call	0x20fe	; 0x20fe <__mulsi3>
    if (B7 < 0x80000000UL)
     706:	97 fd       	sbrc	r25, 7
     708:	0d c0       	rjmp	.+26     	; 0x724 <calculate_pressure+0x1f6>
        _pressure = (B7 * 2) / B4;
     70a:	66 0f       	add	r22, r22
     70c:	77 1f       	adc	r23, r23
     70e:	88 1f       	adc	r24, r24
     710:	99 1f       	adc	r25, r25
     712:	29 81       	ldd	r18, Y+1	; 0x01
     714:	3a 81       	ldd	r19, Y+2	; 0x02
     716:	4b 81       	ldd	r20, Y+3	; 0x03
     718:	5c 81       	ldd	r21, Y+4	; 0x04
     71a:	0e 94 a3 10 	call	0x2146	; 0x2146 <__udivmodsi4>
     71e:	49 01       	movw	r8, r18
     720:	5a 01       	movw	r10, r20
     722:	0c c0       	rjmp	.+24     	; 0x73c <calculate_pressure+0x20e>
    else
        _pressure = (B7 / B4) * 2;
     724:	29 81       	ldd	r18, Y+1	; 0x01
     726:	3a 81       	ldd	r19, Y+2	; 0x02
     728:	4b 81       	ldd	r20, Y+3	; 0x03
     72a:	5c 81       	ldd	r21, Y+4	; 0x04
     72c:	0e 94 a3 10 	call	0x2146	; 0x2146 <__udivmodsi4>
     730:	49 01       	movw	r8, r18
     732:	5a 01       	movw	r10, r20
     734:	88 0c       	add	r8, r8
     736:	99 1c       	adc	r9, r9
     738:	aa 1c       	adc	r10, r10
     73a:	bb 1c       	adc	r11, r11
    X1 = (_pressure >> 8) * (_pressure >> 8);
     73c:	99 27       	eor	r25, r25
     73e:	b7 fc       	sbrc	r11, 7
     740:	9a 95       	dec	r25
     742:	8b 2d       	mov	r24, r11
     744:	7a 2d       	mov	r23, r10
     746:	69 2d       	mov	r22, r9
     748:	9b 01       	movw	r18, r22
     74a:	ac 01       	movw	r20, r24
     74c:	0e 94 7f 10 	call	0x20fe	; 0x20fe <__mulsi3>
     750:	9b 01       	movw	r18, r22
     752:	ac 01       	movw	r20, r24
    X1 = (X1 * 3038) >> 16;
     754:	ae ed       	ldi	r26, 0xDE	; 222
     756:	bb e0       	ldi	r27, 0x0B	; 11
     758:	0e 94 e4 10 	call	0x21c8	; 0x21c8 <__muluhisi3>
     75c:	6c 01       	movw	r12, r24
     75e:	ff 24       	eor	r15, r15
     760:	d7 fc       	sbrc	r13, 7
     762:	f0 94       	com	r15
     764:	ef 2c       	mov	r14, r15
    X2 = (-7357 * _pressure) >> 16;
     766:	a3 e4       	ldi	r26, 0x43	; 67
     768:	b3 ee       	ldi	r27, 0xE3	; 227
     76a:	a5 01       	movw	r20, r10
     76c:	94 01       	movw	r18, r8
     76e:	0e 94 f2 10 	call	0x21e4	; 0x21e4 <__mulohisi3>
     772:	bb 27       	eor	r27, r27
     774:	97 fd       	sbrc	r25, 7
     776:	b0 95       	com	r27
     778:	ab 2f       	mov	r26, r27
    bmp_180.pressure = _pressure + ((X1 + X2 + 3791) >> 4);
     77a:	c8 0e       	add	r12, r24
     77c:	d9 1e       	adc	r13, r25
     77e:	ea 1e       	adc	r14, r26
     780:	fb 1e       	adc	r15, r27
     782:	9f ec       	ldi	r25, 0xCF	; 207
     784:	c9 0e       	add	r12, r25
     786:	9e e0       	ldi	r25, 0x0E	; 14
     788:	d9 1e       	adc	r13, r25
     78a:	e1 1c       	adc	r14, r1
     78c:	f1 1c       	adc	r15, r1
     78e:	64 e0       	ldi	r22, 0x04	; 4
     790:	f5 94       	asr	r15
     792:	e7 94       	ror	r14
     794:	d7 94       	ror	r13
     796:	c7 94       	ror	r12
     798:	6a 95       	dec	r22
     79a:	d1 f7       	brne	.-12     	; 0x790 <calculate_pressure+0x262>
     79c:	c8 0c       	add	r12, r8
     79e:	d9 1c       	adc	r13, r9
     7a0:	ea 1c       	adc	r14, r10
     7a2:	fb 1c       	adc	r15, r11
     7a4:	c0 92 fe 02 	sts	0x02FE, r12
     7a8:	d0 92 ff 02 	sts	0x02FF, r13
     7ac:	e0 92 00 03 	sts	0x0300, r14
     7b0:	f0 92 01 03 	sts	0x0301, r15
}
     7b4:	28 96       	adiw	r28, 0x08	; 8
     7b6:	0f b6       	in	r0, 0x3f	; 63
     7b8:	f8 94       	cli
     7ba:	de bf       	out	0x3e, r29	; 62
     7bc:	0f be       	out	0x3f, r0	; 63
     7be:	cd bf       	out	0x3d, r28	; 61
     7c0:	df 91       	pop	r29
     7c2:	cf 91       	pop	r28
     7c4:	1f 91       	pop	r17
     7c6:	0f 91       	pop	r16
     7c8:	ff 90       	pop	r15
     7ca:	ef 90       	pop	r14
     7cc:	df 90       	pop	r13
     7ce:	cf 90       	pop	r12
     7d0:	bf 90       	pop	r11
     7d2:	af 90       	pop	r10
     7d4:	9f 90       	pop	r9
     7d6:	8f 90       	pop	r8
     7d8:	7f 90       	pop	r7
     7da:	6f 90       	pop	r6
     7dc:	5f 90       	pop	r5
     7de:	4f 90       	pop	r4
     7e0:	3f 90       	pop	r3
     7e2:	08 95       	ret

000007e4 <read_coeffs>:
    
    UP = ((unsigned long) msb << 16 | (unsigned long) lsb << 8 | (unsigned long) xlsb) >> (8 - bmp_180.mode);
    return (long) UP;
}

void read_coeffs() {
     7e4:	df 92       	push	r13
     7e6:	ef 92       	push	r14
     7e8:	ff 92       	push	r15
     7ea:	0f 93       	push	r16
     7ec:	1f 93       	push	r17
     7ee:	cf 93       	push	r28
     7f0:	df 93       	push	r29
     7f2:	cd b7       	in	r28, 0x3d	; 61
     7f4:	de b7       	in	r29, 0x3e	; 62
     7f6:	66 97       	sbiw	r28, 0x16	; 22
     7f8:	0f b6       	in	r0, 0x3f	; 63
     7fa:	f8 94       	cli
     7fc:	de bf       	out	0x3e, r29	; 62
     7fe:	0f be       	out	0x3f, r0	; 63
     800:	cd bf       	out	0x3d, r28	; 61
     802:	04 e1       	ldi	r16, 0x14	; 20
     804:	11 e0       	ldi	r17, 0x01	; 1
     806:	ce 01       	movw	r24, r28
     808:	01 96       	adiw	r24, 0x01	; 1
     80a:	7c 01       	movw	r14, r24
    
    uint16_t coeffs[11];
    
    for (short i = 0; i < 11; i++) {
        start_transmission();
     80c:	0e 94 19 05 	call	0xa32	; 0xa32 <start_transmission>
        send_addr(bmp180_write_addr);
     810:	8e ee       	ldi	r24, 0xEE	; 238
     812:	0e 94 49 05 	call	0xa92	; 0xa92 <send_addr>
        send_data((bmp180_coeff_addr[i] & 0xFF00) >> 8);
     816:	f8 01       	movw	r30, r16
     818:	d0 80       	ld	r13, Z
     81a:	81 81       	ldd	r24, Z+1	; 0x01
     81c:	0e 5f       	subi	r16, 0xFE	; 254
     81e:	1f 4f       	sbci	r17, 0xFF	; 255
     820:	0e 94 5f 05 	call	0xabe	; 0xabe <send_data>
        send_data(bmp180_coeff_addr[i] & 0x00FF);
     824:	8d 2d       	mov	r24, r13
     826:	0e 94 5f 05 	call	0xabe	; 0xabe <send_data>
        restart();
     82a:	0e 94 38 05 	call	0xa70	; 0xa70 <restart>
        send_addr(bmp180_read_addr);
     82e:	8f ee       	ldi	r24, 0xEF	; 239
     830:	0e 94 49 05 	call	0xa92	; 0xa92 <send_addr>
        coeffs[i] = read_data(1) << 8;
     834:	81 e0       	ldi	r24, 0x01	; 1
     836:	90 e0       	ldi	r25, 0x00	; 0
     838:	0e 94 2a 05 	call	0xa54	; 0xa54 <read_data>
     83c:	d8 2e       	mov	r13, r24
        coeffs[i] |= read_data(0);
     83e:	80 e0       	ldi	r24, 0x00	; 0
     840:	90 e0       	ldi	r25, 0x00	; 0
     842:	0e 94 2a 05 	call	0xa54	; 0xa54 <read_data>
        send_addr(bmp180_write_addr);
        send_data((bmp180_coeff_addr[i] & 0xFF00) >> 8);
        send_data(bmp180_coeff_addr[i] & 0x00FF);
        restart();
        send_addr(bmp180_read_addr);
        coeffs[i] = read_data(1) << 8;
     846:	2d 2d       	mov	r18, r13
     848:	30 e0       	ldi	r19, 0x00	; 0
     84a:	32 2f       	mov	r19, r18
     84c:	22 27       	eor	r18, r18
        coeffs[i] |= read_data(0);
     84e:	28 2b       	or	r18, r24
     850:	f7 01       	movw	r30, r14
     852:	21 93       	st	Z+, r18
     854:	31 93       	st	Z+, r19
     856:	7f 01       	movw	r14, r30
        end_transmission();
     858:	0e 94 26 05 	call	0xa4c	; 0xa4c <end_transmission>
     85c:	8f ec       	ldi	r24, 0xCF	; 207
     85e:	97 e0       	ldi	r25, 0x07	; 7
     860:	01 97       	sbiw	r24, 0x01	; 1
     862:	f1 f7       	brne	.-4      	; 0x860 <read_coeffs+0x7c>
     864:	00 c0       	rjmp	.+0      	; 0x866 <read_coeffs+0x82>
     866:	00 00       	nop

void read_coeffs() {
    
    uint16_t coeffs[11];
    
    for (short i = 0; i < 11; i++) {
     868:	91 e0       	ldi	r25, 0x01	; 1
     86a:	0a 32       	cpi	r16, 0x2A	; 42
     86c:	19 07       	cpc	r17, r25
     86e:	71 f6       	brne	.-100    	; 0x80c <read_coeffs+0x28>
        coeffs[i] |= read_data(0);
        end_transmission();
        _delay_ms(1);
    }
    
    bmp_180.calib_coeffs.AC1 = (short) coeffs[0];
     870:	89 81       	ldd	r24, Y+1	; 0x01
     872:	9a 81       	ldd	r25, Y+2	; 0x02
     874:	90 93 07 03 	sts	0x0307, r25
     878:	80 93 06 03 	sts	0x0306, r24
    bmp_180.calib_coeffs.AC2 = (short) coeffs[1];
     87c:	8b 81       	ldd	r24, Y+3	; 0x03
     87e:	9c 81       	ldd	r25, Y+4	; 0x04
     880:	90 93 09 03 	sts	0x0309, r25
     884:	80 93 08 03 	sts	0x0308, r24
    bmp_180.calib_coeffs.AC3 = (short) coeffs[2];
     888:	8d 81       	ldd	r24, Y+5	; 0x05
     88a:	9e 81       	ldd	r25, Y+6	; 0x06
     88c:	90 93 0b 03 	sts	0x030B, r25
     890:	80 93 0a 03 	sts	0x030A, r24
    bmp_180.calib_coeffs.AC4 = (uint16_t) coeffs[3];
     894:	8f 81       	ldd	r24, Y+7	; 0x07
     896:	98 85       	ldd	r25, Y+8	; 0x08
     898:	90 93 0d 03 	sts	0x030D, r25
     89c:	80 93 0c 03 	sts	0x030C, r24
    bmp_180.calib_coeffs.AC5 = (uint16_t) coeffs[4];
     8a0:	89 85       	ldd	r24, Y+9	; 0x09
     8a2:	9a 85       	ldd	r25, Y+10	; 0x0a
     8a4:	90 93 0f 03 	sts	0x030F, r25
     8a8:	80 93 0e 03 	sts	0x030E, r24
    bmp_180.calib_coeffs.AC6 = (uint16_t) coeffs[5];
     8ac:	8b 85       	ldd	r24, Y+11	; 0x0b
     8ae:	9c 85       	ldd	r25, Y+12	; 0x0c
     8b0:	90 93 11 03 	sts	0x0311, r25
     8b4:	80 93 10 03 	sts	0x0310, r24
    bmp_180.calib_coeffs.B1 = (short) coeffs[6];
     8b8:	8d 85       	ldd	r24, Y+13	; 0x0d
     8ba:	9e 85       	ldd	r25, Y+14	; 0x0e
     8bc:	90 93 13 03 	sts	0x0313, r25
     8c0:	80 93 12 03 	sts	0x0312, r24
    bmp_180.calib_coeffs.B2 = (short) coeffs[7];
     8c4:	8f 85       	ldd	r24, Y+15	; 0x0f
     8c6:	98 89       	ldd	r25, Y+16	; 0x10
     8c8:	90 93 15 03 	sts	0x0315, r25
     8cc:	80 93 14 03 	sts	0x0314, r24
    bmp_180.calib_coeffs.MB = (short) coeffs[8];
     8d0:	89 89       	ldd	r24, Y+17	; 0x11
     8d2:	9a 89       	ldd	r25, Y+18	; 0x12
     8d4:	90 93 1b 03 	sts	0x031B, r25
     8d8:	80 93 1a 03 	sts	0x031A, r24
    bmp_180.calib_coeffs.MC = (short) coeffs[9];
     8dc:	8b 89       	ldd	r24, Y+19	; 0x13
     8de:	9c 89       	ldd	r25, Y+20	; 0x14
     8e0:	90 93 1d 03 	sts	0x031D, r25
     8e4:	80 93 1c 03 	sts	0x031C, r24
    bmp_180.calib_coeffs.MD = (short) coeffs[10];
     8e8:	8d 89       	ldd	r24, Y+21	; 0x15
     8ea:	9e 89       	ldd	r25, Y+22	; 0x16
     8ec:	90 93 1f 03 	sts	0x031F, r25
     8f0:	80 93 1e 03 	sts	0x031E, r24
    
}
     8f4:	66 96       	adiw	r28, 0x16	; 22
     8f6:	0f b6       	in	r0, 0x3f	; 63
     8f8:	f8 94       	cli
     8fa:	de bf       	out	0x3e, r29	; 62
     8fc:	0f be       	out	0x3f, r0	; 63
     8fe:	cd bf       	out	0x3d, r28	; 61
     900:	df 91       	pop	r29
     902:	cf 91       	pop	r28
     904:	1f 91       	pop	r17
     906:	0f 91       	pop	r16
     908:	ff 90       	pop	r15
     90a:	ef 90       	pop	r14
     90c:	df 90       	pop	r13
     90e:	08 95       	ret

00000910 <init_sensor>:
    0xAAAB, 0xACAD, 0xAEAF, 0xB0B1, 0xB2B3,
    0xB4B5, 0xB6B7, 0xB8B9, 0xBABB, 0xBCBD,
    0xBEBF
};

void init_sensor(short mode) {
     910:	cf 93       	push	r28
     912:	df 93       	push	r29
     914:	ec 01       	movw	r28, r24
    init_twi();
     916:	0e 94 13 05 	call	0xa26	; 0xa26 <init_twi>
    read_coeffs();
     91a:	0e 94 f2 03 	call	0x7e4	; 0x7e4 <read_coeffs>
    bmp_180.mode = mode;
     91e:	d0 93 f1 02 	sts	0x02F1, r29
     922:	c0 93 f0 02 	sts	0x02F0, r28
}
     926:	df 91       	pop	r29
     928:	cf 91       	pop	r28
     92a:	08 95       	ret

0000092c <calculate>:
    bmp_180.calib_coeffs.MD = (short) coeffs[10];
    
}

void calculate() {
    calculate_temperature();
     92c:	0e 94 84 01 	call	0x308	; 0x308 <calculate_temperature>
    calculate_pressure();
     930:	0e 94 97 02 	call	0x52e	; 0x52e <calculate_pressure>
    calculate_altitude();
     934:	0c 94 1b 01 	jmp	0x236	; 0x236 <calculate_altitude>

00000938 <get_temperature>:
}

float get_temperature() {
    return (float) bmp_180.temperature / 10;
     938:	60 91 fa 02 	lds	r22, 0x02FA
     93c:	70 91 fb 02 	lds	r23, 0x02FB
     940:	80 91 fc 02 	lds	r24, 0x02FC
     944:	90 91 fd 02 	lds	r25, 0x02FD
     948:	0e 94 2b 0e 	call	0x1c56	; 0x1c56 <__floatsisf>
     94c:	20 e0       	ldi	r18, 0x00	; 0
     94e:	30 e0       	ldi	r19, 0x00	; 0
     950:	40 e2       	ldi	r20, 0x20	; 32
     952:	51 e4       	ldi	r21, 0x41	; 65
     954:	0e 94 90 0d 	call	0x1b20	; 0x1b20 <__divsf3>
}
     958:	08 95       	ret

0000095a <init_wifi_module>:
#include "uart.h"


short init_wifi_module(void) {
    
    uart_init(9600);
     95a:	80 e8       	ldi	r24, 0x80	; 128
     95c:	95 e2       	ldi	r25, 0x25	; 37
     95e:	0e 94 ef 08 	call	0x11de	; 0x11de <uart_init>
     962:	2f ef       	ldi	r18, 0xFF	; 255
     964:	83 e2       	ldi	r24, 0x23	; 35
     966:	94 ef       	ldi	r25, 0xF4	; 244
     968:	21 50       	subi	r18, 0x01	; 1
     96a:	80 40       	sbci	r24, 0x00	; 0
     96c:	90 40       	sbci	r25, 0x00	; 0
     96e:	e1 f7       	brne	.-8      	; 0x968 <init_wifi_module+0xe>
     970:	00 c0       	rjmp	.+0      	; 0x972 <init_wifi_module+0x18>
     972:	00 00       	nop
    _delay_ms(10000);
    
    
    printf(TEST_MODULE);
     974:	8a e3       	ldi	r24, 0x3A	; 58
     976:	91 e0       	ldi	r25, 0x01	; 1
     978:	0e 94 cd 13 	call	0x279a	; 0x279a <puts>
    uart_getall("OK");
     97c:	8e e3       	ldi	r24, 0x3E	; 62
     97e:	91 e0       	ldi	r25, 0x01	; 1
     980:	0e 94 36 09 	call	0x126c	; 0x126c <uart_getall>
    
    return 1;
}
     984:	81 e0       	ldi	r24, 0x01	; 1
     986:	90 e0       	ldi	r25, 0x00	; 0
     988:	08 95       	ret

0000098a <connect_wifi>:

short connect_wifi(unsigned char *ssid_name, unsigned char *ssid_password) {
     98a:	0f 93       	push	r16
     98c:	1f 93       	push	r17
     98e:	cf 93       	push	r28
     990:	df 93       	push	r29
     992:	00 d0       	rcall	.+0      	; 0x994 <connect_wifi+0xa>
     994:	cd b7       	in	r28, 0x3d	; 61
     996:	de b7       	in	r29, 0x3e	; 62
     998:	18 2f       	mov	r17, r24
     99a:	09 2f       	mov	r16, r25
    
    
    printf(CW_MODE, 1);
     99c:	1f 92       	push	r1
     99e:	81 e0       	ldi	r24, 0x01	; 1
     9a0:	8f 93       	push	r24
     9a2:	21 e4       	ldi	r18, 0x41	; 65
     9a4:	31 e0       	ldi	r19, 0x01	; 1
     9a6:	3f 93       	push	r19
     9a8:	2f 93       	push	r18
     9aa:	69 83       	std	Y+1, r22	; 0x01
     9ac:	7a 83       	std	Y+2, r23	; 0x02
     9ae:	0e 94 b9 13 	call	0x2772	; 0x2772 <printf>
    uart_getall("OK");
     9b2:	8e e3       	ldi	r24, 0x3E	; 62
     9b4:	91 e0       	ldi	r25, 0x01	; 1
     9b6:	0e 94 36 09 	call	0x126c	; 0x126c <uart_getall>
    
    
    printf(CIP_MODE, 0);
     9ba:	1f 92       	push	r1
     9bc:	1f 92       	push	r1
     9be:	20 e5       	ldi	r18, 0x50	; 80
     9c0:	31 e0       	ldi	r19, 0x01	; 1
     9c2:	3f 93       	push	r19
     9c4:	2f 93       	push	r18
     9c6:	0e 94 b9 13 	call	0x2772	; 0x2772 <printf>
    uart_getall("OK");
     9ca:	8e e3       	ldi	r24, 0x3E	; 62
     9cc:	91 e0       	ldi	r25, 0x01	; 1
     9ce:	0e 94 36 09 	call	0x126c	; 0x126c <uart_getall>
    
    
    printf(CIP_MUX, 0);
     9d2:	1f 92       	push	r1
     9d4:	1f 92       	push	r1
     9d6:	20 e6       	ldi	r18, 0x60	; 96
     9d8:	31 e0       	ldi	r19, 0x01	; 1
     9da:	3f 93       	push	r19
     9dc:	2f 93       	push	r18
     9de:	0e 94 b9 13 	call	0x2772	; 0x2772 <printf>
    uart_getall("OK");
     9e2:	8e e3       	ldi	r24, 0x3E	; 62
     9e4:	91 e0       	ldi	r25, 0x01	; 1
     9e6:	0e 94 36 09 	call	0x126c	; 0x126c <uart_getall>
    
    
    printf(WIFI_CONNECT, ssid_name, ssid_password);
     9ea:	7a 81       	ldd	r23, Y+2	; 0x02
     9ec:	7f 93       	push	r23
     9ee:	69 81       	ldd	r22, Y+1	; 0x01
     9f0:	6f 93       	push	r22
     9f2:	0f 93       	push	r16
     9f4:	1f 93       	push	r17
     9f6:	8f e6       	ldi	r24, 0x6F	; 111
     9f8:	91 e0       	ldi	r25, 0x01	; 1
     9fa:	9f 93       	push	r25
     9fc:	8f 93       	push	r24
     9fe:	0e 94 b9 13 	call	0x2772	; 0x2772 <printf>
    uart_getall("OK");
     a02:	8e e3       	ldi	r24, 0x3E	; 62
     a04:	91 e0       	ldi	r25, 0x01	; 1
     a06:	0e 94 36 09 	call	0x126c	; 0x126c <uart_getall>
    
    
    return 1;
     a0a:	0f b6       	in	r0, 0x3f	; 63
     a0c:	f8 94       	cli
     a0e:	de bf       	out	0x3e, r29	; 62
     a10:	0f be       	out	0x3f, r0	; 63
     a12:	cd bf       	out	0x3d, r28	; 61
}
     a14:	81 e0       	ldi	r24, 0x01	; 1
     a16:	90 e0       	ldi	r25, 0x00	; 0
     a18:	0f 90       	pop	r0
     a1a:	0f 90       	pop	r0
     a1c:	df 91       	pop	r29
     a1e:	cf 91       	pop	r28
     a20:	1f 91       	pop	r17
     a22:	0f 91       	pop	r16
     a24:	08 95       	ret

00000a26 <init_twi>:

void init_twi() {
    
    // SCL Freq = CPU_CLK / (16 + 2 x (TWBR).(PrescalerValue))
    // TWI clock frequency set 100.00kHz to work @8MHz Cpu Frequency
    TWSR = 0x00; // Prescaler 1
     a26:	10 92 b9 00 	sts	0x00B9, r1
    TWBR = 0x32; // Decimal 32
     a2a:	82 e3       	ldi	r24, 0x32	; 50
     a2c:	80 93 b8 00 	sts	0x00B8, r24
     a30:	08 95       	ret

00000a32 <start_transmission>:
}

void start_transmission() {
    TWCR = (1<<TWINT) | (1<<TWSTA) | (1<<TWEN);
     a32:	84 ea       	ldi	r24, 0xA4	; 164
     a34:	80 93 bc 00 	sts	0x00BC, r24
    
    if (i2cdebug) {
        printf("[Info]\tStart condition send & waiting for ack... \n");
    }
    
    while(!(TWCR & (1<<TWINT)));
     a38:	80 91 bc 00 	lds	r24, 0x00BC
     a3c:	87 ff       	sbrs	r24, 7
     a3e:	fc cf       	rjmp	.-8      	; 0xa38 <start_transmission+0x6>
    while((TWSR & 0xF8) != TWI_START_SENT);
     a40:	80 91 b9 00 	lds	r24, 0x00B9
     a44:	88 7f       	andi	r24, 0xF8	; 248
     a46:	88 30       	cpi	r24, 0x08	; 8
     a48:	d9 f7       	brne	.-10     	; 0xa40 <start_transmission+0xe>
    
    if (i2cdebug) {
        printf("[Success]\tAck has been received.\n");
    }
    
}
     a4a:	08 95       	ret

00000a4c <end_transmission>:

void end_transmission() {
    TWCR = (1<<TWINT)|(1<<TWEN)|(1<<TWSTO);
     a4c:	84 e9       	ldi	r24, 0x94	; 148
     a4e:	80 93 bc 00 	sts	0x00BC, r24
     a52:	08 95       	ret

00000a54 <read_data>:
uint8_t read_data(short ack) {
    if (i2cdebug) {
        printf("[Info]\tReading data...\n");
    }
    
    if (!ack)
     a54:	89 2b       	or	r24, r25
     a56:	11 f4       	brne	.+4      	; 0xa5c <read_data+0x8>
        TWCR = (1<<TWINT) | (1<<TWEN);
     a58:	84 e8       	ldi	r24, 0x84	; 132
     a5a:	01 c0       	rjmp	.+2      	; 0xa5e <read_data+0xa>
    else
        TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWEA);
     a5c:	84 ec       	ldi	r24, 0xC4	; 196
     a5e:	80 93 bc 00 	sts	0x00BC, r24
    
    while(!(TWCR & (1<<TWINT)));
     a62:	80 91 bc 00 	lds	r24, 0x00BC
     a66:	87 ff       	sbrs	r24, 7
     a68:	fc cf       	rjmp	.-8      	; 0xa62 <read_data+0xe>
    
    if (i2cdebug) {
        printf("[Success]\tData (%#02x) has been read successfuly.\n", TWDR);
    }
    
    return TWDR;
     a6a:	80 91 bb 00 	lds	r24, 0x00BB
    
}
     a6e:	08 95       	ret

00000a70 <restart>:

void restart(void)
{
    // Clear TWI interrupt flag, Put start condition on SDA, Enable TWI
    TWCR= (1<<TWINT)|(1<<TWSTA)|(1<<TWEN);
     a70:	84 ea       	ldi	r24, 0xA4	; 164
     a72:	80 93 bc 00 	sts	0x00BC, r24
    while(!(TWCR & (1<<TWINT))); // wait till restart condition is transmitted
     a76:	80 91 bc 00 	lds	r24, 0x00BC
     a7a:	87 ff       	sbrs	r24, 7
     a7c:	fc cf       	rjmp	.-8      	; 0xa76 <restart+0x6>
    while((TWSR & 0xF8)!= TWI_R_START_SENT); // Check for the acknoledgement
     a7e:	80 91 b9 00 	lds	r24, 0x00B9
     a82:	88 7f       	andi	r24, 0xF8	; 248
     a84:	80 31       	cpi	r24, 0x10	; 16
     a86:	d9 f7       	brne	.-10     	; 0xa7e <restart+0xe>
}
     a88:	08 95       	ret

00000a8a <terminate>:


void terminate() {
    printf("[Error]\tThere is an error occured while transmission. (NACK)\n");
     a8a:	84 e8       	ldi	r24, 0x84	; 132
     a8c:	91 e0       	ldi	r25, 0x01	; 1
     a8e:	0c 94 cd 13 	jmp	0x279a	; 0x279a <puts>

00000a92 <send_addr>:
        printf("[Info]\tTransmission has been ended.\n");
    }
}

void send_addr(uint8_t addr) {
    TWDR = addr;
     a92:	80 93 bb 00 	sts	0x00BB, r24
    TWCR = (1<<TWINT) | (1<<TWEN);
     a96:	84 e8       	ldi	r24, 0x84	; 132
     a98:	80 93 bc 00 	sts	0x00BC, r24
    
    if (i2cdebug) {
        printf("[Info]\tAddress %#02x has been sent. Waiting for ack... \n", addr);
    }
    
    while(!(TWCR & (1<<TWINT)));
     a9c:	80 91 bc 00 	lds	r24, 0x00BC
     aa0:	87 ff       	sbrs	r24, 7
     aa2:	fc cf       	rjmp	.-8      	; 0xa9c <send_addr+0xa>
    
    if (TWI_SLAVE_W_ACK != (TWSR & 0xF8) && TWI_SLAVE_R_ACK != (TWSR & 0xF8)) {
     aa4:	80 91 b9 00 	lds	r24, 0x00B9
     aa8:	88 7f       	andi	r24, 0xF8	; 248
     aaa:	88 31       	cpi	r24, 0x18	; 24
     aac:	39 f0       	breq	.+14     	; 0xabc <send_addr+0x2a>
     aae:	80 91 b9 00 	lds	r24, 0x00B9
     ab2:	88 7f       	andi	r24, 0xF8	; 248
     ab4:	80 34       	cpi	r24, 0x40	; 64
     ab6:	11 f0       	breq	.+4      	; 0xabc <send_addr+0x2a>
        terminate();
     ab8:	0c 94 45 05 	jmp	0xa8a	; 0xa8a <terminate>
     abc:	08 95       	ret

00000abe <send_data>:
    }

}

void send_data(uint8_t data) {
    TWDR = data;
     abe:	80 93 bb 00 	sts	0x00BB, r24
    
    if (i2cdebug) {
        printf("[Info]\tSending data (%#02x).\n", data);
    }
    
    TWCR = (1<<TWINT) | (1<<TWEN);
     ac2:	84 e8       	ldi	r24, 0x84	; 132
     ac4:	80 93 bc 00 	sts	0x00BC, r24
    while(!(TWCR & (1<<TWINT)));
     ac8:	80 91 bc 00 	lds	r24, 0x00BC
     acc:	87 ff       	sbrs	r24, 7
     ace:	fc cf       	rjmp	.-8      	; 0xac8 <send_data+0xa>
    
    if (i2cdebug) {
        printf("[Success]\tData sent. Waiting for ack... \n");
    }
    
    if (TWI_DATA_SENT_ACK != (TWSR & 0xF8)) {
     ad0:	80 91 b9 00 	lds	r24, 0x00B9
     ad4:	88 7f       	andi	r24, 0xF8	; 248
     ad6:	88 32       	cpi	r24, 0x28	; 40
     ad8:	11 f0       	breq	.+4      	; 0xade <send_data+0x20>
        terminate();
     ada:	0c 94 45 05 	jmp	0xa8a	; 0xa8a <terminate>
     ade:	08 95       	ret

00000ae0 <toggle_e>:

#if LCD_IO_MODE
/* toggle Enable Pin to initiate write */
static void toggle_e(void)
{
    lcd_e_high();
     ae0:	28 9a       	sbi	0x05, 0	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     ae2:	82 e0       	ldi	r24, 0x02	; 2
     ae4:	8a 95       	dec	r24
     ae6:	f1 f7       	brne	.-4      	; 0xae4 <toggle_e+0x4>
     ae8:	00 c0       	rjmp	.+0      	; 0xaea <toggle_e+0xa>
    lcd_e_delay();
    lcd_e_low();
     aea:	28 98       	cbi	0x05, 0	; 5
     aec:	08 95       	ret

00000aee <lcd_write>:
                 0: write instruction
Returns:  none
*************************************************************************/
#if LCD_IO_MODE
static void lcd_write(uint8_t data,uint8_t rs) 
{
     aee:	1f 93       	push	r17
     af0:	cf 93       	push	r28
     af2:	df 93       	push	r29
     af4:	1f 92       	push	r1
     af6:	cd b7       	in	r28, 0x3d	; 61
     af8:	de b7       	in	r29, 0x3e	; 62
    unsigned char dataBits ;


    if (rs) {        /* write data        (RS=1, RW=0) */
     afa:	66 23       	and	r22, r22
     afc:	11 f0       	breq	.+4      	; 0xb02 <lcd_write+0x14>
       lcd_rs_high();
     afe:	5f 9a       	sbi	0x0b, 7	; 11
     b00:	01 c0       	rjmp	.+2      	; 0xb04 <lcd_write+0x16>
    } else {         /* write instruction (RS=0, RW=0) */
       lcd_rs_low();
     b02:	5f 98       	cbi	0x0b, 7	; 11
    }
    lcd_rw_low();    /* RW=0  write mode      */
     b04:	5e 98       	cbi	0x0b, 6	; 11

    if ( ( &LCD_DATA0_PORT == &LCD_DATA1_PORT) && ( &LCD_DATA1_PORT == &LCD_DATA2_PORT ) && ( &LCD_DATA2_PORT == &LCD_DATA3_PORT )
      && (LCD_DATA0_PIN == 0) && (LCD_DATA1_PIN == 1) && (LCD_DATA2_PIN == 2) && (LCD_DATA3_PIN == 3) )
    {
        /* configure data pins as output */
        DDR(LCD_DATA0_PORT) |= 0x0F;
     b06:	97 b1       	in	r25, 0x07	; 7
     b08:	9f 60       	ori	r25, 0x0F	; 15
     b0a:	97 b9       	out	0x07, r25	; 7

        /* output high nibble first */
        dataBits = LCD_DATA0_PORT & 0xF0;
     b0c:	18 b1       	in	r17, 0x08	; 8
     b0e:	10 7f       	andi	r17, 0xF0	; 240
        LCD_DATA0_PORT = dataBits |((data>>4)&0x0F);
     b10:	98 2f       	mov	r25, r24
     b12:	92 95       	swap	r25
     b14:	9f 70       	andi	r25, 0x0F	; 15
     b16:	91 2b       	or	r25, r17
     b18:	98 b9       	out	0x08, r25	; 8
        lcd_e_toggle();
     b1a:	89 83       	std	Y+1, r24	; 0x01
     b1c:	0e 94 70 05 	call	0xae0	; 0xae0 <toggle_e>

        /* output low nibble */
        LCD_DATA0_PORT = dataBits | (data&0x0F);
     b20:	89 81       	ldd	r24, Y+1	; 0x01
     b22:	8f 70       	andi	r24, 0x0F	; 15
     b24:	81 2b       	or	r24, r17
     b26:	88 b9       	out	0x08, r24	; 8
        lcd_e_toggle();
     b28:	0e 94 70 05 	call	0xae0	; 0xae0 <toggle_e>

        /* all data pins high (inactive) */
        LCD_DATA0_PORT = dataBits | 0x0F;
     b2c:	1f 60       	ori	r17, 0x0F	; 15
     b2e:	18 b9       	out	0x08, r17	; 8
        LCD_DATA0_PORT |= _BV(LCD_DATA0_PIN);
        LCD_DATA1_PORT |= _BV(LCD_DATA1_PIN);
        LCD_DATA2_PORT |= _BV(LCD_DATA2_PIN);
        LCD_DATA3_PORT |= _BV(LCD_DATA3_PIN);
    }
}
     b30:	0f 90       	pop	r0
     b32:	df 91       	pop	r29
     b34:	cf 91       	pop	r28
     b36:	1f 91       	pop	r17
     b38:	08 95       	ret

00000b3a <lcd_read.constprop.0>:
    
    
    if (rs)
        lcd_rs_high();                       /* RS=1: read data      */
    else
        lcd_rs_low();                        /* RS=0: read busy flag */
     b3a:	5f 98       	cbi	0x0b, 7	; 11
    lcd_rw_high();                           /* RW=1  read mode      */
     b3c:	5e 9a       	sbi	0x0b, 6	; 11
    
    if ( ( &LCD_DATA0_PORT == &LCD_DATA1_PORT) && ( &LCD_DATA1_PORT == &LCD_DATA2_PORT ) && ( &LCD_DATA2_PORT == &LCD_DATA3_PORT )
      && ( LCD_DATA0_PIN == 0 )&& (LCD_DATA1_PIN == 1) && (LCD_DATA2_PIN == 2) && (LCD_DATA3_PIN == 3) )
    {
        DDR(LCD_DATA0_PORT) &= 0xF0;         /* configure data pins as input */
     b3e:	87 b1       	in	r24, 0x07	; 7
     b40:	80 7f       	andi	r24, 0xF0	; 240
     b42:	87 b9       	out	0x07, r24	; 7
        
        lcd_e_high();
     b44:	28 9a       	sbi	0x05, 0	; 5
     b46:	82 e0       	ldi	r24, 0x02	; 2
     b48:	8a 95       	dec	r24
     b4a:	f1 f7       	brne	.-4      	; 0xb48 <lcd_read.constprop.0+0xe>
     b4c:	00 c0       	rjmp	.+0      	; 0xb4e <lcd_read.constprop.0+0x14>
        lcd_e_delay();        
        data = PIN(LCD_DATA0_PORT) << 4;     /* read high nibble first */
     b4e:	86 b1       	in	r24, 0x06	; 6
        lcd_e_low();
     b50:	28 98       	cbi	0x05, 0	; 5
     b52:	92 e0       	ldi	r25, 0x02	; 2
     b54:	9a 95       	dec	r25
     b56:	f1 f7       	brne	.-4      	; 0xb54 <lcd_read.constprop.0+0x1a>
     b58:	00 c0       	rjmp	.+0      	; 0xb5a <lcd_read.constprop.0+0x20>
        
        lcd_e_delay();                       /* Enable 500ns low       */
        
        lcd_e_high();
     b5a:	28 9a       	sbi	0x05, 0	; 5
     b5c:	92 e0       	ldi	r25, 0x02	; 2
     b5e:	9a 95       	dec	r25
     b60:	f1 f7       	brne	.-4      	; 0xb5e <lcd_read.constprop.0+0x24>
     b62:	00 c0       	rjmp	.+0      	; 0xb64 <lcd_read.constprop.0+0x2a>
        lcd_e_delay();
        data |= PIN(LCD_DATA0_PORT)&0x0F;    /* read low nibble        */
     b64:	96 b1       	in	r25, 0x06	; 6
     b66:	9f 70       	andi	r25, 0x0F	; 15
    {
        DDR(LCD_DATA0_PORT) &= 0xF0;         /* configure data pins as input */
        
        lcd_e_high();
        lcd_e_delay();        
        data = PIN(LCD_DATA0_PORT) << 4;     /* read high nibble first */
     b68:	82 95       	swap	r24
     b6a:	80 7f       	andi	r24, 0xF0	; 240
        lcd_e_delay();                       /* Enable 500ns low       */
        
        lcd_e_high();
        lcd_e_delay();
        data |= PIN(LCD_DATA0_PORT)&0x0F;    /* read low nibble        */
        lcd_e_low();
     b6c:	28 98       	cbi	0x05, 0	; 5
        if ( PIN(LCD_DATA2_PORT) & _BV(LCD_DATA2_PIN) ) data |= 0x04;
        if ( PIN(LCD_DATA3_PORT) & _BV(LCD_DATA3_PIN) ) data |= 0x08;        
        lcd_e_low();
    }
    return data;
}
     b6e:	89 2b       	or	r24, r25
     b70:	08 95       	ret

00000b72 <lcd_waitbusy>:

{
    register uint8_t c;
    
    /* wait until busy flag is cleared */
    while ( (c=lcd_read(0)) & (1<<LCD_BUSY)) {}
     b72:	0e 94 9d 05 	call	0xb3a	; 0xb3a <lcd_read.constprop.0>
     b76:	87 fd       	sbrc	r24, 7
     b78:	fc cf       	rjmp	.-8      	; 0xb72 <lcd_waitbusy>
     b7a:	8a e0       	ldi	r24, 0x0A	; 10
     b7c:	8a 95       	dec	r24
     b7e:	f1 f7       	brne	.-4      	; 0xb7c <lcd_waitbusy+0xa>
     b80:	00 c0       	rjmp	.+0      	; 0xb82 <lcd_waitbusy+0x10>
    
    /* the address counter is updated 4us after the busy flag is cleared */
    delay(LCD_DELAY_BUSY_FLAG);

    /* now read the address counter */
    return (lcd_read(0));  // return address counter
     b82:	0c 94 9d 05 	jmp	0xb3a	; 0xb3a <lcd_read.constprop.0>

00000b86 <lcd_command>:
Send LCD controller instruction command
Input:   instruction to send to LCD controller, see HD44780 data sheet
Returns: none
*************************************************************************/
void lcd_command(uint8_t cmd)
{
     b86:	cf 93       	push	r28
     b88:	c8 2f       	mov	r28, r24
    lcd_waitbusy();
     b8a:	0e 94 b9 05 	call	0xb72	; 0xb72 <lcd_waitbusy>
    lcd_write(cmd,0);
     b8e:	60 e0       	ldi	r22, 0x00	; 0
     b90:	8c 2f       	mov	r24, r28
}
     b92:	cf 91       	pop	r28
Returns: none
*************************************************************************/
void lcd_command(uint8_t cmd)
{
    lcd_waitbusy();
    lcd_write(cmd,0);
     b94:	0c 94 77 05 	jmp	0xaee	; 0xaee <lcd_write>

00000b98 <lcd_data>:
Send data byte to LCD controller 
Input:   data to send to LCD controller, see HD44780 data sheet
Returns: none
*************************************************************************/
void lcd_data(uint8_t data)
{
     b98:	cf 93       	push	r28
     b9a:	c8 2f       	mov	r28, r24
    lcd_waitbusy();
     b9c:	0e 94 b9 05 	call	0xb72	; 0xb72 <lcd_waitbusy>
    lcd_write(data,1);
     ba0:	61 e0       	ldi	r22, 0x01	; 1
     ba2:	8c 2f       	mov	r24, r28
}
     ba4:	cf 91       	pop	r28
Returns: none
*************************************************************************/
void lcd_data(uint8_t data)
{
    lcd_waitbusy();
    lcd_write(data,1);
     ba6:	0c 94 77 05 	jmp	0xaee	; 0xaee <lcd_write>

00000baa <lcd_gotoxy>:
{
#if LCD_LINES==1
    lcd_command((1<<LCD_DDRAM)+LCD_START_LINE1+x);
#endif
#if LCD_LINES==2
    if ( y==0 ) 
     baa:	61 11       	cpse	r22, r1
     bac:	02 c0       	rjmp	.+4      	; 0xbb2 <lcd_gotoxy+0x8>
        lcd_command((1<<LCD_DDRAM)+LCD_START_LINE1+x);
     bae:	80 58       	subi	r24, 0x80	; 128
     bb0:	01 c0       	rjmp	.+2      	; 0xbb4 <lcd_gotoxy+0xa>
    else
        lcd_command((1<<LCD_DDRAM)+LCD_START_LINE2+x);
     bb2:	80 54       	subi	r24, 0x40	; 64
     bb4:	0c 94 c3 05 	jmp	0xb86	; 0xb86 <lcd_command>

00000bb8 <lcd_getxy>:

/*************************************************************************
*************************************************************************/
int lcd_getxy(void)
{
    return lcd_waitbusy();
     bb8:	0e 94 b9 05 	call	0xb72	; 0xb72 <lcd_waitbusy>
}
     bbc:	90 e0       	ldi	r25, 0x00	; 0
     bbe:	08 95       	ret

00000bc0 <lcd_clrscr>:
/*************************************************************************
Clear display and set cursor to home position
*************************************************************************/
void lcd_clrscr(void)
{
    lcd_command(1<<LCD_CLR);
     bc0:	81 e0       	ldi	r24, 0x01	; 1
     bc2:	0c 94 c3 05 	jmp	0xb86	; 0xb86 <lcd_command>

00000bc6 <lcd_home>:
/*************************************************************************
Set cursor to home position
*************************************************************************/
void lcd_home(void)
{
    lcd_command(1<<LCD_HOME);
     bc6:	82 e0       	ldi	r24, 0x02	; 2
     bc8:	0c 94 c3 05 	jmp	0xb86	; 0xb86 <lcd_command>

00000bcc <lcd_putc>:
Display character at current cursor position 
Input:    character to be displayed                                       
Returns:  none
*************************************************************************/
void lcd_putc(char c)
{
     bcc:	cf 93       	push	r28
     bce:	c8 2f       	mov	r28, r24
    uint8_t pos;


    pos = lcd_waitbusy();   // read busy-flag and address counter
     bd0:	0e 94 b9 05 	call	0xb72	; 0xb72 <lcd_waitbusy>
    if (c=='\n')
     bd4:	ca 30       	cpi	r28, 0x0A	; 10
     bd6:	49 f4       	brne	.+18     	; 0xbea <lcd_putc+0x1e>

#if LCD_LINES==1
    addressCounter = 0;
#endif
#if LCD_LINES==2
    if ( pos < (LCD_START_LINE2) )
     bd8:	80 34       	cpi	r24, 0x40	; 64
     bda:	10 f4       	brcc	.+4      	; 0xbe0 <lcd_putc+0x14>
        addressCounter = LCD_START_LINE2;
     bdc:	80 e4       	ldi	r24, 0x40	; 64
     bde:	01 c0       	rjmp	.+2      	; 0xbe2 <lcd_putc+0x16>
    else
        addressCounter = LCD_START_LINE1;
     be0:	80 e0       	ldi	r24, 0x00	; 0
        addressCounter = LCD_START_LINE4;
    else 
        addressCounter = LCD_START_LINE1;
#endif
#endif
    lcd_command((1<<LCD_DDRAM)+addressCounter);
     be2:	80 58       	subi	r24, 0x80	; 128
        lcd_waitbusy();
#endif
        lcd_write(c, 1);
    }

}/* lcd_putc */
     be4:	cf 91       	pop	r28
        addressCounter = LCD_START_LINE4;
    else 
        addressCounter = LCD_START_LINE1;
#endif
#endif
    lcd_command((1<<LCD_DDRAM)+addressCounter);
     be6:	0c 94 c3 05 	jmp	0xb86	; 0xb86 <lcd_command>
            lcd_write((1<<LCD_DDRAM)+LCD_START_LINE1,0);
        }
#endif
        lcd_waitbusy();
#endif
        lcd_write(c, 1);
     bea:	61 e0       	ldi	r22, 0x01	; 1
     bec:	8c 2f       	mov	r24, r28
    }

}/* lcd_putc */
     bee:	cf 91       	pop	r28
            lcd_write((1<<LCD_DDRAM)+LCD_START_LINE1,0);
        }
#endif
        lcd_waitbusy();
#endif
        lcd_write(c, 1);
     bf0:	0c 94 77 05 	jmp	0xaee	; 0xaee <lcd_write>

00000bf4 <lcd_puts>:
Input:    string to be displayed
Returns:  none
*************************************************************************/
void lcd_puts(const char *s)
/* print string on lcd (no auto linefeed) */
{
     bf4:	cf 93       	push	r28
     bf6:	df 93       	push	r29
     bf8:	ec 01       	movw	r28, r24
    register char c;

    while ( (c = *s++) ) {
     bfa:	89 91       	ld	r24, Y+
     bfc:	88 23       	and	r24, r24
     bfe:	19 f0       	breq	.+6      	; 0xc06 <lcd_puts+0x12>
        lcd_putc(c);
     c00:	0e 94 e6 05 	call	0xbcc	; 0xbcc <lcd_putc>
     c04:	fa cf       	rjmp	.-12     	; 0xbfa <lcd_puts+0x6>
    }

}/* lcd_puts */
     c06:	df 91       	pop	r29
     c08:	cf 91       	pop	r28
     c0a:	08 95       	ret

00000c0c <lcd_puts_p>:
Input:     string from program memory be be displayed                                        
Returns:   none
*************************************************************************/
void lcd_puts_p(const char *progmem_s)
/* print string from program memory on lcd (no auto linefeed) */
{
     c0c:	cf 93       	push	r28
     c0e:	df 93       	push	r29
     c10:	fc 01       	movw	r30, r24
    register char c;

    while ( (c = pgm_read_byte(progmem_s++)) ) {
     c12:	84 91       	lpm	r24, Z
     c14:	ef 01       	movw	r28, r30
     c16:	21 96       	adiw	r28, 0x01	; 1
     c18:	88 23       	and	r24, r24
     c1a:	21 f0       	breq	.+8      	; 0xc24 <lcd_puts_p+0x18>
        lcd_putc(c);
     c1c:	0e 94 e6 05 	call	0xbcc	; 0xbcc <lcd_putc>
     c20:	fe 01       	movw	r30, r28
     c22:	f7 cf       	rjmp	.-18     	; 0xc12 <lcd_puts_p+0x6>
    }

}/* lcd_puts_p */
     c24:	df 91       	pop	r29
     c26:	cf 91       	pop	r28
     c28:	08 95       	ret

00000c2a <lcd_init>:
                   LCD_DISP_ON_CURSOR      display on, cursor on
                   LCD_DISP_CURSOR_BLINK   display on, cursor on flashing
Returns:  none
*************************************************************************/
void lcd_init(uint8_t dispAttr)
{
     c2a:	cf 93       	push	r28
     c2c:	c8 2f       	mov	r28, r24
    }
    else if ( ( &LCD_DATA0_PORT == &LCD_DATA1_PORT) && ( &LCD_DATA1_PORT == &LCD_DATA2_PORT ) && ( &LCD_DATA2_PORT == &LCD_DATA3_PORT )
           && (LCD_DATA0_PIN == 0 ) && (LCD_DATA1_PIN == 1) && (LCD_DATA2_PIN == 2) && (LCD_DATA3_PIN == 3) )
    {
        /* configure all port bits as output (all LCD data lines on same port, but control lines on different ports) */
        DDR(LCD_DATA0_PORT) |= 0x0F;
     c2e:	97 b1       	in	r25, 0x07	; 7
     c30:	9f 60       	ori	r25, 0x0F	; 15
     c32:	97 b9       	out	0x07, r25	; 7
        DDR(LCD_RS_PORT)    |= _BV(LCD_RS_PIN);
     c34:	57 9a       	sbi	0x0a, 7	; 10
        DDR(LCD_RW_PORT)    |= _BV(LCD_RW_PIN);
     c36:	56 9a       	sbi	0x0a, 6	; 10
        DDR(LCD_E_PORT)     |= _BV(LCD_E_PIN);
     c38:	20 9a       	sbi	0x04, 0	; 4
     c3a:	8f ef       	ldi	r24, 0xFF	; 255
     c3c:	9c e7       	ldi	r25, 0x7C	; 124
     c3e:	01 97       	sbiw	r24, 0x01	; 1
     c40:	f1 f7       	brne	.-4      	; 0xc3e <lcd_init+0x14>
     c42:	00 c0       	rjmp	.+0      	; 0xc44 <lcd_init+0x1a>
     c44:	00 00       	nop
        DDR(LCD_DATA3_PORT) |= _BV(LCD_DATA3_PIN);
    }
    delay(LCD_DELAY_BOOTUP);             /* wait 16ms or more after power-on       */
    
    /* initial write to lcd is 8bit */
    LCD_DATA1_PORT |= _BV(LCD_DATA1_PIN);    // LCD_FUNCTION>>4;
     c46:	41 9a       	sbi	0x08, 1	; 8
    LCD_DATA0_PORT |= _BV(LCD_DATA0_PIN);    // LCD_FUNCTION_8BIT>>4;
     c48:	40 9a       	sbi	0x08, 0	; 8
    lcd_e_toggle();
     c4a:	0e 94 70 05 	call	0xae0	; 0xae0 <toggle_e>
     c4e:	8f e0       	ldi	r24, 0x0F	; 15
     c50:	97 e2       	ldi	r25, 0x27	; 39
     c52:	01 97       	sbiw	r24, 0x01	; 1
     c54:	f1 f7       	brne	.-4      	; 0xc52 <lcd_init+0x28>
     c56:	00 c0       	rjmp	.+0      	; 0xc58 <lcd_init+0x2e>
     c58:	00 00       	nop
    delay(LCD_DELAY_INIT);               /* delay, busy flag can't be checked here */
   
    /* repeat last command */ 
    lcd_e_toggle();      
     c5a:	0e 94 70 05 	call	0xae0	; 0xae0 <toggle_e>
     c5e:	9a ea       	ldi	r25, 0xAA	; 170
     c60:	9a 95       	dec	r25
     c62:	f1 f7       	brne	.-4      	; 0xc60 <lcd_init+0x36>
     c64:	00 c0       	rjmp	.+0      	; 0xc66 <lcd_init+0x3c>
    delay(LCD_DELAY_INIT_REP);           /* delay, busy flag can't be checked here */
    
    /* repeat last command a third time */
    lcd_e_toggle();      
     c66:	0e 94 70 05 	call	0xae0	; 0xae0 <toggle_e>
     c6a:	8a ea       	ldi	r24, 0xAA	; 170
     c6c:	8a 95       	dec	r24
     c6e:	f1 f7       	brne	.-4      	; 0xc6c <lcd_init+0x42>
     c70:	00 c0       	rjmp	.+0      	; 0xc72 <lcd_init+0x48>
    delay(LCD_DELAY_INIT_REP);           /* delay, busy flag can't be checked here */

    /* now configure for 4bit mode */
    LCD_DATA0_PORT &= ~_BV(LCD_DATA0_PIN);   // LCD_FUNCTION_4BIT_1LINE>>4
     c72:	40 98       	cbi	0x08, 0	; 8
    lcd_e_toggle();
     c74:	0e 94 70 05 	call	0xae0	; 0xae0 <toggle_e>
     c78:	9a ea       	ldi	r25, 0xAA	; 170
     c7a:	9a 95       	dec	r25
     c7c:	f1 f7       	brne	.-4      	; 0xc7a <lcd_init+0x50>
     c7e:	00 c0       	rjmp	.+0      	; 0xc80 <lcd_init+0x56>
    /* Display with KS0073 controller requires special commands for enabling 4 line mode */
	lcd_command(KS0073_EXTENDED_FUNCTION_REGISTER_ON);
	lcd_command(KS0073_4LINES_MODE);
	lcd_command(KS0073_EXTENDED_FUNCTION_REGISTER_OFF);
#else
    lcd_command(LCD_FUNCTION_DEFAULT);      /* function set: display lines  */
     c80:	88 e2       	ldi	r24, 0x28	; 40
     c82:	0e 94 c3 05 	call	0xb86	; 0xb86 <lcd_command>
#endif
    lcd_command(LCD_DISP_OFF);              /* display off                  */
     c86:	88 e0       	ldi	r24, 0x08	; 8
     c88:	0e 94 c3 05 	call	0xb86	; 0xb86 <lcd_command>
    lcd_clrscr();                           /* display clear                */ 
     c8c:	0e 94 e0 05 	call	0xbc0	; 0xbc0 <lcd_clrscr>
    lcd_command(LCD_MODE_DEFAULT);          /* set entry mode               */
     c90:	86 e0       	ldi	r24, 0x06	; 6
     c92:	0e 94 c3 05 	call	0xb86	; 0xb86 <lcd_command>
    lcd_command(dispAttr);                  /* display/cursor control       */
     c96:	8c 2f       	mov	r24, r28

}/* lcd_init */
     c98:	cf 91       	pop	r28
    lcd_command(LCD_FUNCTION_DEFAULT);      /* function set: display lines  */
#endif
    lcd_command(LCD_DISP_OFF);              /* display off                  */
    lcd_clrscr();                           /* display clear                */ 
    lcd_command(LCD_MODE_DEFAULT);          /* set entry mode               */
    lcd_command(dispAttr);                  /* display/cursor control       */
     c9a:	0c 94 c3 05 	jmp	0xb86	; 0xb86 <lcd_command>

00000c9e <__vector_9>:

FILE uart_output = FDEV_SETUP_STREAM(send_uart_char, NULL, _FDEV_SETUP_WRITE);

volatile second_ticks = 0;

ISR(TIMER2_OVF_vect) {
     c9e:	1f 92       	push	r1
     ca0:	0f 92       	push	r0
     ca2:	0f b6       	in	r0, 0x3f	; 63
     ca4:	0f 92       	push	r0
     ca6:	11 24       	eor	r1, r1
     ca8:	2f 93       	push	r18
     caa:	3f 93       	push	r19
     cac:	4f 93       	push	r20
     cae:	5f 93       	push	r21
     cb0:	6f 93       	push	r22
     cb2:	7f 93       	push	r23
     cb4:	8f 93       	push	r24
     cb6:	9f 93       	push	r25
     cb8:	af 93       	push	r26
     cba:	bf 93       	push	r27
     cbc:	ef 93       	push	r30
     cbe:	ff 93       	push	r31
    update_rtc();
     cc0:	0e 94 43 08 	call	0x1086	; 0x1086 <update_rtc>
    if (second_ticks++ == 5) {
     cc4:	80 91 e2 02 	lds	r24, 0x02E2
     cc8:	90 91 e3 02 	lds	r25, 0x02E3
     ccc:	9c 01       	movw	r18, r24
     cce:	2f 5f       	subi	r18, 0xFF	; 255
     cd0:	3f 4f       	sbci	r19, 0xFF	; 255
     cd2:	30 93 e3 02 	sts	0x02E3, r19
     cd6:	20 93 e2 02 	sts	0x02E2, r18
     cda:	05 97       	sbiw	r24, 0x05	; 5
     cdc:	21 f4       	brne	.+8      	; 0xce6 <__vector_9+0x48>
        second_ticks = 0;
     cde:	10 92 e3 02 	sts	0x02E3, r1
     ce2:	10 92 e2 02 	sts	0x02E2, r1
    }
}
     ce6:	ff 91       	pop	r31
     ce8:	ef 91       	pop	r30
     cea:	bf 91       	pop	r27
     cec:	af 91       	pop	r26
     cee:	9f 91       	pop	r25
     cf0:	8f 91       	pop	r24
     cf2:	7f 91       	pop	r23
     cf4:	6f 91       	pop	r22
     cf6:	5f 91       	pop	r21
     cf8:	4f 91       	pop	r20
     cfa:	3f 91       	pop	r19
     cfc:	2f 91       	pop	r18
     cfe:	0f 90       	pop	r0
     d00:	0f be       	out	0x3f, r0	; 63
     d02:	0f 90       	pop	r0
     d04:	1f 90       	pop	r1
     d06:	18 95       	reti

00000d08 <lcd_msg>:


void lcd_msg(unsigned char *fmt, uint8_t line, ...) {
     d08:	ff 92       	push	r15
     d0a:	0f 93       	push	r16
     d0c:	1f 93       	push	r17
     d0e:	cf 93       	push	r28
     d10:	df 93       	push	r29
     d12:	cd b7       	in	r28, 0x3d	; 61
     d14:	de b7       	in	r29, 0x3e	; 62
     d16:	2f 97       	sbiw	r28, 0x0f	; 15
     d18:	0f b6       	in	r0, 0x3f	; 63
     d1a:	f8 94       	cli
     d1c:	de bf       	out	0x3e, r29	; 62
     d1e:	0f be       	out	0x3f, r0	; 63
     d20:	cd bf       	out	0x3d, r28	; 61
     d22:	f9 8c       	ldd	r15, Y+25	; 0x19
    va_list aptr;
    unsigned char *lcd_buffer = malloc(sizeof(unsigned char *) * 20);
     d24:	88 e2       	ldi	r24, 0x28	; 40
     d26:	90 e0       	ldi	r25, 0x00	; 0
     d28:	0e 94 51 11 	call	0x22a2	; 0x22a2 <malloc>
     d2c:	8c 01       	movw	r16, r24
    
    unsigned char padding[15] = {0x20, 0x20, 0x20, 0x20, 0x20,
     d2e:	8f e0       	ldi	r24, 0x0F	; 15
     d30:	eb e2       	ldi	r30, 0x2B	; 43
     d32:	f1 e0       	ldi	r31, 0x01	; 1
     d34:	de 01       	movw	r26, r28
     d36:	11 96       	adiw	r26, 0x01	; 1
     d38:	01 90       	ld	r0, Z+
     d3a:	0d 92       	st	X+, r0
     d3c:	8a 95       	dec	r24
     d3e:	e1 f7       	brne	.-8      	; 0xd38 <lcd_msg+0x30>
                                0x20, 0x20, 0x20, 0x20, 0x20,
                                0x20, 0x20, 0x20, 0x20, '\0'};
    
    if (line < 1) line = 1;
     d40:	f1 10       	cpse	r15, r1
     d42:	02 c0       	rjmp	.+4      	; 0xd48 <lcd_msg+0x40>
     d44:	ff 24       	eor	r15, r15
     d46:	f3 94       	inc	r15
    
    va_start(aptr, fmt);
    vsprintf(lcd_buffer, fmt, aptr);
     d48:	ae 01       	movw	r20, r28
     d4a:	46 5e       	subi	r20, 0xE6	; 230
     d4c:	5f 4f       	sbci	r21, 0xFF	; 255
     d4e:	6f 89       	ldd	r22, Y+23	; 0x17
     d50:	78 8d       	ldd	r23, Y+24	; 0x18
     d52:	c8 01       	movw	r24, r16
     d54:	0e 94 35 14 	call	0x286a	; 0x286a <vsprintf>
    lcd_gotoxy(0, line - 1);
     d58:	fa 94       	dec	r15
     d5a:	6f 2d       	mov	r22, r15
     d5c:	80 e0       	ldi	r24, 0x00	; 0
     d5e:	0e 94 d5 05 	call	0xbaa	; 0xbaa <lcd_gotoxy>
    lcd_puts((unsigned char *) padding);
     d62:	ce 01       	movw	r24, r28
     d64:	01 96       	adiw	r24, 0x01	; 1
     d66:	0e 94 fa 05 	call	0xbf4	; 0xbf4 <lcd_puts>
    lcd_gotoxy(0, line - 1);
     d6a:	6f 2d       	mov	r22, r15
     d6c:	80 e0       	ldi	r24, 0x00	; 0
     d6e:	0e 94 d5 05 	call	0xbaa	; 0xbaa <lcd_gotoxy>
    lcd_puts(lcd_buffer);
     d72:	c8 01       	movw	r24, r16
     d74:	0e 94 fa 05 	call	0xbf4	; 0xbf4 <lcd_puts>
    free(lcd_buffer);
     d78:	c8 01       	movw	r24, r16
     d7a:	0e 94 e9 11 	call	0x23d2	; 0x23d2 <free>
}
     d7e:	2f 96       	adiw	r28, 0x0f	; 15
     d80:	0f b6       	in	r0, 0x3f	; 63
     d82:	f8 94       	cli
     d84:	de bf       	out	0x3e, r29	; 62
     d86:	0f be       	out	0x3f, r0	; 63
     d88:	cd bf       	out	0x3d, r28	; 61
     d8a:	df 91       	pop	r29
     d8c:	cf 91       	pop	r28
     d8e:	1f 91       	pop	r17
     d90:	0f 91       	pop	r16
     d92:	ff 90       	pop	r15
     d94:	08 95       	ret

00000d96 <update_display>:

void update_display() {
     d96:	0f 93       	push	r16
     d98:	1f 93       	push	r17
     d9a:	cf 93       	push	r28
     d9c:	df 93       	push	r29
    calculate();
     d9e:	0e 94 96 04 	call	0x92c	; 0x92c <calculate>
    lcd_clrscr();
     da2:	0e 94 e0 05 	call	0xbc0	; 0xbc0 <lcd_clrscr>
    lcd_msg("%.2f %cC %02d:%02d", 1, (float) get_temperature(), (char) 223, get_hour(), get_minute());
     da6:	0e 94 d6 08 	call	0x11ac	; 0x11ac <get_minute>
     daa:	18 2f       	mov	r17, r24
     dac:	09 2f       	mov	r16, r25
     dae:	0e 94 db 08 	call	0x11b6	; 0x11b6 <get_hour>
     db2:	ec 01       	movw	r28, r24
     db4:	0e 94 9c 04 	call	0x938	; 0x938 <get_temperature>
     db8:	0f 93       	push	r16
     dba:	1f 93       	push	r17
     dbc:	df 93       	push	r29
     dbe:	cf 93       	push	r28
     dc0:	1f 92       	push	r1
     dc2:	2f ed       	ldi	r18, 0xDF	; 223
     dc4:	2f 93       	push	r18
     dc6:	9f 93       	push	r25
     dc8:	8f 93       	push	r24
     dca:	7f 93       	push	r23
     dcc:	6f 93       	push	r22
     dce:	81 e0       	ldi	r24, 0x01	; 1
     dd0:	8f 93       	push	r24
     dd2:	81 ec       	ldi	r24, 0xC1	; 193
     dd4:	91 e0       	ldi	r25, 0x01	; 1
     dd6:	9f 93       	push	r25
     dd8:	8f 93       	push	r24
     dda:	0e 94 84 06 	call	0xd08	; 0xd08 <lcd_msg>
    lcd_msg("%02d/%02d/%02d", 2, get_day(), get_month(), get_year());
     dde:	0e 94 ea 08 	call	0x11d4	; 0x11d4 <get_year>
     de2:	18 2f       	mov	r17, r24
     de4:	09 2f       	mov	r16, r25
     de6:	0e 94 e5 08 	call	0x11ca	; 0x11ca <get_month>
     dea:	ec 01       	movw	r28, r24
     dec:	0e 94 e0 08 	call	0x11c0	; 0x11c0 <get_day>
     df0:	0f 93       	push	r16
     df2:	1f 93       	push	r17
     df4:	df 93       	push	r29
     df6:	cf 93       	push	r28
     df8:	9f 93       	push	r25
     dfa:	8f 93       	push	r24
     dfc:	82 e0       	ldi	r24, 0x02	; 2
     dfe:	8f 93       	push	r24
     e00:	84 ed       	ldi	r24, 0xD4	; 212
     e02:	91 e0       	ldi	r25, 0x01	; 1
     e04:	9f 93       	push	r25
     e06:	8f 93       	push	r24
     e08:	0e 94 84 06 	call	0xd08	; 0xd08 <lcd_msg>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     e0c:	2f ef       	ldi	r18, 0xFF	; 255
     e0e:	89 e6       	ldi	r24, 0x69	; 105
     e10:	98 e1       	ldi	r25, 0x18	; 24
     e12:	21 50       	subi	r18, 0x01	; 1
     e14:	80 40       	sbci	r24, 0x00	; 0
     e16:	90 40       	sbci	r25, 0x00	; 0
     e18:	e1 f7       	brne	.-8      	; 0xe12 <update_display+0x7c>
     e1a:	00 c0       	rjmp	.+0      	; 0xe1c <update_display+0x86>
     e1c:	00 00       	nop
     e1e:	8d b7       	in	r24, 0x3d	; 61
     e20:	9e b7       	in	r25, 0x3e	; 62
     e22:	46 96       	adiw	r24, 0x16	; 22
     e24:	0f b6       	in	r0, 0x3f	; 63
     e26:	f8 94       	cli
     e28:	9e bf       	out	0x3e, r25	; 62
     e2a:	0f be       	out	0x3f, r0	; 63
     e2c:	8d bf       	out	0x3d, r24	; 61
    _delay_ms(1000);
}
     e2e:	df 91       	pop	r29
     e30:	cf 91       	pop	r28
     e32:	1f 91       	pop	r17
     e34:	0f 91       	pop	r16
     e36:	08 95       	ret

00000e38 <system_init>:

void system_init() {
     e38:	ff 92       	push	r15
     e3a:	0f 93       	push	r16
     e3c:	1f 93       	push	r17
     e3e:	cf 93       	push	r28
     e40:	df 93       	push	r29
    lcd_init(LCD_DISP_ON);
     e42:	8c e0       	ldi	r24, 0x0C	; 12
     e44:	0e 94 15 06 	call	0xc2a	; 0xc2a <lcd_init>
    lcd_clrscr();
     e48:	0e 94 e0 05 	call	0xbc0	; 0xbc0 <lcd_clrscr>
    lcd_puts("Init System!\n");
     e4c:	83 ee       	ldi	r24, 0xE3	; 227
     e4e:	91 e0       	ldi	r25, 0x01	; 1
     e50:	0e 94 fa 05 	call	0xbf4	; 0xbf4 <lcd_puts>
    lcd_msg("Wifi: %s\n", 2, "[Init]");
     e54:	81 ef       	ldi	r24, 0xF1	; 241
     e56:	91 e0       	ldi	r25, 0x01	; 1
     e58:	9f 93       	push	r25
     e5a:	8f 93       	push	r24
     e5c:	c2 e0       	ldi	r28, 0x02	; 2
     e5e:	cf 93       	push	r28
     e60:	88 ef       	ldi	r24, 0xF8	; 248
     e62:	91 e0       	ldi	r25, 0x01	; 1
     e64:	9f 93       	push	r25
     e66:	8f 93       	push	r24
     e68:	0e 94 84 06 	call	0xd08	; 0xd08 <lcd_msg>
    if (init_wifi_module())
     e6c:	0e 94 ad 04 	call	0x95a	; 0x95a <init_wifi_module>
     e70:	0f 90       	pop	r0
     e72:	0f 90       	pop	r0
     e74:	0f 90       	pop	r0
     e76:	0f 90       	pop	r0
     e78:	0f 90       	pop	r0
     e7a:	89 2b       	or	r24, r25
     e7c:	19 f0       	breq	.+6      	; 0xe84 <system_init+0x4c>
    lcd_msg("Wifi: %s", 2, "[Ok]");
     e7e:	82 e0       	ldi	r24, 0x02	; 2
     e80:	92 e0       	ldi	r25, 0x02	; 2
     e82:	02 c0       	rjmp	.+4      	; 0xe88 <system_init+0x50>
    else
    lcd_msg("Wifi: %s", 2, "[Fail]");
     e84:	80 e1       	ldi	r24, 0x10	; 16
     e86:	92 e0       	ldi	r25, 0x02	; 2
     e88:	9f 93       	push	r25
     e8a:	8f 93       	push	r24
     e8c:	cf 93       	push	r28
     e8e:	87 e0       	ldi	r24, 0x07	; 7
     e90:	92 e0       	ldi	r25, 0x02	; 2
     e92:	9f 93       	push	r25
     e94:	8f 93       	push	r24
     e96:	0e 94 84 06 	call	0xd08	; 0xd08 <lcd_msg>
     e9a:	0f 90       	pop	r0
     e9c:	0f 90       	pop	r0
     e9e:	0f 90       	pop	r0
     ea0:	0f 90       	pop	r0
     ea2:	0f 90       	pop	r0
    lcd_msg("Sensor: %s", 2, "[Busy]");
     ea4:	c7 e1       	ldi	r28, 0x17	; 23
     ea6:	d2 e0       	ldi	r29, 0x02	; 2
     ea8:	df 93       	push	r29
     eaa:	cf 93       	push	r28
     eac:	82 e0       	ldi	r24, 0x02	; 2
     eae:	f8 2e       	mov	r15, r24
     eb0:	ff 92       	push	r15
     eb2:	0e e1       	ldi	r16, 0x1E	; 30
     eb4:	12 e0       	ldi	r17, 0x02	; 2
     eb6:	1f 93       	push	r17
     eb8:	0f 93       	push	r16
     eba:	0e 94 84 06 	call	0xd08	; 0xd08 <lcd_msg>
    init_sensor(bmp180_mode_0);
     ebe:	80 e0       	ldi	r24, 0x00	; 0
     ec0:	90 e0       	ldi	r25, 0x00	; 0
     ec2:	0e 94 88 04 	call	0x910	; 0x910 <init_sensor>
    lcd_msg("Sensor: %s", 2, "[Ok]");
     ec6:	82 e0       	ldi	r24, 0x02	; 2
     ec8:	92 e0       	ldi	r25, 0x02	; 2
     eca:	9f 93       	push	r25
     ecc:	8f 93       	push	r24
     ece:	ff 92       	push	r15
     ed0:	1f 93       	push	r17
     ed2:	0f 93       	push	r16
     ed4:	0e 94 84 06 	call	0xd08	; 0xd08 <lcd_msg>
    lcd_msg("Timer: %s", 2, "[Busy]");
     ed8:	df 93       	push	r29
     eda:	cf 93       	push	r28
     edc:	ff 92       	push	r15
     ede:	89 e2       	ldi	r24, 0x29	; 41
     ee0:	92 e0       	ldi	r25, 0x02	; 2
     ee2:	9f 93       	push	r25
     ee4:	8f 93       	push	r24
     ee6:	0e 94 84 06 	call	0xd08	; 0xd08 <lcd_msg>
    init_timer();
     eea:	0e 94 16 08 	call	0x102c	; 0x102c <init_timer>
    sei();
     eee:	78 94       	sei
    lcd_msg("Timer: %s", 2, "[Ok]");
     ef0:	82 e0       	ldi	r24, 0x02	; 2
     ef2:	92 e0       	ldi	r25, 0x02	; 2
     ef4:	9f 93       	push	r25
     ef6:	8f 93       	push	r24
     ef8:	82 e0       	ldi	r24, 0x02	; 2
     efa:	8f 93       	push	r24
     efc:	89 e2       	ldi	r24, 0x29	; 41
     efe:	92 e0       	ldi	r25, 0x02	; 2
     f00:	9f 93       	push	r25
     f02:	8f 93       	push	r24
     f04:	0e 94 84 06 	call	0xd08	; 0xd08 <lcd_msg>
    lcd_clrscr();
     f08:	0e 94 e0 05 	call	0xbc0	; 0xbc0 <lcd_clrscr>
    lcd_msg("System started!", 1);
     f0c:	81 e0       	ldi	r24, 0x01	; 1
     f0e:	8f 93       	push	r24
     f10:	83 e3       	ldi	r24, 0x33	; 51
     f12:	92 e0       	ldi	r25, 0x02	; 2
     f14:	9f 93       	push	r25
     f16:	8f 93       	push	r24
     f18:	0e 94 84 06 	call	0xd08	; 0xd08 <lcd_msg>
     f1c:	8d b7       	in	r24, 0x3d	; 61
     f1e:	9e b7       	in	r25, 0x3e	; 62
     f20:	47 96       	adiw	r24, 0x17	; 23
     f22:	0f b6       	in	r0, 0x3f	; 63
     f24:	f8 94       	cli
     f26:	9e bf       	out	0x3e, r25	; 62
     f28:	0f be       	out	0x3f, r0	; 63
     f2a:	8d bf       	out	0x3d, r24	; 61
}
     f2c:	df 91       	pop	r29
     f2e:	cf 91       	pop	r28
     f30:	1f 91       	pop	r17
     f32:	0f 91       	pop	r16
     f34:	ff 90       	pop	r15
     f36:	08 95       	ret

00000f38 <make_time_request>:
}


char *make_time_request() {
    
    printf(CIP_START,"TCP", "erciyas.biz", 80);
     f38:	1f 92       	push	r1
     f3a:	80 e5       	ldi	r24, 0x50	; 80
     f3c:	8f 93       	push	r24
     f3e:	83 e4       	ldi	r24, 0x43	; 67
     f40:	92 e0       	ldi	r25, 0x02	; 2
     f42:	9f 93       	push	r25
     f44:	8f 93       	push	r24
     f46:	8f e4       	ldi	r24, 0x4F	; 79
     f48:	92 e0       	ldi	r25, 0x02	; 2
     f4a:	9f 93       	push	r25
     f4c:	8f 93       	push	r24
     f4e:	83 e5       	ldi	r24, 0x53	; 83
     f50:	92 e0       	ldi	r25, 0x02	; 2
     f52:	9f 93       	push	r25
     f54:	8f 93       	push	r24
     f56:	0e 94 b9 13 	call	0x2772	; 0x2772 <printf>
    uart_getall("OK");
     f5a:	8e e3       	ldi	r24, 0x3E	; 62
     f5c:	91 e0       	ldi	r25, 0x01	; 1
     f5e:	0e 94 36 09 	call	0x126c	; 0x126c <uart_getall>
    printf(CIP_SEND, strlen(GET_REQUEST_STR) + strlen("http://erciyas.biz/time.php") - 2);
     f62:	1f 92       	push	r1
     f64:	8c e2       	ldi	r24, 0x2C	; 44
     f66:	8f 93       	push	r24
     f68:	8e e6       	ldi	r24, 0x6E	; 110
     f6a:	92 e0       	ldi	r25, 0x02	; 2
     f6c:	9f 93       	push	r25
     f6e:	8f 93       	push	r24
     f70:	0e 94 b9 13 	call	0x2772	; 0x2772 <printf>
    uart_getall("OK");
     f74:	8e e3       	ldi	r24, 0x3E	; 62
     f76:	91 e0       	ldi	r25, 0x01	; 1
     f78:	0e 94 36 09 	call	0x126c	; 0x126c <uart_getall>
    printf(GET_REQUEST_STR, "http://erciyas.biz/time.php");
     f7c:	8e e7       	ldi	r24, 0x7E	; 126
     f7e:	92 e0       	ldi	r25, 0x02	; 2
     f80:	9f 93       	push	r25
     f82:	8f 93       	push	r24
     f84:	8a e9       	ldi	r24, 0x9A	; 154
     f86:	92 e0       	ldi	r25, 0x02	; 2
     f88:	9f 93       	push	r25
     f8a:	8f 93       	push	r24
     f8c:	0e 94 b9 13 	call	0x2772	; 0x2772 <printf>
    return uart_getall("CLOSED");;
     f90:	8d b7       	in	r24, 0x3d	; 61
     f92:	9e b7       	in	r25, 0x3e	; 62
     f94:	40 96       	adiw	r24, 0x10	; 16
     f96:	0f b6       	in	r0, 0x3f	; 63
     f98:	f8 94       	cli
     f9a:	9e bf       	out	0x3e, r25	; 62
     f9c:	0f be       	out	0x3f, r0	; 63
     f9e:	8d bf       	out	0x3d, r24	; 61
     fa0:	8e ea       	ldi	r24, 0xAE	; 174
     fa2:	92 e0       	ldi	r25, 0x02	; 2
     fa4:	0c 94 36 09 	jmp	0x126c	; 0x126c <uart_getall>

00000fa8 <sync_time>:
#include <stdlib.h>

int second = 0, minute = 0, hour = 0;
int day = 0, month = 0, year = 0;

void sync_time() {
     fa8:	cf 93       	push	r28
     faa:	df 93       	push	r29
    char *response;
    char *timevar = malloc(sizeof(char) * 22);
     fac:	86 e1       	ldi	r24, 0x16	; 22
     fae:	90 e0       	ldi	r25, 0x00	; 0
     fb0:	0e 94 51 11 	call	0x22a2	; 0x22a2 <malloc>
     fb4:	ec 01       	movw	r28, r24
    int offset;
    
    connect_wifi(SSID_NAME, SSID_PASSWORD);
     fb6:	65 eb       	ldi	r22, 0xB5	; 181
     fb8:	72 e0       	ldi	r23, 0x02	; 2
     fba:	80 ec       	ldi	r24, 0xC0	; 192
     fbc:	92 e0       	ldi	r25, 0x02	; 2
     fbe:	0e 94 c5 04 	call	0x98a	; 0x98a <connect_wifi>
    response = make_time_request();
     fc2:	0e 94 9c 07 	call	0xf38	; 0xf38 <make_time_request>
    
    offset = strstr(response, "<<") - response;
     fc6:	68 ec       	ldi	r22, 0xC8	; 200
     fc8:	72 e0       	ldi	r23, 0x02	; 2
     fca:	0e 94 6d 13 	call	0x26da	; 0x26da <strstr>
    
    
    strcpy(timevar, &response[offset]);
     fce:	bc 01       	movw	r22, r24
     fd0:	ce 01       	movw	r24, r28
     fd2:	0e 94 5b 13 	call	0x26b6	; 0x26b6 <strcpy>
    sscanf(timevar, "<<%d:%d:%d&%d/%d/%d>>", &hour, &minute, &second, &day, &month, &year);
     fd6:	24 ee       	ldi	r18, 0xE4	; 228
     fd8:	32 e0       	ldi	r19, 0x02	; 2
     fda:	3f 93       	push	r19
     fdc:	2f 93       	push	r18
     fde:	26 ee       	ldi	r18, 0xE6	; 230
     fe0:	32 e0       	ldi	r19, 0x02	; 2
     fe2:	3f 93       	push	r19
     fe4:	2f 93       	push	r18
     fe6:	28 ee       	ldi	r18, 0xE8	; 232
     fe8:	32 e0       	ldi	r19, 0x02	; 2
     fea:	3f 93       	push	r19
     fec:	2f 93       	push	r18
     fee:	2e ee       	ldi	r18, 0xEE	; 238
     ff0:	32 e0       	ldi	r19, 0x02	; 2
     ff2:	3f 93       	push	r19
     ff4:	2f 93       	push	r18
     ff6:	2c ee       	ldi	r18, 0xEC	; 236
     ff8:	32 e0       	ldi	r19, 0x02	; 2
     ffa:	3f 93       	push	r19
     ffc:	2f 93       	push	r18
     ffe:	2a ee       	ldi	r18, 0xEA	; 234
    1000:	32 e0       	ldi	r19, 0x02	; 2
    1002:	3f 93       	push	r19
    1004:	2f 93       	push	r18
    1006:	2b ec       	ldi	r18, 0xCB	; 203
    1008:	32 e0       	ldi	r19, 0x02	; 2
    100a:	3f 93       	push	r19
    100c:	2f 93       	push	r18
    100e:	df 93       	push	r29
    1010:	cf 93       	push	r28
    1012:	0e 94 1c 14 	call	0x2838	; 0x2838 <sscanf>
    1016:	8d b7       	in	r24, 0x3d	; 61
    1018:	9e b7       	in	r25, 0x3e	; 62
    101a:	40 96       	adiw	r24, 0x10	; 16
    101c:	0f b6       	in	r0, 0x3f	; 63
    101e:	f8 94       	cli
    1020:	9e bf       	out	0x3e, r25	; 62
    1022:	0f be       	out	0x3f, r0	; 63
    1024:	8d bf       	out	0x3d, r24	; 61
}
    1026:	df 91       	pop	r29
    1028:	cf 91       	pop	r28
    102a:	08 95       	ret

0000102c <init_timer>:
    return uart_getall("CLOSED");;
}

void init_timer() {
    
    sync_time();
    102c:	0e 94 d4 07 	call	0xfa8	; 0xfa8 <sync_time>
    
    ASSR |= (1 << AS2);
    1030:	e6 eb       	ldi	r30, 0xB6	; 182
    1032:	f0 e0       	ldi	r31, 0x00	; 0
    1034:	80 81       	ld	r24, Z
    1036:	80 62       	ori	r24, 0x20	; 32
    1038:	80 83       	st	Z, r24
    TCCR2B |= (1 << CS22) | (1 << CS20);
    103a:	e1 eb       	ldi	r30, 0xB1	; 177
    103c:	f0 e0       	ldi	r31, 0x00	; 0
    103e:	80 81       	ld	r24, Z
    1040:	85 60       	ori	r24, 0x05	; 5
    1042:	80 83       	st	Z, r24
    TCNT2 = 0x00;
    1044:	10 92 b2 00 	sts	0x00B2, r1
    
    TIFR2 |= (1 << TOV2);
    1048:	b8 9a       	sbi	0x17, 0	; 23
    TIMSK2 |= (1 << TOIE2);
    104a:	e0 e7       	ldi	r30, 0x70	; 112
    104c:	f0 e0       	ldi	r31, 0x00	; 0
    104e:	80 81       	ld	r24, Z
    1050:	81 60       	ori	r24, 0x01	; 1
    1052:	80 83       	st	Z, r24
    1054:	08 95       	ret

00001056 <is_leap_year>:
        month = 1;
    }
    
}

uint8_t is_leap_year(int year) {
    1056:	9c 01       	movw	r18, r24
    if (year % 100)
    1058:	64 e6       	ldi	r22, 0x64	; 100
    105a:	70 e0       	ldi	r23, 0x00	; 0
    105c:	0e 94 8f 10 	call	0x211e	; 0x211e <__divmodhi4>
    1060:	89 2b       	or	r24, r25
    1062:	49 f0       	breq	.+18     	; 0x1076 <is_leap_year+0x20>
        return (year % 400) ? 1 : 0;
    1064:	c9 01       	movw	r24, r18
    1066:	60 e9       	ldi	r22, 0x90	; 144
    1068:	71 e0       	ldi	r23, 0x01	; 1
    106a:	0e 94 8f 10 	call	0x211e	; 0x211e <__divmodhi4>
    106e:	41 e0       	ldi	r20, 0x01	; 1
    1070:	89 2b       	or	r24, r25
    1072:	39 f4       	brne	.+14     	; 0x1082 <is_leap_year+0x2c>
    1074:	05 c0       	rjmp	.+10     	; 0x1080 <is_leap_year+0x2a>
    else
        return (year % 4) ? 1 : 0;
    1076:	23 70       	andi	r18, 0x03	; 3
    1078:	33 27       	eor	r19, r19
    107a:	41 e0       	ldi	r20, 0x01	; 1
    107c:	23 2b       	or	r18, r19
    107e:	09 f4       	brne	.+2      	; 0x1082 <is_leap_year+0x2c>
    1080:	40 e0       	ldi	r20, 0x00	; 0
}
    1082:	84 2f       	mov	r24, r20
    1084:	08 95       	ret

00001086 <update_rtc>:
    TIMSK2 |= (1 << TOIE2);
    
}

void update_rtc() {
    if (++second == 60) {
    1086:	80 91 ee 02 	lds	r24, 0x02EE
    108a:	90 91 ef 02 	lds	r25, 0x02EF
    108e:	01 96       	adiw	r24, 0x01	; 1
    1090:	90 93 ef 02 	sts	0x02EF, r25
    1094:	80 93 ee 02 	sts	0x02EE, r24
    1098:	cc 97       	sbiw	r24, 0x3c	; 60
    109a:	69 f4       	brne	.+26     	; 0x10b6 <update_rtc+0x30>
        minute++;
    109c:	80 91 ec 02 	lds	r24, 0x02EC
    10a0:	90 91 ed 02 	lds	r25, 0x02ED
    10a4:	01 96       	adiw	r24, 0x01	; 1
    10a6:	90 93 ed 02 	sts	0x02ED, r25
    10aa:	80 93 ec 02 	sts	0x02EC, r24
        second = 0;
    10ae:	10 92 ef 02 	sts	0x02EF, r1
    10b2:	10 92 ee 02 	sts	0x02EE, r1
    }
    
    if (minute == 60) {
    10b6:	80 91 ec 02 	lds	r24, 0x02EC
    10ba:	90 91 ed 02 	lds	r25, 0x02ED
    10be:	cc 97       	sbiw	r24, 0x3c	; 60
    10c0:	69 f4       	brne	.+26     	; 0x10dc <update_rtc+0x56>
        hour++;
    10c2:	80 91 ea 02 	lds	r24, 0x02EA
    10c6:	90 91 eb 02 	lds	r25, 0x02EB
    10ca:	01 96       	adiw	r24, 0x01	; 1
    10cc:	90 93 eb 02 	sts	0x02EB, r25
    10d0:	80 93 ea 02 	sts	0x02EA, r24
        minute = 0;
    10d4:	10 92 ed 02 	sts	0x02ED, r1
    10d8:	10 92 ec 02 	sts	0x02EC, r1
    }
    
    if (hour == 24) {
    10dc:	80 91 ea 02 	lds	r24, 0x02EA
    10e0:	90 91 eb 02 	lds	r25, 0x02EB
    10e4:	48 97       	sbiw	r24, 0x18	; 24
    10e6:	69 f4       	brne	.+26     	; 0x1102 <update_rtc+0x7c>
        day++;
    10e8:	80 91 e8 02 	lds	r24, 0x02E8
    10ec:	90 91 e9 02 	lds	r25, 0x02E9
    10f0:	01 96       	adiw	r24, 0x01	; 1
    10f2:	90 93 e9 02 	sts	0x02E9, r25
    10f6:	80 93 e8 02 	sts	0x02E8, r24
        hour = 0;
    10fa:	10 92 eb 02 	sts	0x02EB, r1
    10fe:	10 92 ea 02 	sts	0x02EA, r1
    }
    
    if (day == 32) {
    1102:	80 91 e8 02 	lds	r24, 0x02E8
    1106:	90 91 e9 02 	lds	r25, 0x02E9
    110a:	20 91 e6 02 	lds	r18, 0x02E6
    110e:	30 91 e7 02 	lds	r19, 0x02E7
    1112:	80 32       	cpi	r24, 0x20	; 32
    1114:	91 05       	cpc	r25, r1
    1116:	39 f4       	brne	.+14     	; 0x1126 <update_rtc+0xa0>
        month++;
    1118:	2f 5f       	subi	r18, 0xFF	; 255
    111a:	3f 4f       	sbci	r19, 0xFF	; 255
    111c:	30 93 e7 02 	sts	0x02E7, r19
    1120:	20 93 e6 02 	sts	0x02E6, r18
    1124:	1f c0       	rjmp	.+62     	; 0x1164 <update_rtc+0xde>
        day = 1;
    } else if ((day == 31) && (month == 4 || month == 6 || month == 9 || month == 11)) {
    1126:	8f 31       	cpi	r24, 0x1F	; 31
    1128:	91 05       	cpc	r25, r1
    112a:	41 f4       	brne	.+16     	; 0x113c <update_rtc+0xb6>
    112c:	a9 01       	movw	r20, r18
    112e:	4d 7f       	andi	r20, 0xFD	; 253
    1130:	44 30       	cpi	r20, 0x04	; 4
    1132:	51 05       	cpc	r21, r1
    1134:	89 f3       	breq	.-30     	; 0x1118 <update_rtc+0x92>
    1136:	49 30       	cpi	r20, 0x09	; 9
    1138:	51 05       	cpc	r21, r1
    113a:	71 f3       	breq	.-36     	; 0x1118 <update_rtc+0x92>
        month++;
        day = 1;
    } else if ((month == 2) && (day == 29) && !is_leap_year(year)) {
    113c:	22 30       	cpi	r18, 0x02	; 2
    113e:	31 05       	cpc	r19, r1
    1140:	d1 f4       	brne	.+52     	; 0x1176 <update_rtc+0xf0>
    1142:	8d 31       	cpi	r24, 0x1D	; 29
    1144:	91 05       	cpc	r25, r1
    1146:	a9 f4       	brne	.+42     	; 0x1172 <update_rtc+0xec>
    1148:	80 91 e4 02 	lds	r24, 0x02E4
    114c:	90 91 e5 02 	lds	r25, 0x02E5
    1150:	0e 94 2b 08 	call	0x1056	; 0x1056 <is_leap_year>
    1154:	81 11       	cpse	r24, r1
    1156:	0f c0       	rjmp	.+30     	; 0x1176 <update_rtc+0xf0>
        month++;
    1158:	83 e0       	ldi	r24, 0x03	; 3
    115a:	90 e0       	ldi	r25, 0x00	; 0
    115c:	90 93 e7 02 	sts	0x02E7, r25
    1160:	80 93 e6 02 	sts	0x02E6, r24
        day = 1;
    1164:	81 e0       	ldi	r24, 0x01	; 1
    1166:	90 e0       	ldi	r25, 0x00	; 0
    1168:	90 93 e9 02 	sts	0x02E9, r25
    116c:	80 93 e8 02 	sts	0x02E8, r24
    1170:	02 c0       	rjmp	.+4      	; 0x1176 <update_rtc+0xf0>
    } else if ((month == 2) && (day == 30)) {
    1172:	4e 97       	sbiw	r24, 0x1e	; 30
    1174:	89 f3       	breq	.-30     	; 0x1158 <update_rtc+0xd2>
        month++;
        day = 1;
    }
    
    if (month == 13) {
    1176:	80 91 e6 02 	lds	r24, 0x02E6
    117a:	90 91 e7 02 	lds	r25, 0x02E7
    117e:	0d 97       	sbiw	r24, 0x0d	; 13
    1180:	79 f4       	brne	.+30     	; 0x11a0 <update_rtc+0x11a>
        year++;
    1182:	80 91 e4 02 	lds	r24, 0x02E4
    1186:	90 91 e5 02 	lds	r25, 0x02E5
    118a:	01 96       	adiw	r24, 0x01	; 1
    118c:	90 93 e5 02 	sts	0x02E5, r25
    1190:	80 93 e4 02 	sts	0x02E4, r24
        month = 1;
    1194:	81 e0       	ldi	r24, 0x01	; 1
    1196:	90 e0       	ldi	r25, 0x00	; 0
    1198:	90 93 e7 02 	sts	0x02E7, r25
    119c:	80 93 e6 02 	sts	0x02E6, r24
    11a0:	08 95       	ret

000011a2 <get_second>:
        return (year % 4) ? 1 : 0;
}

int get_second() {
    return second;
}
    11a2:	80 91 ee 02 	lds	r24, 0x02EE
    11a6:	90 91 ef 02 	lds	r25, 0x02EF
    11aa:	08 95       	ret

000011ac <get_minute>:

int get_minute() {
    return minute;
}
    11ac:	80 91 ec 02 	lds	r24, 0x02EC
    11b0:	90 91 ed 02 	lds	r25, 0x02ED
    11b4:	08 95       	ret

000011b6 <get_hour>:

int get_hour() {
    return hour;
}
    11b6:	80 91 ea 02 	lds	r24, 0x02EA
    11ba:	90 91 eb 02 	lds	r25, 0x02EB
    11be:	08 95       	ret

000011c0 <get_day>:

int get_day() {
    return day;
}
    11c0:	80 91 e8 02 	lds	r24, 0x02E8
    11c4:	90 91 e9 02 	lds	r25, 0x02E9
    11c8:	08 95       	ret

000011ca <get_month>:

int get_month() {
    return month;
}
    11ca:	80 91 e6 02 	lds	r24, 0x02E6
    11ce:	90 91 e7 02 	lds	r25, 0x02E7
    11d2:	08 95       	ret

000011d4 <get_year>:

int get_year() {
    return year;
}
    11d4:	80 91 e4 02 	lds	r24, 0x02E4
    11d8:	90 91 e5 02 	lds	r25, 0x02E5
    11dc:	08 95       	ret

000011de <uart_init>:
#include <util/delay.h>


void uart_init(int baudrate) {
    
    uint16_t UBRR = F_CPU / 16 / baudrate - 1;
    11de:	9c 01       	movw	r18, r24
    11e0:	44 27       	eor	r20, r20
    11e2:	37 fd       	sbrc	r19, 7
    11e4:	40 95       	com	r20
    11e6:	54 2f       	mov	r21, r20
    11e8:	60 e2       	ldi	r22, 0x20	; 32
    11ea:	71 ea       	ldi	r23, 0xA1	; 161
    11ec:	87 e0       	ldi	r24, 0x07	; 7
    11ee:	90 e0       	ldi	r25, 0x00	; 0
    11f0:	0e 94 a3 10 	call	0x2146	; 0x2146 <__udivmodsi4>
    11f4:	21 50       	subi	r18, 0x01	; 1
    11f6:	31 09       	sbc	r19, r1
    
    UBRR0H = (uint8_t) (UBRR >> 8);
    11f8:	30 93 c5 00 	sts	0x00C5, r19
    UBRR0L = (uint8_t) UBRR;
    11fc:	20 93 c4 00 	sts	0x00C4, r18
    
    UCSR0B |= (1<<TXEN0) | (1<<RXEN0);
    1200:	e1 ec       	ldi	r30, 0xC1	; 193
    1202:	f0 e0       	ldi	r31, 0x00	; 0
    1204:	80 81       	ld	r24, Z
    1206:	88 61       	ori	r24, 0x18	; 24
    1208:	80 83       	st	Z, r24
    UCSR0C |= (0<<USBS0) | (1 << UCSZ01) | (1 << UCSZ00);
    120a:	e2 ec       	ldi	r30, 0xC2	; 194
    120c:	f0 e0       	ldi	r31, 0x00	; 0
    120e:	80 81       	ld	r24, Z
    1210:	86 60       	ori	r24, 0x06	; 6
    1212:	80 83       	st	Z, r24
    1214:	08 95       	ret

00001216 <send_uart_char>:
    
}

void send_uart_char(unsigned char serial_data, FILE *stream) {
    
    if (serial_data == '\0') { // Send each byte until reached \n character
    1216:	81 11       	cpse	r24, r1
    1218:	04 c0       	rjmp	.+8      	; 0x1222 <send_uart_char+0xc>
        send_uart_char('\r', stream);
    121a:	8d e0       	ldi	r24, 0x0D	; 13
    121c:	0e 94 0b 09 	call	0x1216	; 0x1216 <send_uart_char>
        send_uart_char('\n', stream);
    1220:	8a e0       	ldi	r24, 0x0A	; 10
        return;
    }
    
    while (!(UCSR0A & (1 << UDRE0)));
    1222:	90 91 c0 00 	lds	r25, 0x00C0
    1226:	95 ff       	sbrs	r25, 5
    1228:	fc cf       	rjmp	.-8      	; 0x1222 <send_uart_char+0xc>
    UDR0 = serial_data;
    122a:	80 93 c6 00 	sts	0x00C6, r24
    122e:	08 95       	ret

00001230 <receive_uart_char>:
}

char receive_uart_char(void) {
    
    while (!(UCSR0A & (1<<RXC0)));
    1230:	80 91 c0 00 	lds	r24, 0x00C0
    1234:	87 ff       	sbrs	r24, 7
    1236:	fc cf       	rjmp	.-8      	; 0x1230 <receive_uart_char>
    
    return UDR0;
    1238:	80 91 c6 00 	lds	r24, 0x00C6
}
    123c:	08 95       	ret

0000123e <uart_receive>:


int uart_receive(char *buffer) {
    123e:	0f 93       	push	r16
    1240:	1f 93       	push	r17
    1242:	cf 93       	push	r28
    1244:	df 93       	push	r29
    1246:	8c 01       	movw	r16, r24
    1248:	ec 01       	movw	r28, r24
    124a:	ce 01       	movw	r24, r28
    124c:	80 1b       	sub	r24, r16
    124e:	91 0b       	sbc	r25, r17
    char received;
    
    int i = 0;
    
    while (1) {
        if (received == '\n' || received == '\r') break;
    1250:	2a 30       	cpi	r18, 0x0A	; 10
    1252:	39 f0       	breq	.+14     	; 0x1262 <uart_receive+0x24>
    1254:	2d 30       	cpi	r18, 0x0D	; 13
    1256:	29 f0       	breq	.+10     	; 0x1262 <uart_receive+0x24>
        received = receive_uart_char();
    1258:	0e 94 18 09 	call	0x1230	; 0x1230 <receive_uart_char>
    125c:	28 2f       	mov	r18, r24
        buffer[i++] = received;
    125e:	89 93       	st	Y+, r24
    }
    1260:	f4 cf       	rjmp	.-24     	; 0x124a <uart_receive+0xc>
    
    return i;
    
}
    1262:	df 91       	pop	r29
    1264:	cf 91       	pop	r28
    1266:	1f 91       	pop	r17
    1268:	0f 91       	pop	r16
    126a:	08 95       	ret

0000126c <uart_getall>:
    126c:	7f 92       	push	r7
    126e:	8f 92       	push	r8
    1270:	9f 92       	push	r9
    1272:	af 92       	push	r10
    1274:	bf 92       	push	r11
    1276:	cf 92       	push	r12
    1278:	df 92       	push	r13
    127a:	ef 92       	push	r14
    127c:	ff 92       	push	r15
    127e:	0f 93       	push	r16
    1280:	1f 93       	push	r17
    1282:	cf 93       	push	r28
    1284:	df 93       	push	r29
    1286:	cd b7       	in	r28, 0x3d	; 61
    1288:	de b7       	in	r29, 0x3e	; 62
    128a:	c0 52       	subi	r28, 0x20	; 32
    128c:	d2 40       	sbci	r29, 0x02	; 2
    128e:	0f b6       	in	r0, 0x3f	; 63
    1290:	f8 94       	cli
    1292:	de bf       	out	0x3e, r29	; 62
    1294:	0f be       	out	0x3f, r0	; 63
    1296:	cd bf       	out	0x3d, r28	; 61
    1298:	4c 01       	movw	r8, r24
    129a:	9e 01       	movw	r18, r28
    129c:	2f 5f       	subi	r18, 0xFF	; 255
    129e:	3f 4f       	sbci	r19, 0xFF	; 255
    12a0:	79 01       	movw	r14, r18
    12a2:	80 e0       	ldi	r24, 0x00	; 0
    12a4:	92 e0       	ldi	r25, 0x02	; 2
    12a6:	f9 01       	movw	r30, r18
    12a8:	9c 01       	movw	r18, r24
    12aa:	11 92       	st	Z+, r1
    12ac:	21 50       	subi	r18, 0x01	; 1
    12ae:	30 40       	sbci	r19, 0x00	; 0
    12b0:	e1 f7       	brne	.-8      	; 0x12aa <uart_getall+0x3e>
    12b2:	8e 01       	movw	r16, r28
    12b4:	0f 5f       	subi	r16, 0xFF	; 255
    12b6:	1d 4f       	sbci	r17, 0xFD	; 253
    12b8:	80 e2       	ldi	r24, 0x20	; 32
    12ba:	f8 01       	movw	r30, r16
    12bc:	11 92       	st	Z+, r1
    12be:	8a 95       	dec	r24
    12c0:	e9 f7       	brne	.-6      	; 0x12bc <uart_getall+0x50>
    12c2:	c1 2c       	mov	r12, r1
    12c4:	d1 2c       	mov	r13, r1
    12c6:	80 e2       	ldi	r24, 0x20	; 32
    12c8:	78 2e       	mov	r7, r24
    12ca:	c8 01       	movw	r24, r16
    12cc:	0e 94 1f 09 	call	0x123e	; 0x123e <uart_receive>
    12d0:	5c 01       	movw	r10, r24
    12d2:	00 97       	sbiw	r24, 0x00	; 0
    12d4:	d9 f0       	breq	.+54     	; 0x130c <uart_getall+0xa0>
    12d6:	b4 01       	movw	r22, r8
    12d8:	c8 01       	movw	r24, r16
    12da:	0e 94 6d 13 	call	0x26da	; 0x26da <strstr>
    12de:	89 2b       	or	r24, r25
    12e0:	a9 f4       	brne	.+42     	; 0x130c <uart_getall+0xa0>
    12e2:	1f 93       	push	r17
    12e4:	0f 93       	push	r16
    12e6:	c7 01       	movw	r24, r14
    12e8:	8c 0d       	add	r24, r12
    12ea:	9d 1d       	adc	r25, r13
    12ec:	9f 93       	push	r25
    12ee:	8f 93       	push	r24
    12f0:	0e 94 fa 13 	call	0x27f4	; 0x27f4 <sprintf>
    12f4:	f8 01       	movw	r30, r16
    12f6:	27 2d       	mov	r18, r7
    12f8:	11 92       	st	Z+, r1
    12fa:	2a 95       	dec	r18
    12fc:	e9 f7       	brne	.-6      	; 0x12f8 <uart_getall+0x8c>
    12fe:	ca 0c       	add	r12, r10
    1300:	db 1c       	adc	r13, r11
    1302:	0f 90       	pop	r0
    1304:	0f 90       	pop	r0
    1306:	0f 90       	pop	r0
    1308:	0f 90       	pop	r0
    130a:	df cf       	rjmp	.-66     	; 0x12ca <uart_getall+0x5e>
    130c:	c7 01       	movw	r24, r14
    130e:	c0 5e       	subi	r28, 0xE0	; 224
    1310:	dd 4f       	sbci	r29, 0xFD	; 253
    1312:	0f b6       	in	r0, 0x3f	; 63
    1314:	f8 94       	cli
    1316:	de bf       	out	0x3e, r29	; 62
    1318:	0f be       	out	0x3f, r0	; 63
    131a:	cd bf       	out	0x3d, r28	; 61
    131c:	df 91       	pop	r29
    131e:	cf 91       	pop	r28
    1320:	1f 91       	pop	r17
    1322:	0f 91       	pop	r16
    1324:	ff 90       	pop	r15
    1326:	ef 90       	pop	r14
    1328:	df 90       	pop	r13
    132a:	cf 90       	pop	r12
    132c:	bf 90       	pop	r11
    132e:	af 90       	pop	r10
    1330:	9f 90       	pop	r9
    1332:	8f 90       	pop	r8
    1334:	7f 90       	pop	r7
    1336:	08 95       	ret

00001338 <main>:



int main(void) {
    
    stdout = &uart_output;
    1338:	80 e0       	ldi	r24, 0x00	; 0
    133a:	91 e0       	ldi	r25, 0x01	; 1
    133c:	90 93 27 03 	sts	0x0327, r25
    1340:	80 93 26 03 	sts	0x0326, r24
    
    system_init();
    1344:	0e 94 1c 07 	call	0xe38	; 0xe38 <system_init>
    
    while (1) {
        update_display();
    1348:	0e 94 cb 06 	call	0xd96	; 0xd96 <update_display>
    134c:	2f ef       	ldi	r18, 0xFF	; 255
    134e:	84 e3       	ldi	r24, 0x34	; 52
    1350:	9c e0       	ldi	r25, 0x0C	; 12
    1352:	21 50       	subi	r18, 0x01	; 1
    1354:	80 40       	sbci	r24, 0x00	; 0
    1356:	90 40       	sbci	r25, 0x00	; 0
    1358:	e1 f7       	brne	.-8      	; 0x1352 <main+0x1a>
    135a:	00 c0       	rjmp	.+0      	; 0x135c <main+0x24>
    135c:	00 00       	nop
    135e:	f4 cf       	rjmp	.-24     	; 0x1348 <main+0x10>

00001360 <vfprintf>:
    1360:	a3 e1       	ldi	r26, 0x13	; 19
    1362:	b0 e0       	ldi	r27, 0x00	; 0
    1364:	e6 eb       	ldi	r30, 0xB6	; 182
    1366:	f9 e0       	ldi	r31, 0x09	; 9
    1368:	0c 94 f7 10 	jmp	0x21ee	; 0x21ee <__prologue_saves__>
    136c:	7c 01       	movw	r14, r24
    136e:	1b 01       	movw	r2, r22
    1370:	6a 01       	movw	r12, r20
    1372:	fc 01       	movw	r30, r24
    1374:	17 82       	std	Z+7, r1	; 0x07
    1376:	16 82       	std	Z+6, r1	; 0x06
    1378:	83 81       	ldd	r24, Z+3	; 0x03
    137a:	81 ff       	sbrs	r24, 1
    137c:	66 c3       	rjmp	.+1740   	; 0x1a4a <vfprintf+0x6ea>
    137e:	be 01       	movw	r22, r28
    1380:	6f 5f       	subi	r22, 0xFF	; 255
    1382:	7f 4f       	sbci	r23, 0xFF	; 255
    1384:	4b 01       	movw	r8, r22
    1386:	f7 01       	movw	r30, r14
    1388:	93 81       	ldd	r25, Z+3	; 0x03
    138a:	f1 01       	movw	r30, r2
    138c:	93 fd       	sbrc	r25, 3
    138e:	85 91       	lpm	r24, Z+
    1390:	93 ff       	sbrs	r25, 3
    1392:	81 91       	ld	r24, Z+
    1394:	1f 01       	movw	r2, r30
    1396:	88 23       	and	r24, r24
    1398:	09 f4       	brne	.+2      	; 0x139c <vfprintf+0x3c>
    139a:	53 c3       	rjmp	.+1702   	; 0x1a42 <vfprintf+0x6e2>
    139c:	85 32       	cpi	r24, 0x25	; 37
    139e:	39 f4       	brne	.+14     	; 0x13ae <vfprintf+0x4e>
    13a0:	93 fd       	sbrc	r25, 3
    13a2:	85 91       	lpm	r24, Z+
    13a4:	93 ff       	sbrs	r25, 3
    13a6:	81 91       	ld	r24, Z+
    13a8:	1f 01       	movw	r2, r30
    13aa:	85 32       	cpi	r24, 0x25	; 37
    13ac:	39 f4       	brne	.+14     	; 0x13bc <vfprintf+0x5c>
    13ae:	b7 01       	movw	r22, r14
    13b0:	90 e0       	ldi	r25, 0x00	; 0
    13b2:	0e 94 87 13 	call	0x270e	; 0x270e <fputc>
    13b6:	56 01       	movw	r10, r12
    13b8:	65 01       	movw	r12, r10
    13ba:	e5 cf       	rjmp	.-54     	; 0x1386 <vfprintf+0x26>
    13bc:	10 e0       	ldi	r17, 0x00	; 0
    13be:	51 2c       	mov	r5, r1
    13c0:	20 e0       	ldi	r18, 0x00	; 0
    13c2:	20 32       	cpi	r18, 0x20	; 32
    13c4:	a0 f4       	brcc	.+40     	; 0x13ee <vfprintf+0x8e>
    13c6:	8b 32       	cpi	r24, 0x2B	; 43
    13c8:	69 f0       	breq	.+26     	; 0x13e4 <vfprintf+0x84>
    13ca:	30 f4       	brcc	.+12     	; 0x13d8 <vfprintf+0x78>
    13cc:	80 32       	cpi	r24, 0x20	; 32
    13ce:	59 f0       	breq	.+22     	; 0x13e6 <vfprintf+0x86>
    13d0:	83 32       	cpi	r24, 0x23	; 35
    13d2:	69 f4       	brne	.+26     	; 0x13ee <vfprintf+0x8e>
    13d4:	20 61       	ori	r18, 0x10	; 16
    13d6:	2c c0       	rjmp	.+88     	; 0x1430 <vfprintf+0xd0>
    13d8:	8d 32       	cpi	r24, 0x2D	; 45
    13da:	39 f0       	breq	.+14     	; 0x13ea <vfprintf+0x8a>
    13dc:	80 33       	cpi	r24, 0x30	; 48
    13de:	39 f4       	brne	.+14     	; 0x13ee <vfprintf+0x8e>
    13e0:	21 60       	ori	r18, 0x01	; 1
    13e2:	26 c0       	rjmp	.+76     	; 0x1430 <vfprintf+0xd0>
    13e4:	22 60       	ori	r18, 0x02	; 2
    13e6:	24 60       	ori	r18, 0x04	; 4
    13e8:	23 c0       	rjmp	.+70     	; 0x1430 <vfprintf+0xd0>
    13ea:	28 60       	ori	r18, 0x08	; 8
    13ec:	21 c0       	rjmp	.+66     	; 0x1430 <vfprintf+0xd0>
    13ee:	27 fd       	sbrc	r18, 7
    13f0:	27 c0       	rjmp	.+78     	; 0x1440 <vfprintf+0xe0>
    13f2:	30 ed       	ldi	r19, 0xD0	; 208
    13f4:	38 0f       	add	r19, r24
    13f6:	3a 30       	cpi	r19, 0x0A	; 10
    13f8:	78 f4       	brcc	.+30     	; 0x1418 <vfprintf+0xb8>
    13fa:	26 ff       	sbrs	r18, 6
    13fc:	06 c0       	rjmp	.+12     	; 0x140a <vfprintf+0xaa>
    13fe:	fa e0       	ldi	r31, 0x0A	; 10
    1400:	1f 9f       	mul	r17, r31
    1402:	30 0d       	add	r19, r0
    1404:	11 24       	eor	r1, r1
    1406:	13 2f       	mov	r17, r19
    1408:	13 c0       	rjmp	.+38     	; 0x1430 <vfprintf+0xd0>
    140a:	6a e0       	ldi	r22, 0x0A	; 10
    140c:	56 9e       	mul	r5, r22
    140e:	30 0d       	add	r19, r0
    1410:	11 24       	eor	r1, r1
    1412:	53 2e       	mov	r5, r19
    1414:	20 62       	ori	r18, 0x20	; 32
    1416:	0c c0       	rjmp	.+24     	; 0x1430 <vfprintf+0xd0>
    1418:	8e 32       	cpi	r24, 0x2E	; 46
    141a:	21 f4       	brne	.+8      	; 0x1424 <vfprintf+0xc4>
    141c:	26 fd       	sbrc	r18, 6
    141e:	11 c3       	rjmp	.+1570   	; 0x1a42 <vfprintf+0x6e2>
    1420:	20 64       	ori	r18, 0x40	; 64
    1422:	06 c0       	rjmp	.+12     	; 0x1430 <vfprintf+0xd0>
    1424:	8c 36       	cpi	r24, 0x6C	; 108
    1426:	11 f4       	brne	.+4      	; 0x142c <vfprintf+0xcc>
    1428:	20 68       	ori	r18, 0x80	; 128
    142a:	02 c0       	rjmp	.+4      	; 0x1430 <vfprintf+0xd0>
    142c:	88 36       	cpi	r24, 0x68	; 104
    142e:	41 f4       	brne	.+16     	; 0x1440 <vfprintf+0xe0>
    1430:	f1 01       	movw	r30, r2
    1432:	93 fd       	sbrc	r25, 3
    1434:	85 91       	lpm	r24, Z+
    1436:	93 ff       	sbrs	r25, 3
    1438:	81 91       	ld	r24, Z+
    143a:	1f 01       	movw	r2, r30
    143c:	81 11       	cpse	r24, r1
    143e:	c1 cf       	rjmp	.-126    	; 0x13c2 <vfprintf+0x62>
    1440:	9b eb       	ldi	r25, 0xBB	; 187
    1442:	98 0f       	add	r25, r24
    1444:	93 30       	cpi	r25, 0x03	; 3
    1446:	18 f4       	brcc	.+6      	; 0x144e <vfprintf+0xee>
    1448:	20 61       	ori	r18, 0x10	; 16
    144a:	80 5e       	subi	r24, 0xE0	; 224
    144c:	06 c0       	rjmp	.+12     	; 0x145a <vfprintf+0xfa>
    144e:	9b e9       	ldi	r25, 0x9B	; 155
    1450:	98 0f       	add	r25, r24
    1452:	93 30       	cpi	r25, 0x03	; 3
    1454:	08 f0       	brcs	.+2      	; 0x1458 <vfprintf+0xf8>
    1456:	aa c1       	rjmp	.+852    	; 0x17ac <vfprintf+0x44c>
    1458:	2f 7e       	andi	r18, 0xEF	; 239
    145a:	26 ff       	sbrs	r18, 6
    145c:	16 e0       	ldi	r17, 0x06	; 6
    145e:	2f 73       	andi	r18, 0x3F	; 63
    1460:	72 2e       	mov	r7, r18
    1462:	85 36       	cpi	r24, 0x65	; 101
    1464:	21 f4       	brne	.+8      	; 0x146e <vfprintf+0x10e>
    1466:	f2 2f       	mov	r31, r18
    1468:	f0 64       	ori	r31, 0x40	; 64
    146a:	7f 2e       	mov	r7, r31
    146c:	08 c0       	rjmp	.+16     	; 0x147e <vfprintf+0x11e>
    146e:	86 36       	cpi	r24, 0x66	; 102
    1470:	21 f4       	brne	.+8      	; 0x147a <vfprintf+0x11a>
    1472:	62 2f       	mov	r22, r18
    1474:	60 68       	ori	r22, 0x80	; 128
    1476:	76 2e       	mov	r7, r22
    1478:	02 c0       	rjmp	.+4      	; 0x147e <vfprintf+0x11e>
    147a:	11 11       	cpse	r17, r1
    147c:	11 50       	subi	r17, 0x01	; 1
    147e:	77 fe       	sbrs	r7, 7
    1480:	07 c0       	rjmp	.+14     	; 0x1490 <vfprintf+0x130>
    1482:	1c 33       	cpi	r17, 0x3C	; 60
    1484:	48 f4       	brcc	.+18     	; 0x1498 <vfprintf+0x138>
    1486:	44 24       	eor	r4, r4
    1488:	43 94       	inc	r4
    148a:	41 0e       	add	r4, r17
    148c:	27 e0       	ldi	r18, 0x07	; 7
    148e:	0b c0       	rjmp	.+22     	; 0x14a6 <vfprintf+0x146>
    1490:	18 30       	cpi	r17, 0x08	; 8
    1492:	30 f4       	brcc	.+12     	; 0x14a0 <vfprintf+0x140>
    1494:	21 2f       	mov	r18, r17
    1496:	06 c0       	rjmp	.+12     	; 0x14a4 <vfprintf+0x144>
    1498:	27 e0       	ldi	r18, 0x07	; 7
    149a:	4c e3       	ldi	r20, 0x3C	; 60
    149c:	44 2e       	mov	r4, r20
    149e:	03 c0       	rjmp	.+6      	; 0x14a6 <vfprintf+0x146>
    14a0:	27 e0       	ldi	r18, 0x07	; 7
    14a2:	17 e0       	ldi	r17, 0x07	; 7
    14a4:	41 2c       	mov	r4, r1
    14a6:	56 01       	movw	r10, r12
    14a8:	74 e0       	ldi	r23, 0x04	; 4
    14aa:	a7 0e       	add	r10, r23
    14ac:	b1 1c       	adc	r11, r1
    14ae:	f6 01       	movw	r30, r12
    14b0:	60 81       	ld	r22, Z
    14b2:	71 81       	ldd	r23, Z+1	; 0x01
    14b4:	82 81       	ldd	r24, Z+2	; 0x02
    14b6:	93 81       	ldd	r25, Z+3	; 0x03
    14b8:	04 2d       	mov	r16, r4
    14ba:	a4 01       	movw	r20, r8
    14bc:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__ftoa_engine>
    14c0:	6c 01       	movw	r12, r24
    14c2:	09 81       	ldd	r16, Y+1	; 0x01
    14c4:	00 ff       	sbrs	r16, 0
    14c6:	02 c0       	rjmp	.+4      	; 0x14cc <vfprintf+0x16c>
    14c8:	03 ff       	sbrs	r16, 3
    14ca:	06 c0       	rjmp	.+12     	; 0x14d8 <vfprintf+0x178>
    14cc:	71 fc       	sbrc	r7, 1
    14ce:	07 c0       	rjmp	.+14     	; 0x14de <vfprintf+0x17e>
    14d0:	72 fc       	sbrc	r7, 2
    14d2:	08 c0       	rjmp	.+16     	; 0x14e4 <vfprintf+0x184>
    14d4:	61 2c       	mov	r6, r1
    14d6:	08 c0       	rjmp	.+16     	; 0x14e8 <vfprintf+0x188>
    14d8:	3d e2       	ldi	r19, 0x2D	; 45
    14da:	63 2e       	mov	r6, r19
    14dc:	05 c0       	rjmp	.+10     	; 0x14e8 <vfprintf+0x188>
    14de:	2b e2       	ldi	r18, 0x2B	; 43
    14e0:	62 2e       	mov	r6, r18
    14e2:	02 c0       	rjmp	.+4      	; 0x14e8 <vfprintf+0x188>
    14e4:	90 e2       	ldi	r25, 0x20	; 32
    14e6:	69 2e       	mov	r6, r25
    14e8:	80 2f       	mov	r24, r16
    14ea:	8c 70       	andi	r24, 0x0C	; 12
    14ec:	99 f1       	breq	.+102    	; 0x1554 <vfprintf+0x1f4>
    14ee:	66 20       	and	r6, r6
    14f0:	11 f0       	breq	.+4      	; 0x14f6 <vfprintf+0x196>
    14f2:	84 e0       	ldi	r24, 0x04	; 4
    14f4:	01 c0       	rjmp	.+2      	; 0x14f8 <vfprintf+0x198>
    14f6:	83 e0       	ldi	r24, 0x03	; 3
    14f8:	85 15       	cp	r24, r5
    14fa:	10 f0       	brcs	.+4      	; 0x1500 <vfprintf+0x1a0>
    14fc:	51 2c       	mov	r5, r1
    14fe:	0b c0       	rjmp	.+22     	; 0x1516 <vfprintf+0x1b6>
    1500:	58 1a       	sub	r5, r24
    1502:	73 fc       	sbrc	r7, 3
    1504:	08 c0       	rjmp	.+16     	; 0x1516 <vfprintf+0x1b6>
    1506:	b7 01       	movw	r22, r14
    1508:	80 e2       	ldi	r24, 0x20	; 32
    150a:	90 e0       	ldi	r25, 0x00	; 0
    150c:	0e 94 87 13 	call	0x270e	; 0x270e <fputc>
    1510:	5a 94       	dec	r5
    1512:	c9 f7       	brne	.-14     	; 0x1506 <vfprintf+0x1a6>
    1514:	f3 cf       	rjmp	.-26     	; 0x14fc <vfprintf+0x19c>
    1516:	66 20       	and	r6, r6
    1518:	29 f0       	breq	.+10     	; 0x1524 <vfprintf+0x1c4>
    151a:	b7 01       	movw	r22, r14
    151c:	86 2d       	mov	r24, r6
    151e:	90 e0       	ldi	r25, 0x00	; 0
    1520:	0e 94 87 13 	call	0x270e	; 0x270e <fputc>
    1524:	03 fd       	sbrc	r16, 3
    1526:	03 c0       	rjmp	.+6      	; 0x152e <vfprintf+0x1ce>
    1528:	0e ee       	ldi	r16, 0xEE	; 238
    152a:	10 e0       	ldi	r17, 0x00	; 0
    152c:	02 c0       	rjmp	.+4      	; 0x1532 <vfprintf+0x1d2>
    152e:	0a ee       	ldi	r16, 0xEA	; 234
    1530:	10 e0       	ldi	r17, 0x00	; 0
    1532:	f7 2d       	mov	r31, r7
    1534:	f0 71       	andi	r31, 0x10	; 16
    1536:	7f 2e       	mov	r7, r31
    1538:	f8 01       	movw	r30, r16
    153a:	84 91       	lpm	r24, Z
    153c:	88 23       	and	r24, r24
    153e:	09 f4       	brne	.+2      	; 0x1542 <vfprintf+0x1e2>
    1540:	76 c2       	rjmp	.+1260   	; 0x1a2e <vfprintf+0x6ce>
    1542:	71 10       	cpse	r7, r1
    1544:	80 52       	subi	r24, 0x20	; 32
    1546:	b7 01       	movw	r22, r14
    1548:	90 e0       	ldi	r25, 0x00	; 0
    154a:	0e 94 87 13 	call	0x270e	; 0x270e <fputc>
    154e:	0f 5f       	subi	r16, 0xFF	; 255
    1550:	1f 4f       	sbci	r17, 0xFF	; 255
    1552:	f2 cf       	rjmp	.-28     	; 0x1538 <vfprintf+0x1d8>
    1554:	77 fe       	sbrs	r7, 7
    1556:	0f c0       	rjmp	.+30     	; 0x1576 <vfprintf+0x216>
    1558:	4c 0c       	add	r4, r12
    155a:	04 ff       	sbrs	r16, 4
    155c:	04 c0       	rjmp	.+8      	; 0x1566 <vfprintf+0x206>
    155e:	8a 81       	ldd	r24, Y+2	; 0x02
    1560:	81 33       	cpi	r24, 0x31	; 49
    1562:	09 f4       	brne	.+2      	; 0x1566 <vfprintf+0x206>
    1564:	4a 94       	dec	r4
    1566:	14 14       	cp	r1, r4
    1568:	74 f5       	brge	.+92     	; 0x15c6 <vfprintf+0x266>
    156a:	f8 e0       	ldi	r31, 0x08	; 8
    156c:	f4 15       	cp	r31, r4
    156e:	78 f5       	brcc	.+94     	; 0x15ce <vfprintf+0x26e>
    1570:	88 e0       	ldi	r24, 0x08	; 8
    1572:	48 2e       	mov	r4, r24
    1574:	2c c0       	rjmp	.+88     	; 0x15ce <vfprintf+0x26e>
    1576:	76 fc       	sbrc	r7, 6
    1578:	2a c0       	rjmp	.+84     	; 0x15ce <vfprintf+0x26e>
    157a:	81 2f       	mov	r24, r17
    157c:	90 e0       	ldi	r25, 0x00	; 0
    157e:	8c 15       	cp	r24, r12
    1580:	9d 05       	cpc	r25, r13
    1582:	9c f0       	brlt	.+38     	; 0x15aa <vfprintf+0x24a>
    1584:	6c ef       	ldi	r22, 0xFC	; 252
    1586:	c6 16       	cp	r12, r22
    1588:	6f ef       	ldi	r22, 0xFF	; 255
    158a:	d6 06       	cpc	r13, r22
    158c:	74 f0       	brlt	.+28     	; 0x15aa <vfprintf+0x24a>
    158e:	77 2d       	mov	r23, r7
    1590:	70 68       	ori	r23, 0x80	; 128
    1592:	77 2e       	mov	r7, r23
    1594:	0a c0       	rjmp	.+20     	; 0x15aa <vfprintf+0x24a>
    1596:	e2 e0       	ldi	r30, 0x02	; 2
    1598:	f0 e0       	ldi	r31, 0x00	; 0
    159a:	ec 0f       	add	r30, r28
    159c:	fd 1f       	adc	r31, r29
    159e:	e1 0f       	add	r30, r17
    15a0:	f1 1d       	adc	r31, r1
    15a2:	80 81       	ld	r24, Z
    15a4:	80 33       	cpi	r24, 0x30	; 48
    15a6:	19 f4       	brne	.+6      	; 0x15ae <vfprintf+0x24e>
    15a8:	11 50       	subi	r17, 0x01	; 1
    15aa:	11 11       	cpse	r17, r1
    15ac:	f4 cf       	rjmp	.-24     	; 0x1596 <vfprintf+0x236>
    15ae:	77 fe       	sbrs	r7, 7
    15b0:	0e c0       	rjmp	.+28     	; 0x15ce <vfprintf+0x26e>
    15b2:	44 24       	eor	r4, r4
    15b4:	43 94       	inc	r4
    15b6:	41 0e       	add	r4, r17
    15b8:	81 2f       	mov	r24, r17
    15ba:	90 e0       	ldi	r25, 0x00	; 0
    15bc:	c8 16       	cp	r12, r24
    15be:	d9 06       	cpc	r13, r25
    15c0:	2c f4       	brge	.+10     	; 0x15cc <vfprintf+0x26c>
    15c2:	1c 19       	sub	r17, r12
    15c4:	04 c0       	rjmp	.+8      	; 0x15ce <vfprintf+0x26e>
    15c6:	44 24       	eor	r4, r4
    15c8:	43 94       	inc	r4
    15ca:	01 c0       	rjmp	.+2      	; 0x15ce <vfprintf+0x26e>
    15cc:	10 e0       	ldi	r17, 0x00	; 0
    15ce:	77 fe       	sbrs	r7, 7
    15d0:	07 c0       	rjmp	.+14     	; 0x15e0 <vfprintf+0x280>
    15d2:	1c 14       	cp	r1, r12
    15d4:	1d 04       	cpc	r1, r13
    15d6:	3c f4       	brge	.+14     	; 0x15e6 <vfprintf+0x286>
    15d8:	96 01       	movw	r18, r12
    15da:	2f 5f       	subi	r18, 0xFF	; 255
    15dc:	3f 4f       	sbci	r19, 0xFF	; 255
    15de:	05 c0       	rjmp	.+10     	; 0x15ea <vfprintf+0x28a>
    15e0:	25 e0       	ldi	r18, 0x05	; 5
    15e2:	30 e0       	ldi	r19, 0x00	; 0
    15e4:	02 c0       	rjmp	.+4      	; 0x15ea <vfprintf+0x28a>
    15e6:	21 e0       	ldi	r18, 0x01	; 1
    15e8:	30 e0       	ldi	r19, 0x00	; 0
    15ea:	66 20       	and	r6, r6
    15ec:	11 f0       	breq	.+4      	; 0x15f2 <vfprintf+0x292>
    15ee:	2f 5f       	subi	r18, 0xFF	; 255
    15f0:	3f 4f       	sbci	r19, 0xFF	; 255
    15f2:	11 23       	and	r17, r17
    15f4:	31 f0       	breq	.+12     	; 0x1602 <vfprintf+0x2a2>
    15f6:	41 2f       	mov	r20, r17
    15f8:	50 e0       	ldi	r21, 0x00	; 0
    15fa:	4f 5f       	subi	r20, 0xFF	; 255
    15fc:	5f 4f       	sbci	r21, 0xFF	; 255
    15fe:	24 0f       	add	r18, r20
    1600:	35 1f       	adc	r19, r21
    1602:	45 2d       	mov	r20, r5
    1604:	50 e0       	ldi	r21, 0x00	; 0
    1606:	24 17       	cp	r18, r20
    1608:	35 07       	cpc	r19, r21
    160a:	14 f4       	brge	.+4      	; 0x1610 <vfprintf+0x2b0>
    160c:	52 1a       	sub	r5, r18
    160e:	01 c0       	rjmp	.+2      	; 0x1612 <vfprintf+0x2b2>
    1610:	51 2c       	mov	r5, r1
    1612:	87 2d       	mov	r24, r7
    1614:	89 70       	andi	r24, 0x09	; 9
    1616:	49 f4       	brne	.+18     	; 0x162a <vfprintf+0x2ca>
    1618:	55 20       	and	r5, r5
    161a:	39 f0       	breq	.+14     	; 0x162a <vfprintf+0x2ca>
    161c:	b7 01       	movw	r22, r14
    161e:	80 e2       	ldi	r24, 0x20	; 32
    1620:	90 e0       	ldi	r25, 0x00	; 0
    1622:	0e 94 87 13 	call	0x270e	; 0x270e <fputc>
    1626:	5a 94       	dec	r5
    1628:	f7 cf       	rjmp	.-18     	; 0x1618 <vfprintf+0x2b8>
    162a:	66 20       	and	r6, r6
    162c:	29 f0       	breq	.+10     	; 0x1638 <vfprintf+0x2d8>
    162e:	b7 01       	movw	r22, r14
    1630:	86 2d       	mov	r24, r6
    1632:	90 e0       	ldi	r25, 0x00	; 0
    1634:	0e 94 87 13 	call	0x270e	; 0x270e <fputc>
    1638:	73 fc       	sbrc	r7, 3
    163a:	09 c0       	rjmp	.+18     	; 0x164e <vfprintf+0x2ee>
    163c:	55 20       	and	r5, r5
    163e:	39 f0       	breq	.+14     	; 0x164e <vfprintf+0x2ee>
    1640:	b7 01       	movw	r22, r14
    1642:	80 e3       	ldi	r24, 0x30	; 48
    1644:	90 e0       	ldi	r25, 0x00	; 0
    1646:	0e 94 87 13 	call	0x270e	; 0x270e <fputc>
    164a:	5a 94       	dec	r5
    164c:	f7 cf       	rjmp	.-18     	; 0x163c <vfprintf+0x2dc>
    164e:	77 fe       	sbrs	r7, 7
    1650:	5f c0       	rjmp	.+190    	; 0x1710 <vfprintf+0x3b0>
    1652:	9c 2d       	mov	r25, r12
    1654:	8d 2d       	mov	r24, r13
    1656:	d7 fe       	sbrs	r13, 7
    1658:	02 c0       	rjmp	.+4      	; 0x165e <vfprintf+0x2fe>
    165a:	90 e0       	ldi	r25, 0x00	; 0
    165c:	80 e0       	ldi	r24, 0x00	; 0
    165e:	69 2e       	mov	r6, r25
    1660:	78 2e       	mov	r7, r24
    1662:	40 e0       	ldi	r20, 0x00	; 0
    1664:	50 e0       	ldi	r21, 0x00	; 0
    1666:	c6 01       	movw	r24, r12
    1668:	84 19       	sub	r24, r4
    166a:	91 09       	sbc	r25, r1
    166c:	9d 87       	std	Y+13, r25	; 0x0d
    166e:	8c 87       	std	Y+12, r24	; 0x0c
    1670:	96 01       	movw	r18, r12
    1672:	26 19       	sub	r18, r6
    1674:	37 09       	sbc	r19, r7
    1676:	28 0d       	add	r18, r8
    1678:	39 1d       	adc	r19, r9
    167a:	81 2f       	mov	r24, r17
    167c:	90 e0       	ldi	r25, 0x00	; 0
    167e:	ee 27       	eor	r30, r30
    1680:	ff 27       	eor	r31, r31
    1682:	e8 1b       	sub	r30, r24
    1684:	f9 0b       	sbc	r31, r25
    1686:	ff 87       	std	Y+15, r31	; 0x0f
    1688:	ee 87       	std	Y+14, r30	; 0x0e
    168a:	ff ef       	ldi	r31, 0xFF	; 255
    168c:	6f 16       	cp	r6, r31
    168e:	7f 06       	cpc	r7, r31
    1690:	69 f4       	brne	.+26     	; 0x16ac <vfprintf+0x34c>
    1692:	b7 01       	movw	r22, r14
    1694:	8e e2       	ldi	r24, 0x2E	; 46
    1696:	90 e0       	ldi	r25, 0x00	; 0
    1698:	2b 8b       	std	Y+19, r18	; 0x13
    169a:	3a 8b       	std	Y+18, r19	; 0x12
    169c:	48 8b       	std	Y+16, r20	; 0x10
    169e:	59 8b       	std	Y+17, r21	; 0x11
    16a0:	0e 94 87 13 	call	0x270e	; 0x270e <fputc>
    16a4:	59 89       	ldd	r21, Y+17	; 0x11
    16a6:	48 89       	ldd	r20, Y+16	; 0x10
    16a8:	3a 89       	ldd	r19, Y+18	; 0x12
    16aa:	2b 89       	ldd	r18, Y+19	; 0x13
    16ac:	c6 14       	cp	r12, r6
    16ae:	d7 04       	cpc	r13, r7
    16b0:	54 f0       	brlt	.+20     	; 0x16c6 <vfprintf+0x366>
    16b2:	6c 85       	ldd	r22, Y+12	; 0x0c
    16b4:	7d 85       	ldd	r23, Y+13	; 0x0d
    16b6:	66 15       	cp	r22, r6
    16b8:	77 05       	cpc	r23, r7
    16ba:	2c f4       	brge	.+10     	; 0x16c6 <vfprintf+0x366>
    16bc:	f9 01       	movw	r30, r18
    16be:	e4 0f       	add	r30, r20
    16c0:	f5 1f       	adc	r31, r21
    16c2:	81 81       	ldd	r24, Z+1	; 0x01
    16c4:	01 c0       	rjmp	.+2      	; 0x16c8 <vfprintf+0x368>
    16c6:	80 e3       	ldi	r24, 0x30	; 48
    16c8:	71 e0       	ldi	r23, 0x01	; 1
    16ca:	67 1a       	sub	r6, r23
    16cc:	71 08       	sbc	r7, r1
    16ce:	4f 5f       	subi	r20, 0xFF	; 255
    16d0:	5f 4f       	sbci	r21, 0xFF	; 255
    16d2:	ee 85       	ldd	r30, Y+14	; 0x0e
    16d4:	ff 85       	ldd	r31, Y+15	; 0x0f
    16d6:	6e 16       	cp	r6, r30
    16d8:	7f 06       	cpc	r7, r31
    16da:	6c f0       	brlt	.+26     	; 0x16f6 <vfprintf+0x396>
    16dc:	b7 01       	movw	r22, r14
    16de:	90 e0       	ldi	r25, 0x00	; 0
    16e0:	2b 8b       	std	Y+19, r18	; 0x13
    16e2:	3a 8b       	std	Y+18, r19	; 0x12
    16e4:	48 8b       	std	Y+16, r20	; 0x10
    16e6:	59 8b       	std	Y+17, r21	; 0x11
    16e8:	0e 94 87 13 	call	0x270e	; 0x270e <fputc>
    16ec:	2b 89       	ldd	r18, Y+19	; 0x13
    16ee:	3a 89       	ldd	r19, Y+18	; 0x12
    16f0:	48 89       	ldd	r20, Y+16	; 0x10
    16f2:	59 89       	ldd	r21, Y+17	; 0x11
    16f4:	ca cf       	rjmp	.-108    	; 0x168a <vfprintf+0x32a>
    16f6:	6c 14       	cp	r6, r12
    16f8:	7d 04       	cpc	r7, r13
    16fa:	39 f4       	brne	.+14     	; 0x170a <vfprintf+0x3aa>
    16fc:	9a 81       	ldd	r25, Y+2	; 0x02
    16fe:	96 33       	cpi	r25, 0x36	; 54
    1700:	18 f4       	brcc	.+6      	; 0x1708 <vfprintf+0x3a8>
    1702:	95 33       	cpi	r25, 0x35	; 53
    1704:	11 f4       	brne	.+4      	; 0x170a <vfprintf+0x3aa>
    1706:	04 ff       	sbrs	r16, 4
    1708:	81 e3       	ldi	r24, 0x31	; 49
    170a:	b7 01       	movw	r22, r14
    170c:	90 e0       	ldi	r25, 0x00	; 0
    170e:	4b c0       	rjmp	.+150    	; 0x17a6 <vfprintf+0x446>
    1710:	8a 81       	ldd	r24, Y+2	; 0x02
    1712:	81 33       	cpi	r24, 0x31	; 49
    1714:	09 f0       	breq	.+2      	; 0x1718 <vfprintf+0x3b8>
    1716:	0f 7e       	andi	r16, 0xEF	; 239
    1718:	b7 01       	movw	r22, r14
    171a:	90 e0       	ldi	r25, 0x00	; 0
    171c:	0e 94 87 13 	call	0x270e	; 0x270e <fputc>
    1720:	11 11       	cpse	r17, r1
    1722:	05 c0       	rjmp	.+10     	; 0x172e <vfprintf+0x3ce>
    1724:	74 fe       	sbrs	r7, 4
    1726:	18 c0       	rjmp	.+48     	; 0x1758 <vfprintf+0x3f8>
    1728:	85 e4       	ldi	r24, 0x45	; 69
    172a:	90 e0       	ldi	r25, 0x00	; 0
    172c:	17 c0       	rjmp	.+46     	; 0x175c <vfprintf+0x3fc>
    172e:	b7 01       	movw	r22, r14
    1730:	8e e2       	ldi	r24, 0x2E	; 46
    1732:	90 e0       	ldi	r25, 0x00	; 0
    1734:	0e 94 87 13 	call	0x270e	; 0x270e <fputc>
    1738:	82 e0       	ldi	r24, 0x02	; 2
    173a:	66 24       	eor	r6, r6
    173c:	63 94       	inc	r6
    173e:	68 0e       	add	r6, r24
    1740:	f4 01       	movw	r30, r8
    1742:	e8 0f       	add	r30, r24
    1744:	f1 1d       	adc	r31, r1
    1746:	80 81       	ld	r24, Z
    1748:	b7 01       	movw	r22, r14
    174a:	90 e0       	ldi	r25, 0x00	; 0
    174c:	0e 94 87 13 	call	0x270e	; 0x270e <fputc>
    1750:	11 50       	subi	r17, 0x01	; 1
    1752:	41 f3       	breq	.-48     	; 0x1724 <vfprintf+0x3c4>
    1754:	86 2d       	mov	r24, r6
    1756:	f1 cf       	rjmp	.-30     	; 0x173a <vfprintf+0x3da>
    1758:	85 e6       	ldi	r24, 0x65	; 101
    175a:	90 e0       	ldi	r25, 0x00	; 0
    175c:	b7 01       	movw	r22, r14
    175e:	0e 94 87 13 	call	0x270e	; 0x270e <fputc>
    1762:	d7 fc       	sbrc	r13, 7
    1764:	05 c0       	rjmp	.+10     	; 0x1770 <vfprintf+0x410>
    1766:	c1 14       	cp	r12, r1
    1768:	d1 04       	cpc	r13, r1
    176a:	39 f4       	brne	.+14     	; 0x177a <vfprintf+0x41a>
    176c:	04 ff       	sbrs	r16, 4
    176e:	05 c0       	rjmp	.+10     	; 0x177a <vfprintf+0x41a>
    1770:	d1 94       	neg	r13
    1772:	c1 94       	neg	r12
    1774:	d1 08       	sbc	r13, r1
    1776:	8d e2       	ldi	r24, 0x2D	; 45
    1778:	01 c0       	rjmp	.+2      	; 0x177c <vfprintf+0x41c>
    177a:	8b e2       	ldi	r24, 0x2B	; 43
    177c:	b7 01       	movw	r22, r14
    177e:	90 e0       	ldi	r25, 0x00	; 0
    1780:	0e 94 87 13 	call	0x270e	; 0x270e <fputc>
    1784:	80 e3       	ldi	r24, 0x30	; 48
    1786:	6a e0       	ldi	r22, 0x0A	; 10
    1788:	c6 16       	cp	r12, r22
    178a:	d1 04       	cpc	r13, r1
    178c:	2c f0       	brlt	.+10     	; 0x1798 <vfprintf+0x438>
    178e:	8f 5f       	subi	r24, 0xFF	; 255
    1790:	fa e0       	ldi	r31, 0x0A	; 10
    1792:	cf 1a       	sub	r12, r31
    1794:	d1 08       	sbc	r13, r1
    1796:	f7 cf       	rjmp	.-18     	; 0x1786 <vfprintf+0x426>
    1798:	b7 01       	movw	r22, r14
    179a:	90 e0       	ldi	r25, 0x00	; 0
    179c:	0e 94 87 13 	call	0x270e	; 0x270e <fputc>
    17a0:	b7 01       	movw	r22, r14
    17a2:	c6 01       	movw	r24, r12
    17a4:	c0 96       	adiw	r24, 0x30	; 48
    17a6:	0e 94 87 13 	call	0x270e	; 0x270e <fputc>
    17aa:	41 c1       	rjmp	.+642    	; 0x1a2e <vfprintf+0x6ce>
    17ac:	83 36       	cpi	r24, 0x63	; 99
    17ae:	31 f0       	breq	.+12     	; 0x17bc <vfprintf+0x45c>
    17b0:	83 37       	cpi	r24, 0x73	; 115
    17b2:	79 f0       	breq	.+30     	; 0x17d2 <vfprintf+0x472>
    17b4:	83 35       	cpi	r24, 0x53	; 83
    17b6:	09 f0       	breq	.+2      	; 0x17ba <vfprintf+0x45a>
    17b8:	58 c0       	rjmp	.+176    	; 0x186a <vfprintf+0x50a>
    17ba:	21 c0       	rjmp	.+66     	; 0x17fe <vfprintf+0x49e>
    17bc:	56 01       	movw	r10, r12
    17be:	72 e0       	ldi	r23, 0x02	; 2
    17c0:	a7 0e       	add	r10, r23
    17c2:	b1 1c       	adc	r11, r1
    17c4:	f6 01       	movw	r30, r12
    17c6:	80 81       	ld	r24, Z
    17c8:	89 83       	std	Y+1, r24	; 0x01
    17ca:	01 e0       	ldi	r16, 0x01	; 1
    17cc:	10 e0       	ldi	r17, 0x00	; 0
    17ce:	64 01       	movw	r12, r8
    17d0:	14 c0       	rjmp	.+40     	; 0x17fa <vfprintf+0x49a>
    17d2:	56 01       	movw	r10, r12
    17d4:	f2 e0       	ldi	r31, 0x02	; 2
    17d6:	af 0e       	add	r10, r31
    17d8:	b1 1c       	adc	r11, r1
    17da:	f6 01       	movw	r30, r12
    17dc:	c0 80       	ld	r12, Z
    17de:	d1 80       	ldd	r13, Z+1	; 0x01
    17e0:	26 ff       	sbrs	r18, 6
    17e2:	03 c0       	rjmp	.+6      	; 0x17ea <vfprintf+0x48a>
    17e4:	61 2f       	mov	r22, r17
    17e6:	70 e0       	ldi	r23, 0x00	; 0
    17e8:	02 c0       	rjmp	.+4      	; 0x17ee <vfprintf+0x48e>
    17ea:	6f ef       	ldi	r22, 0xFF	; 255
    17ec:	7f ef       	ldi	r23, 0xFF	; 255
    17ee:	c6 01       	movw	r24, r12
    17f0:	2b 8b       	std	Y+19, r18	; 0x13
    17f2:	0e 94 62 13 	call	0x26c4	; 0x26c4 <strnlen>
    17f6:	8c 01       	movw	r16, r24
    17f8:	2b 89       	ldd	r18, Y+19	; 0x13
    17fa:	2f 77       	andi	r18, 0x7F	; 127
    17fc:	15 c0       	rjmp	.+42     	; 0x1828 <vfprintf+0x4c8>
    17fe:	56 01       	movw	r10, r12
    1800:	f2 e0       	ldi	r31, 0x02	; 2
    1802:	af 0e       	add	r10, r31
    1804:	b1 1c       	adc	r11, r1
    1806:	f6 01       	movw	r30, r12
    1808:	c0 80       	ld	r12, Z
    180a:	d1 80       	ldd	r13, Z+1	; 0x01
    180c:	26 ff       	sbrs	r18, 6
    180e:	03 c0       	rjmp	.+6      	; 0x1816 <vfprintf+0x4b6>
    1810:	61 2f       	mov	r22, r17
    1812:	70 e0       	ldi	r23, 0x00	; 0
    1814:	02 c0       	rjmp	.+4      	; 0x181a <vfprintf+0x4ba>
    1816:	6f ef       	ldi	r22, 0xFF	; 255
    1818:	7f ef       	ldi	r23, 0xFF	; 255
    181a:	c6 01       	movw	r24, r12
    181c:	2b 8b       	std	Y+19, r18	; 0x13
    181e:	0e 94 50 13 	call	0x26a0	; 0x26a0 <strnlen_P>
    1822:	8c 01       	movw	r16, r24
    1824:	2b 89       	ldd	r18, Y+19	; 0x13
    1826:	20 68       	ori	r18, 0x80	; 128
    1828:	72 2e       	mov	r7, r18
    182a:	23 fd       	sbrc	r18, 3
    182c:	1a c0       	rjmp	.+52     	; 0x1862 <vfprintf+0x502>
    182e:	85 2d       	mov	r24, r5
    1830:	90 e0       	ldi	r25, 0x00	; 0
    1832:	08 17       	cp	r16, r24
    1834:	19 07       	cpc	r17, r25
    1836:	a8 f4       	brcc	.+42     	; 0x1862 <vfprintf+0x502>
    1838:	b7 01       	movw	r22, r14
    183a:	80 e2       	ldi	r24, 0x20	; 32
    183c:	90 e0       	ldi	r25, 0x00	; 0
    183e:	0e 94 87 13 	call	0x270e	; 0x270e <fputc>
    1842:	5a 94       	dec	r5
    1844:	f4 cf       	rjmp	.-24     	; 0x182e <vfprintf+0x4ce>
    1846:	f6 01       	movw	r30, r12
    1848:	77 fc       	sbrc	r7, 7
    184a:	85 91       	lpm	r24, Z+
    184c:	77 fe       	sbrs	r7, 7
    184e:	81 91       	ld	r24, Z+
    1850:	6f 01       	movw	r12, r30
    1852:	b7 01       	movw	r22, r14
    1854:	90 e0       	ldi	r25, 0x00	; 0
    1856:	0e 94 87 13 	call	0x270e	; 0x270e <fputc>
    185a:	51 10       	cpse	r5, r1
    185c:	5a 94       	dec	r5
    185e:	01 50       	subi	r16, 0x01	; 1
    1860:	11 09       	sbc	r17, r1
    1862:	01 15       	cp	r16, r1
    1864:	11 05       	cpc	r17, r1
    1866:	79 f7       	brne	.-34     	; 0x1846 <vfprintf+0x4e6>
    1868:	e2 c0       	rjmp	.+452    	; 0x1a2e <vfprintf+0x6ce>
    186a:	84 36       	cpi	r24, 0x64	; 100
    186c:	11 f0       	breq	.+4      	; 0x1872 <vfprintf+0x512>
    186e:	89 36       	cpi	r24, 0x69	; 105
    1870:	51 f5       	brne	.+84     	; 0x18c6 <vfprintf+0x566>
    1872:	56 01       	movw	r10, r12
    1874:	27 ff       	sbrs	r18, 7
    1876:	09 c0       	rjmp	.+18     	; 0x188a <vfprintf+0x52a>
    1878:	f4 e0       	ldi	r31, 0x04	; 4
    187a:	af 0e       	add	r10, r31
    187c:	b1 1c       	adc	r11, r1
    187e:	f6 01       	movw	r30, r12
    1880:	60 81       	ld	r22, Z
    1882:	71 81       	ldd	r23, Z+1	; 0x01
    1884:	82 81       	ldd	r24, Z+2	; 0x02
    1886:	93 81       	ldd	r25, Z+3	; 0x03
    1888:	0a c0       	rjmp	.+20     	; 0x189e <vfprintf+0x53e>
    188a:	f2 e0       	ldi	r31, 0x02	; 2
    188c:	af 0e       	add	r10, r31
    188e:	b1 1c       	adc	r11, r1
    1890:	f6 01       	movw	r30, r12
    1892:	60 81       	ld	r22, Z
    1894:	71 81       	ldd	r23, Z+1	; 0x01
    1896:	88 27       	eor	r24, r24
    1898:	77 fd       	sbrc	r23, 7
    189a:	80 95       	com	r24
    189c:	98 2f       	mov	r25, r24
    189e:	02 2f       	mov	r16, r18
    18a0:	0f 76       	andi	r16, 0x6F	; 111
    18a2:	97 ff       	sbrs	r25, 7
    18a4:	08 c0       	rjmp	.+16     	; 0x18b6 <vfprintf+0x556>
    18a6:	90 95       	com	r25
    18a8:	80 95       	com	r24
    18aa:	70 95       	com	r23
    18ac:	61 95       	neg	r22
    18ae:	7f 4f       	sbci	r23, 0xFF	; 255
    18b0:	8f 4f       	sbci	r24, 0xFF	; 255
    18b2:	9f 4f       	sbci	r25, 0xFF	; 255
    18b4:	00 68       	ori	r16, 0x80	; 128
    18b6:	2a e0       	ldi	r18, 0x0A	; 10
    18b8:	30 e0       	ldi	r19, 0x00	; 0
    18ba:	a4 01       	movw	r20, r8
    18bc:	0e 94 51 14 	call	0x28a2	; 0x28a2 <__ultoa_invert>
    18c0:	c8 2e       	mov	r12, r24
    18c2:	c8 18       	sub	r12, r8
    18c4:	3e c0       	rjmp	.+124    	; 0x1942 <vfprintf+0x5e2>
    18c6:	02 2f       	mov	r16, r18
    18c8:	85 37       	cpi	r24, 0x75	; 117
    18ca:	21 f4       	brne	.+8      	; 0x18d4 <vfprintf+0x574>
    18cc:	0f 7e       	andi	r16, 0xEF	; 239
    18ce:	2a e0       	ldi	r18, 0x0A	; 10
    18d0:	30 e0       	ldi	r19, 0x00	; 0
    18d2:	1d c0       	rjmp	.+58     	; 0x190e <vfprintf+0x5ae>
    18d4:	09 7f       	andi	r16, 0xF9	; 249
    18d6:	8f 36       	cpi	r24, 0x6F	; 111
    18d8:	91 f0       	breq	.+36     	; 0x18fe <vfprintf+0x59e>
    18da:	18 f4       	brcc	.+6      	; 0x18e2 <vfprintf+0x582>
    18dc:	88 35       	cpi	r24, 0x58	; 88
    18de:	59 f0       	breq	.+22     	; 0x18f6 <vfprintf+0x596>
    18e0:	b0 c0       	rjmp	.+352    	; 0x1a42 <vfprintf+0x6e2>
    18e2:	80 37       	cpi	r24, 0x70	; 112
    18e4:	19 f0       	breq	.+6      	; 0x18ec <vfprintf+0x58c>
    18e6:	88 37       	cpi	r24, 0x78	; 120
    18e8:	11 f0       	breq	.+4      	; 0x18ee <vfprintf+0x58e>
    18ea:	ab c0       	rjmp	.+342    	; 0x1a42 <vfprintf+0x6e2>
    18ec:	00 61       	ori	r16, 0x10	; 16
    18ee:	04 ff       	sbrs	r16, 4
    18f0:	09 c0       	rjmp	.+18     	; 0x1904 <vfprintf+0x5a4>
    18f2:	04 60       	ori	r16, 0x04	; 4
    18f4:	07 c0       	rjmp	.+14     	; 0x1904 <vfprintf+0x5a4>
    18f6:	24 ff       	sbrs	r18, 4
    18f8:	08 c0       	rjmp	.+16     	; 0x190a <vfprintf+0x5aa>
    18fa:	06 60       	ori	r16, 0x06	; 6
    18fc:	06 c0       	rjmp	.+12     	; 0x190a <vfprintf+0x5aa>
    18fe:	28 e0       	ldi	r18, 0x08	; 8
    1900:	30 e0       	ldi	r19, 0x00	; 0
    1902:	05 c0       	rjmp	.+10     	; 0x190e <vfprintf+0x5ae>
    1904:	20 e1       	ldi	r18, 0x10	; 16
    1906:	30 e0       	ldi	r19, 0x00	; 0
    1908:	02 c0       	rjmp	.+4      	; 0x190e <vfprintf+0x5ae>
    190a:	20 e1       	ldi	r18, 0x10	; 16
    190c:	32 e0       	ldi	r19, 0x02	; 2
    190e:	56 01       	movw	r10, r12
    1910:	07 ff       	sbrs	r16, 7
    1912:	09 c0       	rjmp	.+18     	; 0x1926 <vfprintf+0x5c6>
    1914:	f4 e0       	ldi	r31, 0x04	; 4
    1916:	af 0e       	add	r10, r31
    1918:	b1 1c       	adc	r11, r1
    191a:	f6 01       	movw	r30, r12
    191c:	60 81       	ld	r22, Z
    191e:	71 81       	ldd	r23, Z+1	; 0x01
    1920:	82 81       	ldd	r24, Z+2	; 0x02
    1922:	93 81       	ldd	r25, Z+3	; 0x03
    1924:	08 c0       	rjmp	.+16     	; 0x1936 <vfprintf+0x5d6>
    1926:	f2 e0       	ldi	r31, 0x02	; 2
    1928:	af 0e       	add	r10, r31
    192a:	b1 1c       	adc	r11, r1
    192c:	f6 01       	movw	r30, r12
    192e:	60 81       	ld	r22, Z
    1930:	71 81       	ldd	r23, Z+1	; 0x01
    1932:	80 e0       	ldi	r24, 0x00	; 0
    1934:	90 e0       	ldi	r25, 0x00	; 0
    1936:	a4 01       	movw	r20, r8
    1938:	0e 94 51 14 	call	0x28a2	; 0x28a2 <__ultoa_invert>
    193c:	c8 2e       	mov	r12, r24
    193e:	c8 18       	sub	r12, r8
    1940:	0f 77       	andi	r16, 0x7F	; 127
    1942:	06 ff       	sbrs	r16, 6
    1944:	0b c0       	rjmp	.+22     	; 0x195c <vfprintf+0x5fc>
    1946:	20 2f       	mov	r18, r16
    1948:	2e 7f       	andi	r18, 0xFE	; 254
    194a:	c1 16       	cp	r12, r17
    194c:	50 f4       	brcc	.+20     	; 0x1962 <vfprintf+0x602>
    194e:	04 ff       	sbrs	r16, 4
    1950:	0a c0       	rjmp	.+20     	; 0x1966 <vfprintf+0x606>
    1952:	02 fd       	sbrc	r16, 2
    1954:	08 c0       	rjmp	.+16     	; 0x1966 <vfprintf+0x606>
    1956:	20 2f       	mov	r18, r16
    1958:	2e 7e       	andi	r18, 0xEE	; 238
    195a:	05 c0       	rjmp	.+10     	; 0x1966 <vfprintf+0x606>
    195c:	dc 2c       	mov	r13, r12
    195e:	20 2f       	mov	r18, r16
    1960:	03 c0       	rjmp	.+6      	; 0x1968 <vfprintf+0x608>
    1962:	dc 2c       	mov	r13, r12
    1964:	01 c0       	rjmp	.+2      	; 0x1968 <vfprintf+0x608>
    1966:	d1 2e       	mov	r13, r17
    1968:	24 ff       	sbrs	r18, 4
    196a:	0d c0       	rjmp	.+26     	; 0x1986 <vfprintf+0x626>
    196c:	fe 01       	movw	r30, r28
    196e:	ec 0d       	add	r30, r12
    1970:	f1 1d       	adc	r31, r1
    1972:	80 81       	ld	r24, Z
    1974:	80 33       	cpi	r24, 0x30	; 48
    1976:	11 f4       	brne	.+4      	; 0x197c <vfprintf+0x61c>
    1978:	29 7e       	andi	r18, 0xE9	; 233
    197a:	09 c0       	rjmp	.+18     	; 0x198e <vfprintf+0x62e>
    197c:	22 ff       	sbrs	r18, 2
    197e:	06 c0       	rjmp	.+12     	; 0x198c <vfprintf+0x62c>
    1980:	d3 94       	inc	r13
    1982:	d3 94       	inc	r13
    1984:	04 c0       	rjmp	.+8      	; 0x198e <vfprintf+0x62e>
    1986:	82 2f       	mov	r24, r18
    1988:	86 78       	andi	r24, 0x86	; 134
    198a:	09 f0       	breq	.+2      	; 0x198e <vfprintf+0x62e>
    198c:	d3 94       	inc	r13
    198e:	23 fd       	sbrc	r18, 3
    1990:	13 c0       	rjmp	.+38     	; 0x19b8 <vfprintf+0x658>
    1992:	20 ff       	sbrs	r18, 0
    1994:	06 c0       	rjmp	.+12     	; 0x19a2 <vfprintf+0x642>
    1996:	1c 2d       	mov	r17, r12
    1998:	d5 14       	cp	r13, r5
    199a:	18 f4       	brcc	.+6      	; 0x19a2 <vfprintf+0x642>
    199c:	15 0d       	add	r17, r5
    199e:	1d 19       	sub	r17, r13
    19a0:	d5 2c       	mov	r13, r5
    19a2:	d5 14       	cp	r13, r5
    19a4:	68 f4       	brcc	.+26     	; 0x19c0 <vfprintf+0x660>
    19a6:	b7 01       	movw	r22, r14
    19a8:	80 e2       	ldi	r24, 0x20	; 32
    19aa:	90 e0       	ldi	r25, 0x00	; 0
    19ac:	2b 8b       	std	Y+19, r18	; 0x13
    19ae:	0e 94 87 13 	call	0x270e	; 0x270e <fputc>
    19b2:	d3 94       	inc	r13
    19b4:	2b 89       	ldd	r18, Y+19	; 0x13
    19b6:	f5 cf       	rjmp	.-22     	; 0x19a2 <vfprintf+0x642>
    19b8:	d5 14       	cp	r13, r5
    19ba:	10 f4       	brcc	.+4      	; 0x19c0 <vfprintf+0x660>
    19bc:	5d 18       	sub	r5, r13
    19be:	01 c0       	rjmp	.+2      	; 0x19c2 <vfprintf+0x662>
    19c0:	51 2c       	mov	r5, r1
    19c2:	24 ff       	sbrs	r18, 4
    19c4:	12 c0       	rjmp	.+36     	; 0x19ea <vfprintf+0x68a>
    19c6:	b7 01       	movw	r22, r14
    19c8:	80 e3       	ldi	r24, 0x30	; 48
    19ca:	90 e0       	ldi	r25, 0x00	; 0
    19cc:	2b 8b       	std	Y+19, r18	; 0x13
    19ce:	0e 94 87 13 	call	0x270e	; 0x270e <fputc>
    19d2:	2b 89       	ldd	r18, Y+19	; 0x13
    19d4:	22 ff       	sbrs	r18, 2
    19d6:	17 c0       	rjmp	.+46     	; 0x1a06 <vfprintf+0x6a6>
    19d8:	21 ff       	sbrs	r18, 1
    19da:	03 c0       	rjmp	.+6      	; 0x19e2 <vfprintf+0x682>
    19dc:	88 e5       	ldi	r24, 0x58	; 88
    19de:	90 e0       	ldi	r25, 0x00	; 0
    19e0:	02 c0       	rjmp	.+4      	; 0x19e6 <vfprintf+0x686>
    19e2:	88 e7       	ldi	r24, 0x78	; 120
    19e4:	90 e0       	ldi	r25, 0x00	; 0
    19e6:	b7 01       	movw	r22, r14
    19e8:	0c c0       	rjmp	.+24     	; 0x1a02 <vfprintf+0x6a2>
    19ea:	82 2f       	mov	r24, r18
    19ec:	86 78       	andi	r24, 0x86	; 134
    19ee:	59 f0       	breq	.+22     	; 0x1a06 <vfprintf+0x6a6>
    19f0:	21 fd       	sbrc	r18, 1
    19f2:	02 c0       	rjmp	.+4      	; 0x19f8 <vfprintf+0x698>
    19f4:	80 e2       	ldi	r24, 0x20	; 32
    19f6:	01 c0       	rjmp	.+2      	; 0x19fa <vfprintf+0x69a>
    19f8:	8b e2       	ldi	r24, 0x2B	; 43
    19fa:	27 fd       	sbrc	r18, 7
    19fc:	8d e2       	ldi	r24, 0x2D	; 45
    19fe:	b7 01       	movw	r22, r14
    1a00:	90 e0       	ldi	r25, 0x00	; 0
    1a02:	0e 94 87 13 	call	0x270e	; 0x270e <fputc>
    1a06:	c1 16       	cp	r12, r17
    1a08:	38 f4       	brcc	.+14     	; 0x1a18 <vfprintf+0x6b8>
    1a0a:	b7 01       	movw	r22, r14
    1a0c:	80 e3       	ldi	r24, 0x30	; 48
    1a0e:	90 e0       	ldi	r25, 0x00	; 0
    1a10:	0e 94 87 13 	call	0x270e	; 0x270e <fputc>
    1a14:	11 50       	subi	r17, 0x01	; 1
    1a16:	f7 cf       	rjmp	.-18     	; 0x1a06 <vfprintf+0x6a6>
    1a18:	ca 94       	dec	r12
    1a1a:	f4 01       	movw	r30, r8
    1a1c:	ec 0d       	add	r30, r12
    1a1e:	f1 1d       	adc	r31, r1
    1a20:	80 81       	ld	r24, Z
    1a22:	b7 01       	movw	r22, r14
    1a24:	90 e0       	ldi	r25, 0x00	; 0
    1a26:	0e 94 87 13 	call	0x270e	; 0x270e <fputc>
    1a2a:	c1 10       	cpse	r12, r1
    1a2c:	f5 cf       	rjmp	.-22     	; 0x1a18 <vfprintf+0x6b8>
    1a2e:	55 20       	and	r5, r5
    1a30:	09 f4       	brne	.+2      	; 0x1a34 <vfprintf+0x6d4>
    1a32:	c2 cc       	rjmp	.-1660   	; 0x13b8 <vfprintf+0x58>
    1a34:	b7 01       	movw	r22, r14
    1a36:	80 e2       	ldi	r24, 0x20	; 32
    1a38:	90 e0       	ldi	r25, 0x00	; 0
    1a3a:	0e 94 87 13 	call	0x270e	; 0x270e <fputc>
    1a3e:	5a 94       	dec	r5
    1a40:	f6 cf       	rjmp	.-20     	; 0x1a2e <vfprintf+0x6ce>
    1a42:	f7 01       	movw	r30, r14
    1a44:	86 81       	ldd	r24, Z+6	; 0x06
    1a46:	97 81       	ldd	r25, Z+7	; 0x07
    1a48:	02 c0       	rjmp	.+4      	; 0x1a4e <vfprintf+0x6ee>
    1a4a:	8f ef       	ldi	r24, 0xFF	; 255
    1a4c:	9f ef       	ldi	r25, 0xFF	; 255
    1a4e:	63 96       	adiw	r28, 0x13	; 19
    1a50:	e2 e1       	ldi	r30, 0x12	; 18
    1a52:	0c 94 13 11 	jmp	0x2226	; 0x2226 <__epilogue_restores__>

00001a56 <__subsf3>:
    1a56:	50 58       	subi	r21, 0x80	; 128

00001a58 <__addsf3>:
    1a58:	bb 27       	eor	r27, r27
    1a5a:	aa 27       	eor	r26, r26
    1a5c:	0e d0       	rcall	.+28     	; 0x1a7a <__addsf3x>
    1a5e:	4d c1       	rjmp	.+666    	; 0x1cfa <__fp_round>
    1a60:	3e d1       	rcall	.+636    	; 0x1cde <__fp_pscA>
    1a62:	30 f0       	brcs	.+12     	; 0x1a70 <__addsf3+0x18>
    1a64:	43 d1       	rcall	.+646    	; 0x1cec <__fp_pscB>
    1a66:	20 f0       	brcs	.+8      	; 0x1a70 <__addsf3+0x18>
    1a68:	31 f4       	brne	.+12     	; 0x1a76 <__addsf3+0x1e>
    1a6a:	9f 3f       	cpi	r25, 0xFF	; 255
    1a6c:	11 f4       	brne	.+4      	; 0x1a72 <__addsf3+0x1a>
    1a6e:	1e f4       	brtc	.+6      	; 0x1a76 <__addsf3+0x1e>
    1a70:	33 c1       	rjmp	.+614    	; 0x1cd8 <__fp_nan>
    1a72:	0e f4       	brtc	.+2      	; 0x1a76 <__addsf3+0x1e>
    1a74:	e0 95       	com	r30
    1a76:	e7 fb       	bst	r30, 7
    1a78:	29 c1       	rjmp	.+594    	; 0x1ccc <__fp_inf>

00001a7a <__addsf3x>:
    1a7a:	e9 2f       	mov	r30, r25
    1a7c:	4f d1       	rcall	.+670    	; 0x1d1c <__fp_split3>
    1a7e:	80 f3       	brcs	.-32     	; 0x1a60 <__addsf3+0x8>
    1a80:	ba 17       	cp	r27, r26
    1a82:	62 07       	cpc	r22, r18
    1a84:	73 07       	cpc	r23, r19
    1a86:	84 07       	cpc	r24, r20
    1a88:	95 07       	cpc	r25, r21
    1a8a:	18 f0       	brcs	.+6      	; 0x1a92 <__addsf3x+0x18>
    1a8c:	71 f4       	brne	.+28     	; 0x1aaa <__addsf3x+0x30>
    1a8e:	9e f5       	brtc	.+102    	; 0x1af6 <__addsf3x+0x7c>
    1a90:	67 c1       	rjmp	.+718    	; 0x1d60 <__fp_zero>
    1a92:	0e f4       	brtc	.+2      	; 0x1a96 <__addsf3x+0x1c>
    1a94:	e0 95       	com	r30
    1a96:	0b 2e       	mov	r0, r27
    1a98:	ba 2f       	mov	r27, r26
    1a9a:	a0 2d       	mov	r26, r0
    1a9c:	0b 01       	movw	r0, r22
    1a9e:	b9 01       	movw	r22, r18
    1aa0:	90 01       	movw	r18, r0
    1aa2:	0c 01       	movw	r0, r24
    1aa4:	ca 01       	movw	r24, r20
    1aa6:	a0 01       	movw	r20, r0
    1aa8:	11 24       	eor	r1, r1
    1aaa:	ff 27       	eor	r31, r31
    1aac:	59 1b       	sub	r21, r25
    1aae:	99 f0       	breq	.+38     	; 0x1ad6 <__addsf3x+0x5c>
    1ab0:	59 3f       	cpi	r21, 0xF9	; 249
    1ab2:	50 f4       	brcc	.+20     	; 0x1ac8 <__addsf3x+0x4e>
    1ab4:	50 3e       	cpi	r21, 0xE0	; 224
    1ab6:	68 f1       	brcs	.+90     	; 0x1b12 <__addsf3x+0x98>
    1ab8:	1a 16       	cp	r1, r26
    1aba:	f0 40       	sbci	r31, 0x00	; 0
    1abc:	a2 2f       	mov	r26, r18
    1abe:	23 2f       	mov	r18, r19
    1ac0:	34 2f       	mov	r19, r20
    1ac2:	44 27       	eor	r20, r20
    1ac4:	58 5f       	subi	r21, 0xF8	; 248
    1ac6:	f3 cf       	rjmp	.-26     	; 0x1aae <__addsf3x+0x34>
    1ac8:	46 95       	lsr	r20
    1aca:	37 95       	ror	r19
    1acc:	27 95       	ror	r18
    1ace:	a7 95       	ror	r26
    1ad0:	f0 40       	sbci	r31, 0x00	; 0
    1ad2:	53 95       	inc	r21
    1ad4:	c9 f7       	brne	.-14     	; 0x1ac8 <__addsf3x+0x4e>
    1ad6:	7e f4       	brtc	.+30     	; 0x1af6 <__addsf3x+0x7c>
    1ad8:	1f 16       	cp	r1, r31
    1ada:	ba 0b       	sbc	r27, r26
    1adc:	62 0b       	sbc	r22, r18
    1ade:	73 0b       	sbc	r23, r19
    1ae0:	84 0b       	sbc	r24, r20
    1ae2:	ba f0       	brmi	.+46     	; 0x1b12 <__addsf3x+0x98>
    1ae4:	91 50       	subi	r25, 0x01	; 1
    1ae6:	a1 f0       	breq	.+40     	; 0x1b10 <__addsf3x+0x96>
    1ae8:	ff 0f       	add	r31, r31
    1aea:	bb 1f       	adc	r27, r27
    1aec:	66 1f       	adc	r22, r22
    1aee:	77 1f       	adc	r23, r23
    1af0:	88 1f       	adc	r24, r24
    1af2:	c2 f7       	brpl	.-16     	; 0x1ae4 <__addsf3x+0x6a>
    1af4:	0e c0       	rjmp	.+28     	; 0x1b12 <__addsf3x+0x98>
    1af6:	ba 0f       	add	r27, r26
    1af8:	62 1f       	adc	r22, r18
    1afa:	73 1f       	adc	r23, r19
    1afc:	84 1f       	adc	r24, r20
    1afe:	48 f4       	brcc	.+18     	; 0x1b12 <__addsf3x+0x98>
    1b00:	87 95       	ror	r24
    1b02:	77 95       	ror	r23
    1b04:	67 95       	ror	r22
    1b06:	b7 95       	ror	r27
    1b08:	f7 95       	ror	r31
    1b0a:	9e 3f       	cpi	r25, 0xFE	; 254
    1b0c:	08 f0       	brcs	.+2      	; 0x1b10 <__addsf3x+0x96>
    1b0e:	b3 cf       	rjmp	.-154    	; 0x1a76 <__addsf3+0x1e>
    1b10:	93 95       	inc	r25
    1b12:	88 0f       	add	r24, r24
    1b14:	08 f0       	brcs	.+2      	; 0x1b18 <__addsf3x+0x9e>
    1b16:	99 27       	eor	r25, r25
    1b18:	ee 0f       	add	r30, r30
    1b1a:	97 95       	ror	r25
    1b1c:	87 95       	ror	r24
    1b1e:	08 95       	ret

00001b20 <__divsf3>:
    1b20:	0c d0       	rcall	.+24     	; 0x1b3a <__divsf3x>
    1b22:	eb c0       	rjmp	.+470    	; 0x1cfa <__fp_round>
    1b24:	e3 d0       	rcall	.+454    	; 0x1cec <__fp_pscB>
    1b26:	40 f0       	brcs	.+16     	; 0x1b38 <__divsf3+0x18>
    1b28:	da d0       	rcall	.+436    	; 0x1cde <__fp_pscA>
    1b2a:	30 f0       	brcs	.+12     	; 0x1b38 <__divsf3+0x18>
    1b2c:	21 f4       	brne	.+8      	; 0x1b36 <__divsf3+0x16>
    1b2e:	5f 3f       	cpi	r21, 0xFF	; 255
    1b30:	19 f0       	breq	.+6      	; 0x1b38 <__divsf3+0x18>
    1b32:	cc c0       	rjmp	.+408    	; 0x1ccc <__fp_inf>
    1b34:	51 11       	cpse	r21, r1
    1b36:	15 c1       	rjmp	.+554    	; 0x1d62 <__fp_szero>
    1b38:	cf c0       	rjmp	.+414    	; 0x1cd8 <__fp_nan>

00001b3a <__divsf3x>:
    1b3a:	f0 d0       	rcall	.+480    	; 0x1d1c <__fp_split3>
    1b3c:	98 f3       	brcs	.-26     	; 0x1b24 <__divsf3+0x4>

00001b3e <__divsf3_pse>:
    1b3e:	99 23       	and	r25, r25
    1b40:	c9 f3       	breq	.-14     	; 0x1b34 <__divsf3+0x14>
    1b42:	55 23       	and	r21, r21
    1b44:	b1 f3       	breq	.-20     	; 0x1b32 <__divsf3+0x12>
    1b46:	95 1b       	sub	r25, r21
    1b48:	55 0b       	sbc	r21, r21
    1b4a:	bb 27       	eor	r27, r27
    1b4c:	aa 27       	eor	r26, r26
    1b4e:	62 17       	cp	r22, r18
    1b50:	73 07       	cpc	r23, r19
    1b52:	84 07       	cpc	r24, r20
    1b54:	38 f0       	brcs	.+14     	; 0x1b64 <__divsf3_pse+0x26>
    1b56:	9f 5f       	subi	r25, 0xFF	; 255
    1b58:	5f 4f       	sbci	r21, 0xFF	; 255
    1b5a:	22 0f       	add	r18, r18
    1b5c:	33 1f       	adc	r19, r19
    1b5e:	44 1f       	adc	r20, r20
    1b60:	aa 1f       	adc	r26, r26
    1b62:	a9 f3       	breq	.-22     	; 0x1b4e <__divsf3_pse+0x10>
    1b64:	33 d0       	rcall	.+102    	; 0x1bcc <__divsf3_pse+0x8e>
    1b66:	0e 2e       	mov	r0, r30
    1b68:	3a f0       	brmi	.+14     	; 0x1b78 <__divsf3_pse+0x3a>
    1b6a:	e0 e8       	ldi	r30, 0x80	; 128
    1b6c:	30 d0       	rcall	.+96     	; 0x1bce <__divsf3_pse+0x90>
    1b6e:	91 50       	subi	r25, 0x01	; 1
    1b70:	50 40       	sbci	r21, 0x00	; 0
    1b72:	e6 95       	lsr	r30
    1b74:	00 1c       	adc	r0, r0
    1b76:	ca f7       	brpl	.-14     	; 0x1b6a <__divsf3_pse+0x2c>
    1b78:	29 d0       	rcall	.+82     	; 0x1bcc <__divsf3_pse+0x8e>
    1b7a:	fe 2f       	mov	r31, r30
    1b7c:	27 d0       	rcall	.+78     	; 0x1bcc <__divsf3_pse+0x8e>
    1b7e:	66 0f       	add	r22, r22
    1b80:	77 1f       	adc	r23, r23
    1b82:	88 1f       	adc	r24, r24
    1b84:	bb 1f       	adc	r27, r27
    1b86:	26 17       	cp	r18, r22
    1b88:	37 07       	cpc	r19, r23
    1b8a:	48 07       	cpc	r20, r24
    1b8c:	ab 07       	cpc	r26, r27
    1b8e:	b0 e8       	ldi	r27, 0x80	; 128
    1b90:	09 f0       	breq	.+2      	; 0x1b94 <__divsf3_pse+0x56>
    1b92:	bb 0b       	sbc	r27, r27
    1b94:	80 2d       	mov	r24, r0
    1b96:	bf 01       	movw	r22, r30
    1b98:	ff 27       	eor	r31, r31
    1b9a:	93 58       	subi	r25, 0x83	; 131
    1b9c:	5f 4f       	sbci	r21, 0xFF	; 255
    1b9e:	2a f0       	brmi	.+10     	; 0x1baa <__divsf3_pse+0x6c>
    1ba0:	9e 3f       	cpi	r25, 0xFE	; 254
    1ba2:	51 05       	cpc	r21, r1
    1ba4:	68 f0       	brcs	.+26     	; 0x1bc0 <__divsf3_pse+0x82>
    1ba6:	92 c0       	rjmp	.+292    	; 0x1ccc <__fp_inf>
    1ba8:	dc c0       	rjmp	.+440    	; 0x1d62 <__fp_szero>
    1baa:	5f 3f       	cpi	r21, 0xFF	; 255
    1bac:	ec f3       	brlt	.-6      	; 0x1ba8 <__divsf3_pse+0x6a>
    1bae:	98 3e       	cpi	r25, 0xE8	; 232
    1bb0:	dc f3       	brlt	.-10     	; 0x1ba8 <__divsf3_pse+0x6a>
    1bb2:	86 95       	lsr	r24
    1bb4:	77 95       	ror	r23
    1bb6:	67 95       	ror	r22
    1bb8:	b7 95       	ror	r27
    1bba:	f7 95       	ror	r31
    1bbc:	9f 5f       	subi	r25, 0xFF	; 255
    1bbe:	c9 f7       	brne	.-14     	; 0x1bb2 <__divsf3_pse+0x74>
    1bc0:	88 0f       	add	r24, r24
    1bc2:	91 1d       	adc	r25, r1
    1bc4:	96 95       	lsr	r25
    1bc6:	87 95       	ror	r24
    1bc8:	97 f9       	bld	r25, 7
    1bca:	08 95       	ret
    1bcc:	e1 e0       	ldi	r30, 0x01	; 1
    1bce:	66 0f       	add	r22, r22
    1bd0:	77 1f       	adc	r23, r23
    1bd2:	88 1f       	adc	r24, r24
    1bd4:	bb 1f       	adc	r27, r27
    1bd6:	62 17       	cp	r22, r18
    1bd8:	73 07       	cpc	r23, r19
    1bda:	84 07       	cpc	r24, r20
    1bdc:	ba 07       	cpc	r27, r26
    1bde:	20 f0       	brcs	.+8      	; 0x1be8 <__divsf3_pse+0xaa>
    1be0:	62 1b       	sub	r22, r18
    1be2:	73 0b       	sbc	r23, r19
    1be4:	84 0b       	sbc	r24, r20
    1be6:	ba 0b       	sbc	r27, r26
    1be8:	ee 1f       	adc	r30, r30
    1bea:	88 f7       	brcc	.-30     	; 0x1bce <__divsf3_pse+0x90>
    1bec:	e0 95       	com	r30
    1bee:	08 95       	ret

00001bf0 <__fixsfsi>:
    1bf0:	04 d0       	rcall	.+8      	; 0x1bfa <__fixunssfsi>
    1bf2:	68 94       	set
    1bf4:	b1 11       	cpse	r27, r1
    1bf6:	b5 c0       	rjmp	.+362    	; 0x1d62 <__fp_szero>
    1bf8:	08 95       	ret

00001bfa <__fixunssfsi>:
    1bfa:	98 d0       	rcall	.+304    	; 0x1d2c <__fp_splitA>
    1bfc:	88 f0       	brcs	.+34     	; 0x1c20 <__fixunssfsi+0x26>
    1bfe:	9f 57       	subi	r25, 0x7F	; 127
    1c00:	90 f0       	brcs	.+36     	; 0x1c26 <__fixunssfsi+0x2c>
    1c02:	b9 2f       	mov	r27, r25
    1c04:	99 27       	eor	r25, r25
    1c06:	b7 51       	subi	r27, 0x17	; 23
    1c08:	a0 f0       	brcs	.+40     	; 0x1c32 <__fixunssfsi+0x38>
    1c0a:	d1 f0       	breq	.+52     	; 0x1c40 <__fixunssfsi+0x46>
    1c0c:	66 0f       	add	r22, r22
    1c0e:	77 1f       	adc	r23, r23
    1c10:	88 1f       	adc	r24, r24
    1c12:	99 1f       	adc	r25, r25
    1c14:	1a f0       	brmi	.+6      	; 0x1c1c <__fixunssfsi+0x22>
    1c16:	ba 95       	dec	r27
    1c18:	c9 f7       	brne	.-14     	; 0x1c0c <__fixunssfsi+0x12>
    1c1a:	12 c0       	rjmp	.+36     	; 0x1c40 <__fixunssfsi+0x46>
    1c1c:	b1 30       	cpi	r27, 0x01	; 1
    1c1e:	81 f0       	breq	.+32     	; 0x1c40 <__fixunssfsi+0x46>
    1c20:	9f d0       	rcall	.+318    	; 0x1d60 <__fp_zero>
    1c22:	b1 e0       	ldi	r27, 0x01	; 1
    1c24:	08 95       	ret
    1c26:	9c c0       	rjmp	.+312    	; 0x1d60 <__fp_zero>
    1c28:	67 2f       	mov	r22, r23
    1c2a:	78 2f       	mov	r23, r24
    1c2c:	88 27       	eor	r24, r24
    1c2e:	b8 5f       	subi	r27, 0xF8	; 248
    1c30:	39 f0       	breq	.+14     	; 0x1c40 <__fixunssfsi+0x46>
    1c32:	b9 3f       	cpi	r27, 0xF9	; 249
    1c34:	cc f3       	brlt	.-14     	; 0x1c28 <__fixunssfsi+0x2e>
    1c36:	86 95       	lsr	r24
    1c38:	77 95       	ror	r23
    1c3a:	67 95       	ror	r22
    1c3c:	b3 95       	inc	r27
    1c3e:	d9 f7       	brne	.-10     	; 0x1c36 <__fixunssfsi+0x3c>
    1c40:	3e f4       	brtc	.+14     	; 0x1c50 <__fixunssfsi+0x56>
    1c42:	90 95       	com	r25
    1c44:	80 95       	com	r24
    1c46:	70 95       	com	r23
    1c48:	61 95       	neg	r22
    1c4a:	7f 4f       	sbci	r23, 0xFF	; 255
    1c4c:	8f 4f       	sbci	r24, 0xFF	; 255
    1c4e:	9f 4f       	sbci	r25, 0xFF	; 255
    1c50:	08 95       	ret

00001c52 <__floatunsisf>:
    1c52:	e8 94       	clt
    1c54:	09 c0       	rjmp	.+18     	; 0x1c68 <__floatsisf+0x12>

00001c56 <__floatsisf>:
    1c56:	97 fb       	bst	r25, 7
    1c58:	3e f4       	brtc	.+14     	; 0x1c68 <__floatsisf+0x12>
    1c5a:	90 95       	com	r25
    1c5c:	80 95       	com	r24
    1c5e:	70 95       	com	r23
    1c60:	61 95       	neg	r22
    1c62:	7f 4f       	sbci	r23, 0xFF	; 255
    1c64:	8f 4f       	sbci	r24, 0xFF	; 255
    1c66:	9f 4f       	sbci	r25, 0xFF	; 255
    1c68:	99 23       	and	r25, r25
    1c6a:	a9 f0       	breq	.+42     	; 0x1c96 <__floatsisf+0x40>
    1c6c:	f9 2f       	mov	r31, r25
    1c6e:	96 e9       	ldi	r25, 0x96	; 150
    1c70:	bb 27       	eor	r27, r27
    1c72:	93 95       	inc	r25
    1c74:	f6 95       	lsr	r31
    1c76:	87 95       	ror	r24
    1c78:	77 95       	ror	r23
    1c7a:	67 95       	ror	r22
    1c7c:	b7 95       	ror	r27
    1c7e:	f1 11       	cpse	r31, r1
    1c80:	f8 cf       	rjmp	.-16     	; 0x1c72 <__floatsisf+0x1c>
    1c82:	fa f4       	brpl	.+62     	; 0x1cc2 <__floatsisf+0x6c>
    1c84:	bb 0f       	add	r27, r27
    1c86:	11 f4       	brne	.+4      	; 0x1c8c <__floatsisf+0x36>
    1c88:	60 ff       	sbrs	r22, 0
    1c8a:	1b c0       	rjmp	.+54     	; 0x1cc2 <__floatsisf+0x6c>
    1c8c:	6f 5f       	subi	r22, 0xFF	; 255
    1c8e:	7f 4f       	sbci	r23, 0xFF	; 255
    1c90:	8f 4f       	sbci	r24, 0xFF	; 255
    1c92:	9f 4f       	sbci	r25, 0xFF	; 255
    1c94:	16 c0       	rjmp	.+44     	; 0x1cc2 <__floatsisf+0x6c>
    1c96:	88 23       	and	r24, r24
    1c98:	11 f0       	breq	.+4      	; 0x1c9e <__floatsisf+0x48>
    1c9a:	96 e9       	ldi	r25, 0x96	; 150
    1c9c:	11 c0       	rjmp	.+34     	; 0x1cc0 <__floatsisf+0x6a>
    1c9e:	77 23       	and	r23, r23
    1ca0:	21 f0       	breq	.+8      	; 0x1caa <__floatsisf+0x54>
    1ca2:	9e e8       	ldi	r25, 0x8E	; 142
    1ca4:	87 2f       	mov	r24, r23
    1ca6:	76 2f       	mov	r23, r22
    1ca8:	05 c0       	rjmp	.+10     	; 0x1cb4 <__floatsisf+0x5e>
    1caa:	66 23       	and	r22, r22
    1cac:	71 f0       	breq	.+28     	; 0x1cca <__floatsisf+0x74>
    1cae:	96 e8       	ldi	r25, 0x86	; 134
    1cb0:	86 2f       	mov	r24, r22
    1cb2:	70 e0       	ldi	r23, 0x00	; 0
    1cb4:	60 e0       	ldi	r22, 0x00	; 0
    1cb6:	2a f0       	brmi	.+10     	; 0x1cc2 <__floatsisf+0x6c>
    1cb8:	9a 95       	dec	r25
    1cba:	66 0f       	add	r22, r22
    1cbc:	77 1f       	adc	r23, r23
    1cbe:	88 1f       	adc	r24, r24
    1cc0:	da f7       	brpl	.-10     	; 0x1cb8 <__floatsisf+0x62>
    1cc2:	88 0f       	add	r24, r24
    1cc4:	96 95       	lsr	r25
    1cc6:	87 95       	ror	r24
    1cc8:	97 f9       	bld	r25, 7
    1cca:	08 95       	ret

00001ccc <__fp_inf>:
    1ccc:	97 f9       	bld	r25, 7
    1cce:	9f 67       	ori	r25, 0x7F	; 127
    1cd0:	80 e8       	ldi	r24, 0x80	; 128
    1cd2:	70 e0       	ldi	r23, 0x00	; 0
    1cd4:	60 e0       	ldi	r22, 0x00	; 0
    1cd6:	08 95       	ret

00001cd8 <__fp_nan>:
    1cd8:	9f ef       	ldi	r25, 0xFF	; 255
    1cda:	80 ec       	ldi	r24, 0xC0	; 192
    1cdc:	08 95       	ret

00001cde <__fp_pscA>:
    1cde:	00 24       	eor	r0, r0
    1ce0:	0a 94       	dec	r0
    1ce2:	16 16       	cp	r1, r22
    1ce4:	17 06       	cpc	r1, r23
    1ce6:	18 06       	cpc	r1, r24
    1ce8:	09 06       	cpc	r0, r25
    1cea:	08 95       	ret

00001cec <__fp_pscB>:
    1cec:	00 24       	eor	r0, r0
    1cee:	0a 94       	dec	r0
    1cf0:	12 16       	cp	r1, r18
    1cf2:	13 06       	cpc	r1, r19
    1cf4:	14 06       	cpc	r1, r20
    1cf6:	05 06       	cpc	r0, r21
    1cf8:	08 95       	ret

00001cfa <__fp_round>:
    1cfa:	09 2e       	mov	r0, r25
    1cfc:	03 94       	inc	r0
    1cfe:	00 0c       	add	r0, r0
    1d00:	11 f4       	brne	.+4      	; 0x1d06 <__fp_round+0xc>
    1d02:	88 23       	and	r24, r24
    1d04:	52 f0       	brmi	.+20     	; 0x1d1a <__fp_round+0x20>
    1d06:	bb 0f       	add	r27, r27
    1d08:	40 f4       	brcc	.+16     	; 0x1d1a <__fp_round+0x20>
    1d0a:	bf 2b       	or	r27, r31
    1d0c:	11 f4       	brne	.+4      	; 0x1d12 <__fp_round+0x18>
    1d0e:	60 ff       	sbrs	r22, 0
    1d10:	04 c0       	rjmp	.+8      	; 0x1d1a <__fp_round+0x20>
    1d12:	6f 5f       	subi	r22, 0xFF	; 255
    1d14:	7f 4f       	sbci	r23, 0xFF	; 255
    1d16:	8f 4f       	sbci	r24, 0xFF	; 255
    1d18:	9f 4f       	sbci	r25, 0xFF	; 255
    1d1a:	08 95       	ret

00001d1c <__fp_split3>:
    1d1c:	57 fd       	sbrc	r21, 7
    1d1e:	90 58       	subi	r25, 0x80	; 128
    1d20:	44 0f       	add	r20, r20
    1d22:	55 1f       	adc	r21, r21
    1d24:	59 f0       	breq	.+22     	; 0x1d3c <__fp_splitA+0x10>
    1d26:	5f 3f       	cpi	r21, 0xFF	; 255
    1d28:	71 f0       	breq	.+28     	; 0x1d46 <__fp_splitA+0x1a>
    1d2a:	47 95       	ror	r20

00001d2c <__fp_splitA>:
    1d2c:	88 0f       	add	r24, r24
    1d2e:	97 fb       	bst	r25, 7
    1d30:	99 1f       	adc	r25, r25
    1d32:	61 f0       	breq	.+24     	; 0x1d4c <__fp_splitA+0x20>
    1d34:	9f 3f       	cpi	r25, 0xFF	; 255
    1d36:	79 f0       	breq	.+30     	; 0x1d56 <__fp_splitA+0x2a>
    1d38:	87 95       	ror	r24
    1d3a:	08 95       	ret
    1d3c:	12 16       	cp	r1, r18
    1d3e:	13 06       	cpc	r1, r19
    1d40:	14 06       	cpc	r1, r20
    1d42:	55 1f       	adc	r21, r21
    1d44:	f2 cf       	rjmp	.-28     	; 0x1d2a <__fp_split3+0xe>
    1d46:	46 95       	lsr	r20
    1d48:	f1 df       	rcall	.-30     	; 0x1d2c <__fp_splitA>
    1d4a:	08 c0       	rjmp	.+16     	; 0x1d5c <__fp_splitA+0x30>
    1d4c:	16 16       	cp	r1, r22
    1d4e:	17 06       	cpc	r1, r23
    1d50:	18 06       	cpc	r1, r24
    1d52:	99 1f       	adc	r25, r25
    1d54:	f1 cf       	rjmp	.-30     	; 0x1d38 <__fp_splitA+0xc>
    1d56:	86 95       	lsr	r24
    1d58:	71 05       	cpc	r23, r1
    1d5a:	61 05       	cpc	r22, r1
    1d5c:	08 94       	sec
    1d5e:	08 95       	ret

00001d60 <__fp_zero>:
    1d60:	e8 94       	clt

00001d62 <__fp_szero>:
    1d62:	bb 27       	eor	r27, r27
    1d64:	66 27       	eor	r22, r22
    1d66:	77 27       	eor	r23, r23
    1d68:	cb 01       	movw	r24, r22
    1d6a:	97 f9       	bld	r25, 7
    1d6c:	08 95       	ret

00001d6e <__mulsf3>:
    1d6e:	0b d0       	rcall	.+22     	; 0x1d86 <__mulsf3x>
    1d70:	c4 cf       	rjmp	.-120    	; 0x1cfa <__fp_round>
    1d72:	b5 df       	rcall	.-150    	; 0x1cde <__fp_pscA>
    1d74:	28 f0       	brcs	.+10     	; 0x1d80 <__mulsf3+0x12>
    1d76:	ba df       	rcall	.-140    	; 0x1cec <__fp_pscB>
    1d78:	18 f0       	brcs	.+6      	; 0x1d80 <__mulsf3+0x12>
    1d7a:	95 23       	and	r25, r21
    1d7c:	09 f0       	breq	.+2      	; 0x1d80 <__mulsf3+0x12>
    1d7e:	a6 cf       	rjmp	.-180    	; 0x1ccc <__fp_inf>
    1d80:	ab cf       	rjmp	.-170    	; 0x1cd8 <__fp_nan>
    1d82:	11 24       	eor	r1, r1
    1d84:	ee cf       	rjmp	.-36     	; 0x1d62 <__fp_szero>

00001d86 <__mulsf3x>:
    1d86:	ca df       	rcall	.-108    	; 0x1d1c <__fp_split3>
    1d88:	a0 f3       	brcs	.-24     	; 0x1d72 <__mulsf3+0x4>

00001d8a <__mulsf3_pse>:
    1d8a:	95 9f       	mul	r25, r21
    1d8c:	d1 f3       	breq	.-12     	; 0x1d82 <__mulsf3+0x14>
    1d8e:	95 0f       	add	r25, r21
    1d90:	50 e0       	ldi	r21, 0x00	; 0
    1d92:	55 1f       	adc	r21, r21
    1d94:	62 9f       	mul	r22, r18
    1d96:	f0 01       	movw	r30, r0
    1d98:	72 9f       	mul	r23, r18
    1d9a:	bb 27       	eor	r27, r27
    1d9c:	f0 0d       	add	r31, r0
    1d9e:	b1 1d       	adc	r27, r1
    1da0:	63 9f       	mul	r22, r19
    1da2:	aa 27       	eor	r26, r26
    1da4:	f0 0d       	add	r31, r0
    1da6:	b1 1d       	adc	r27, r1
    1da8:	aa 1f       	adc	r26, r26
    1daa:	64 9f       	mul	r22, r20
    1dac:	66 27       	eor	r22, r22
    1dae:	b0 0d       	add	r27, r0
    1db0:	a1 1d       	adc	r26, r1
    1db2:	66 1f       	adc	r22, r22
    1db4:	82 9f       	mul	r24, r18
    1db6:	22 27       	eor	r18, r18
    1db8:	b0 0d       	add	r27, r0
    1dba:	a1 1d       	adc	r26, r1
    1dbc:	62 1f       	adc	r22, r18
    1dbe:	73 9f       	mul	r23, r19
    1dc0:	b0 0d       	add	r27, r0
    1dc2:	a1 1d       	adc	r26, r1
    1dc4:	62 1f       	adc	r22, r18
    1dc6:	83 9f       	mul	r24, r19
    1dc8:	a0 0d       	add	r26, r0
    1dca:	61 1d       	adc	r22, r1
    1dcc:	22 1f       	adc	r18, r18
    1dce:	74 9f       	mul	r23, r20
    1dd0:	33 27       	eor	r19, r19
    1dd2:	a0 0d       	add	r26, r0
    1dd4:	61 1d       	adc	r22, r1
    1dd6:	23 1f       	adc	r18, r19
    1dd8:	84 9f       	mul	r24, r20
    1dda:	60 0d       	add	r22, r0
    1ddc:	21 1d       	adc	r18, r1
    1dde:	82 2f       	mov	r24, r18
    1de0:	76 2f       	mov	r23, r22
    1de2:	6a 2f       	mov	r22, r26
    1de4:	11 24       	eor	r1, r1
    1de6:	9f 57       	subi	r25, 0x7F	; 127
    1de8:	50 40       	sbci	r21, 0x00	; 0
    1dea:	8a f0       	brmi	.+34     	; 0x1e0e <__mulsf3_pse+0x84>
    1dec:	e1 f0       	breq	.+56     	; 0x1e26 <__mulsf3_pse+0x9c>
    1dee:	88 23       	and	r24, r24
    1df0:	4a f0       	brmi	.+18     	; 0x1e04 <__mulsf3_pse+0x7a>
    1df2:	ee 0f       	add	r30, r30
    1df4:	ff 1f       	adc	r31, r31
    1df6:	bb 1f       	adc	r27, r27
    1df8:	66 1f       	adc	r22, r22
    1dfa:	77 1f       	adc	r23, r23
    1dfc:	88 1f       	adc	r24, r24
    1dfe:	91 50       	subi	r25, 0x01	; 1
    1e00:	50 40       	sbci	r21, 0x00	; 0
    1e02:	a9 f7       	brne	.-22     	; 0x1dee <__mulsf3_pse+0x64>
    1e04:	9e 3f       	cpi	r25, 0xFE	; 254
    1e06:	51 05       	cpc	r21, r1
    1e08:	70 f0       	brcs	.+28     	; 0x1e26 <__mulsf3_pse+0x9c>
    1e0a:	60 cf       	rjmp	.-320    	; 0x1ccc <__fp_inf>
    1e0c:	aa cf       	rjmp	.-172    	; 0x1d62 <__fp_szero>
    1e0e:	5f 3f       	cpi	r21, 0xFF	; 255
    1e10:	ec f3       	brlt	.-6      	; 0x1e0c <__mulsf3_pse+0x82>
    1e12:	98 3e       	cpi	r25, 0xE8	; 232
    1e14:	dc f3       	brlt	.-10     	; 0x1e0c <__mulsf3_pse+0x82>
    1e16:	86 95       	lsr	r24
    1e18:	77 95       	ror	r23
    1e1a:	67 95       	ror	r22
    1e1c:	b7 95       	ror	r27
    1e1e:	f7 95       	ror	r31
    1e20:	e7 95       	ror	r30
    1e22:	9f 5f       	subi	r25, 0xFF	; 255
    1e24:	c1 f7       	brne	.-16     	; 0x1e16 <__mulsf3_pse+0x8c>
    1e26:	fe 2b       	or	r31, r30
    1e28:	88 0f       	add	r24, r24
    1e2a:	91 1d       	adc	r25, r1
    1e2c:	96 95       	lsr	r25
    1e2e:	87 95       	ror	r24
    1e30:	97 f9       	bld	r25, 7
    1e32:	08 95       	ret

00001e34 <pow>:
    1e34:	fa 01       	movw	r30, r20
    1e36:	ee 0f       	add	r30, r30
    1e38:	ff 1f       	adc	r31, r31
    1e3a:	30 96       	adiw	r30, 0x00	; 0
    1e3c:	21 05       	cpc	r18, r1
    1e3e:	31 05       	cpc	r19, r1
    1e40:	99 f1       	breq	.+102    	; 0x1ea8 <pow+0x74>
    1e42:	61 15       	cp	r22, r1
    1e44:	71 05       	cpc	r23, r1
    1e46:	61 f4       	brne	.+24     	; 0x1e60 <pow+0x2c>
    1e48:	80 38       	cpi	r24, 0x80	; 128
    1e4a:	bf e3       	ldi	r27, 0x3F	; 63
    1e4c:	9b 07       	cpc	r25, r27
    1e4e:	49 f1       	breq	.+82     	; 0x1ea2 <pow+0x6e>
    1e50:	68 94       	set
    1e52:	90 38       	cpi	r25, 0x80	; 128
    1e54:	81 05       	cpc	r24, r1
    1e56:	61 f0       	breq	.+24     	; 0x1e70 <pow+0x3c>
    1e58:	80 38       	cpi	r24, 0x80	; 128
    1e5a:	bf ef       	ldi	r27, 0xFF	; 255
    1e5c:	9b 07       	cpc	r25, r27
    1e5e:	41 f0       	breq	.+16     	; 0x1e70 <pow+0x3c>
    1e60:	99 23       	and	r25, r25
    1e62:	42 f5       	brpl	.+80     	; 0x1eb4 <pow+0x80>
    1e64:	ff 3f       	cpi	r31, 0xFF	; 255
    1e66:	e1 05       	cpc	r30, r1
    1e68:	31 05       	cpc	r19, r1
    1e6a:	21 05       	cpc	r18, r1
    1e6c:	11 f1       	breq	.+68     	; 0x1eb2 <pow+0x7e>
    1e6e:	e8 94       	clt
    1e70:	08 94       	sec
    1e72:	e7 95       	ror	r30
    1e74:	d9 01       	movw	r26, r18
    1e76:	aa 23       	and	r26, r26
    1e78:	29 f4       	brne	.+10     	; 0x1e84 <pow+0x50>
    1e7a:	ab 2f       	mov	r26, r27
    1e7c:	be 2f       	mov	r27, r30
    1e7e:	f8 5f       	subi	r31, 0xF8	; 248
    1e80:	d0 f3       	brcs	.-12     	; 0x1e76 <pow+0x42>
    1e82:	10 c0       	rjmp	.+32     	; 0x1ea4 <pow+0x70>
    1e84:	ff 5f       	subi	r31, 0xFF	; 255
    1e86:	70 f4       	brcc	.+28     	; 0x1ea4 <pow+0x70>
    1e88:	a6 95       	lsr	r26
    1e8a:	e0 f7       	brcc	.-8      	; 0x1e84 <pow+0x50>
    1e8c:	f7 39       	cpi	r31, 0x97	; 151
    1e8e:	50 f0       	brcs	.+20     	; 0x1ea4 <pow+0x70>
    1e90:	19 f0       	breq	.+6      	; 0x1e98 <pow+0x64>
    1e92:	ff 3a       	cpi	r31, 0xAF	; 175
    1e94:	38 f4       	brcc	.+14     	; 0x1ea4 <pow+0x70>
    1e96:	9f 77       	andi	r25, 0x7F	; 127
    1e98:	9f 93       	push	r25
    1e9a:	0c d0       	rcall	.+24     	; 0x1eb4 <pow+0x80>
    1e9c:	0f 90       	pop	r0
    1e9e:	07 fc       	sbrc	r0, 7
    1ea0:	90 58       	subi	r25, 0x80	; 128
    1ea2:	08 95       	ret
    1ea4:	3e f0       	brts	.+14     	; 0x1eb4 <pow+0x80>
    1ea6:	18 cf       	rjmp	.-464    	; 0x1cd8 <__fp_nan>
    1ea8:	60 e0       	ldi	r22, 0x00	; 0
    1eaa:	70 e0       	ldi	r23, 0x00	; 0
    1eac:	80 e8       	ldi	r24, 0x80	; 128
    1eae:	9f e3       	ldi	r25, 0x3F	; 63
    1eb0:	08 95       	ret
    1eb2:	4f e7       	ldi	r20, 0x7F	; 127
    1eb4:	9f 77       	andi	r25, 0x7F	; 127
    1eb6:	5f 93       	push	r21
    1eb8:	4f 93       	push	r20
    1eba:	3f 93       	push	r19
    1ebc:	2f 93       	push	r18
    1ebe:	9e d0       	rcall	.+316    	; 0x1ffc <log>
    1ec0:	2f 91       	pop	r18
    1ec2:	3f 91       	pop	r19
    1ec4:	4f 91       	pop	r20
    1ec6:	5f 91       	pop	r21
    1ec8:	52 df       	rcall	.-348    	; 0x1d6e <__mulsf3>
    1eca:	05 c0       	rjmp	.+10     	; 0x1ed6 <exp>
    1ecc:	19 f4       	brne	.+6      	; 0x1ed4 <pow+0xa0>
    1ece:	0e f0       	brts	.+2      	; 0x1ed2 <pow+0x9e>
    1ed0:	fd ce       	rjmp	.-518    	; 0x1ccc <__fp_inf>
    1ed2:	46 cf       	rjmp	.-372    	; 0x1d60 <__fp_zero>
    1ed4:	01 cf       	rjmp	.-510    	; 0x1cd8 <__fp_nan>

00001ed6 <exp>:
    1ed6:	2a df       	rcall	.-428    	; 0x1d2c <__fp_splitA>
    1ed8:	c8 f3       	brcs	.-14     	; 0x1ecc <pow+0x98>
    1eda:	96 38       	cpi	r25, 0x86	; 134
    1edc:	c0 f7       	brcc	.-16     	; 0x1ece <pow+0x9a>
    1ede:	07 f8       	bld	r0, 7
    1ee0:	0f 92       	push	r0
    1ee2:	e8 94       	clt
    1ee4:	2b e3       	ldi	r18, 0x3B	; 59
    1ee6:	3a ea       	ldi	r19, 0xAA	; 170
    1ee8:	48 eb       	ldi	r20, 0xB8	; 184
    1eea:	5f e7       	ldi	r21, 0x7F	; 127
    1eec:	4e df       	rcall	.-356    	; 0x1d8a <__mulsf3_pse>
    1eee:	0f 92       	push	r0
    1ef0:	0f 92       	push	r0
    1ef2:	0f 92       	push	r0
    1ef4:	4d b7       	in	r20, 0x3d	; 61
    1ef6:	5e b7       	in	r21, 0x3e	; 62
    1ef8:	0f 92       	push	r0
    1efa:	c0 d0       	rcall	.+384    	; 0x207c <modf>
    1efc:	e8 e6       	ldi	r30, 0x68	; 104
    1efe:	f0 e0       	ldi	r31, 0x00	; 0
    1f00:	16 d0       	rcall	.+44     	; 0x1f2e <__fp_powser>
    1f02:	4f 91       	pop	r20
    1f04:	5f 91       	pop	r21
    1f06:	ef 91       	pop	r30
    1f08:	ff 91       	pop	r31
    1f0a:	e5 95       	asr	r30
    1f0c:	ee 1f       	adc	r30, r30
    1f0e:	ff 1f       	adc	r31, r31
    1f10:	49 f0       	breq	.+18     	; 0x1f24 <exp+0x4e>
    1f12:	fe 57       	subi	r31, 0x7E	; 126
    1f14:	e0 68       	ori	r30, 0x80	; 128
    1f16:	44 27       	eor	r20, r20
    1f18:	ee 0f       	add	r30, r30
    1f1a:	44 1f       	adc	r20, r20
    1f1c:	fa 95       	dec	r31
    1f1e:	e1 f7       	brne	.-8      	; 0x1f18 <exp+0x42>
    1f20:	41 95       	neg	r20
    1f22:	55 0b       	sbc	r21, r21
    1f24:	32 d0       	rcall	.+100    	; 0x1f8a <ldexp>
    1f26:	0f 90       	pop	r0
    1f28:	07 fe       	sbrs	r0, 7
    1f2a:	26 c0       	rjmp	.+76     	; 0x1f78 <inverse>
    1f2c:	08 95       	ret

00001f2e <__fp_powser>:
    1f2e:	df 93       	push	r29
    1f30:	cf 93       	push	r28
    1f32:	1f 93       	push	r17
    1f34:	0f 93       	push	r16
    1f36:	ff 92       	push	r15
    1f38:	ef 92       	push	r14
    1f3a:	df 92       	push	r13
    1f3c:	7b 01       	movw	r14, r22
    1f3e:	8c 01       	movw	r16, r24
    1f40:	68 94       	set
    1f42:	05 c0       	rjmp	.+10     	; 0x1f4e <__fp_powser+0x20>
    1f44:	da 2e       	mov	r13, r26
    1f46:	ef 01       	movw	r28, r30
    1f48:	1e df       	rcall	.-452    	; 0x1d86 <__mulsf3x>
    1f4a:	fe 01       	movw	r30, r28
    1f4c:	e8 94       	clt
    1f4e:	a5 91       	lpm	r26, Z+
    1f50:	25 91       	lpm	r18, Z+
    1f52:	35 91       	lpm	r19, Z+
    1f54:	45 91       	lpm	r20, Z+
    1f56:	55 91       	lpm	r21, Z+
    1f58:	ae f3       	brts	.-22     	; 0x1f44 <__fp_powser+0x16>
    1f5a:	ef 01       	movw	r28, r30
    1f5c:	8e dd       	rcall	.-1252   	; 0x1a7a <__addsf3x>
    1f5e:	fe 01       	movw	r30, r28
    1f60:	97 01       	movw	r18, r14
    1f62:	a8 01       	movw	r20, r16
    1f64:	da 94       	dec	r13
    1f66:	79 f7       	brne	.-34     	; 0x1f46 <__fp_powser+0x18>
    1f68:	df 90       	pop	r13
    1f6a:	ef 90       	pop	r14
    1f6c:	ff 90       	pop	r15
    1f6e:	0f 91       	pop	r16
    1f70:	1f 91       	pop	r17
    1f72:	cf 91       	pop	r28
    1f74:	df 91       	pop	r29
    1f76:	08 95       	ret

00001f78 <inverse>:
    1f78:	9b 01       	movw	r18, r22
    1f7a:	ac 01       	movw	r20, r24
    1f7c:	60 e0       	ldi	r22, 0x00	; 0
    1f7e:	70 e0       	ldi	r23, 0x00	; 0
    1f80:	80 e8       	ldi	r24, 0x80	; 128
    1f82:	9f e3       	ldi	r25, 0x3F	; 63
    1f84:	cd cd       	rjmp	.-1126   	; 0x1b20 <__divsf3>
    1f86:	a2 ce       	rjmp	.-700    	; 0x1ccc <__fp_inf>
    1f88:	ac c0       	rjmp	.+344    	; 0x20e2 <__fp_mpack>

00001f8a <ldexp>:
    1f8a:	d0 de       	rcall	.-608    	; 0x1d2c <__fp_splitA>
    1f8c:	e8 f3       	brcs	.-6      	; 0x1f88 <inverse+0x10>
    1f8e:	99 23       	and	r25, r25
    1f90:	d9 f3       	breq	.-10     	; 0x1f88 <inverse+0x10>
    1f92:	94 0f       	add	r25, r20
    1f94:	51 1d       	adc	r21, r1
    1f96:	bb f3       	brvs	.-18     	; 0x1f86 <inverse+0xe>
    1f98:	91 50       	subi	r25, 0x01	; 1
    1f9a:	50 40       	sbci	r21, 0x00	; 0
    1f9c:	94 f0       	brlt	.+36     	; 0x1fc2 <ldexp+0x38>
    1f9e:	59 f0       	breq	.+22     	; 0x1fb6 <ldexp+0x2c>
    1fa0:	88 23       	and	r24, r24
    1fa2:	32 f0       	brmi	.+12     	; 0x1fb0 <ldexp+0x26>
    1fa4:	66 0f       	add	r22, r22
    1fa6:	77 1f       	adc	r23, r23
    1fa8:	88 1f       	adc	r24, r24
    1faa:	91 50       	subi	r25, 0x01	; 1
    1fac:	50 40       	sbci	r21, 0x00	; 0
    1fae:	c1 f7       	brne	.-16     	; 0x1fa0 <ldexp+0x16>
    1fb0:	9e 3f       	cpi	r25, 0xFE	; 254
    1fb2:	51 05       	cpc	r21, r1
    1fb4:	44 f7       	brge	.-48     	; 0x1f86 <inverse+0xe>
    1fb6:	88 0f       	add	r24, r24
    1fb8:	91 1d       	adc	r25, r1
    1fba:	96 95       	lsr	r25
    1fbc:	87 95       	ror	r24
    1fbe:	97 f9       	bld	r25, 7
    1fc0:	08 95       	ret
    1fc2:	5f 3f       	cpi	r21, 0xFF	; 255
    1fc4:	ac f0       	brlt	.+42     	; 0x1ff0 <ldexp+0x66>
    1fc6:	98 3e       	cpi	r25, 0xE8	; 232
    1fc8:	9c f0       	brlt	.+38     	; 0x1ff0 <ldexp+0x66>
    1fca:	bb 27       	eor	r27, r27
    1fcc:	86 95       	lsr	r24
    1fce:	77 95       	ror	r23
    1fd0:	67 95       	ror	r22
    1fd2:	b7 95       	ror	r27
    1fd4:	08 f4       	brcc	.+2      	; 0x1fd8 <ldexp+0x4e>
    1fd6:	b1 60       	ori	r27, 0x01	; 1
    1fd8:	93 95       	inc	r25
    1fda:	c1 f7       	brne	.-16     	; 0x1fcc <ldexp+0x42>
    1fdc:	bb 0f       	add	r27, r27
    1fde:	58 f7       	brcc	.-42     	; 0x1fb6 <ldexp+0x2c>
    1fe0:	11 f4       	brne	.+4      	; 0x1fe6 <ldexp+0x5c>
    1fe2:	60 ff       	sbrs	r22, 0
    1fe4:	e8 cf       	rjmp	.-48     	; 0x1fb6 <ldexp+0x2c>
    1fe6:	6f 5f       	subi	r22, 0xFF	; 255
    1fe8:	7f 4f       	sbci	r23, 0xFF	; 255
    1fea:	8f 4f       	sbci	r24, 0xFF	; 255
    1fec:	9f 4f       	sbci	r25, 0xFF	; 255
    1fee:	e3 cf       	rjmp	.-58     	; 0x1fb6 <ldexp+0x2c>
    1ff0:	b8 ce       	rjmp	.-656    	; 0x1d62 <__fp_szero>
    1ff2:	0e f0       	brts	.+2      	; 0x1ff6 <ldexp+0x6c>
    1ff4:	76 c0       	rjmp	.+236    	; 0x20e2 <__fp_mpack>
    1ff6:	70 ce       	rjmp	.-800    	; 0x1cd8 <__fp_nan>
    1ff8:	68 94       	set
    1ffa:	68 ce       	rjmp	.-816    	; 0x1ccc <__fp_inf>

00001ffc <log>:
    1ffc:	97 de       	rcall	.-722    	; 0x1d2c <__fp_splitA>
    1ffe:	c8 f3       	brcs	.-14     	; 0x1ff2 <ldexp+0x68>
    2000:	99 23       	and	r25, r25
    2002:	d1 f3       	breq	.-12     	; 0x1ff8 <ldexp+0x6e>
    2004:	c6 f3       	brts	.-16     	; 0x1ff6 <ldexp+0x6c>
    2006:	df 93       	push	r29
    2008:	cf 93       	push	r28
    200a:	1f 93       	push	r17
    200c:	0f 93       	push	r16
    200e:	ff 92       	push	r15
    2010:	c9 2f       	mov	r28, r25
    2012:	dd 27       	eor	r29, r29
    2014:	88 23       	and	r24, r24
    2016:	2a f0       	brmi	.+10     	; 0x2022 <log+0x26>
    2018:	21 97       	sbiw	r28, 0x01	; 1
    201a:	66 0f       	add	r22, r22
    201c:	77 1f       	adc	r23, r23
    201e:	88 1f       	adc	r24, r24
    2020:	da f7       	brpl	.-10     	; 0x2018 <log+0x1c>
    2022:	20 e0       	ldi	r18, 0x00	; 0
    2024:	30 e0       	ldi	r19, 0x00	; 0
    2026:	40 e8       	ldi	r20, 0x80	; 128
    2028:	5f eb       	ldi	r21, 0xBF	; 191
    202a:	9f e3       	ldi	r25, 0x3F	; 63
    202c:	88 39       	cpi	r24, 0x98	; 152
    202e:	20 f0       	brcs	.+8      	; 0x2038 <log+0x3c>
    2030:	80 3e       	cpi	r24, 0xE0	; 224
    2032:	30 f0       	brcs	.+12     	; 0x2040 <log+0x44>
    2034:	21 96       	adiw	r28, 0x01	; 1
    2036:	8f 77       	andi	r24, 0x7F	; 127
    2038:	0f dd       	rcall	.-1506   	; 0x1a58 <__addsf3>
    203a:	e0 e9       	ldi	r30, 0x90	; 144
    203c:	f0 e0       	ldi	r31, 0x00	; 0
    203e:	03 c0       	rjmp	.+6      	; 0x2046 <log+0x4a>
    2040:	0b dd       	rcall	.-1514   	; 0x1a58 <__addsf3>
    2042:	ed eb       	ldi	r30, 0xBD	; 189
    2044:	f0 e0       	ldi	r31, 0x00	; 0
    2046:	73 df       	rcall	.-282    	; 0x1f2e <__fp_powser>
    2048:	8b 01       	movw	r16, r22
    204a:	be 01       	movw	r22, r28
    204c:	ec 01       	movw	r28, r24
    204e:	fb 2e       	mov	r15, r27
    2050:	6f 57       	subi	r22, 0x7F	; 127
    2052:	71 09       	sbc	r23, r1
    2054:	75 95       	asr	r23
    2056:	77 1f       	adc	r23, r23
    2058:	88 0b       	sbc	r24, r24
    205a:	99 0b       	sbc	r25, r25
    205c:	fc dd       	rcall	.-1032   	; 0x1c56 <__floatsisf>
    205e:	28 e1       	ldi	r18, 0x18	; 24
    2060:	32 e7       	ldi	r19, 0x72	; 114
    2062:	41 e3       	ldi	r20, 0x31	; 49
    2064:	5f e3       	ldi	r21, 0x3F	; 63
    2066:	8f de       	rcall	.-738    	; 0x1d86 <__mulsf3x>
    2068:	af 2d       	mov	r26, r15
    206a:	98 01       	movw	r18, r16
    206c:	ae 01       	movw	r20, r28
    206e:	ff 90       	pop	r15
    2070:	0f 91       	pop	r16
    2072:	1f 91       	pop	r17
    2074:	cf 91       	pop	r28
    2076:	df 91       	pop	r29
    2078:	00 dd       	rcall	.-1536   	; 0x1a7a <__addsf3x>
    207a:	3f ce       	rjmp	.-898    	; 0x1cfa <__fp_round>

0000207c <modf>:
    207c:	fa 01       	movw	r30, r20
    207e:	dc 01       	movw	r26, r24
    2080:	aa 0f       	add	r26, r26
    2082:	bb 1f       	adc	r27, r27
    2084:	9b 01       	movw	r18, r22
    2086:	ac 01       	movw	r20, r24
    2088:	bf 57       	subi	r27, 0x7F	; 127
    208a:	28 f4       	brcc	.+10     	; 0x2096 <modf+0x1a>
    208c:	22 27       	eor	r18, r18
    208e:	33 27       	eor	r19, r19
    2090:	44 27       	eor	r20, r20
    2092:	50 78       	andi	r21, 0x80	; 128
    2094:	1f c0       	rjmp	.+62     	; 0x20d4 <modf+0x58>
    2096:	b7 51       	subi	r27, 0x17	; 23
    2098:	88 f4       	brcc	.+34     	; 0x20bc <modf+0x40>
    209a:	ab 2f       	mov	r26, r27
    209c:	00 24       	eor	r0, r0
    209e:	46 95       	lsr	r20
    20a0:	37 95       	ror	r19
    20a2:	27 95       	ror	r18
    20a4:	01 1c       	adc	r0, r1
    20a6:	a3 95       	inc	r26
    20a8:	d2 f3       	brmi	.-12     	; 0x209e <modf+0x22>
    20aa:	00 20       	and	r0, r0
    20ac:	69 f0       	breq	.+26     	; 0x20c8 <modf+0x4c>
    20ae:	22 0f       	add	r18, r18
    20b0:	33 1f       	adc	r19, r19
    20b2:	44 1f       	adc	r20, r20
    20b4:	b3 95       	inc	r27
    20b6:	da f3       	brmi	.-10     	; 0x20ae <modf+0x32>
    20b8:	0d d0       	rcall	.+26     	; 0x20d4 <modf+0x58>
    20ba:	cd cc       	rjmp	.-1638   	; 0x1a56 <__subsf3>
    20bc:	61 30       	cpi	r22, 0x01	; 1
    20be:	71 05       	cpc	r23, r1
    20c0:	a0 e8       	ldi	r26, 0x80	; 128
    20c2:	8a 07       	cpc	r24, r26
    20c4:	b9 46       	sbci	r27, 0x69	; 105
    20c6:	30 f4       	brcc	.+12     	; 0x20d4 <modf+0x58>
    20c8:	9b 01       	movw	r18, r22
    20ca:	ac 01       	movw	r20, r24
    20cc:	66 27       	eor	r22, r22
    20ce:	77 27       	eor	r23, r23
    20d0:	88 27       	eor	r24, r24
    20d2:	90 78       	andi	r25, 0x80	; 128
    20d4:	30 96       	adiw	r30, 0x00	; 0
    20d6:	21 f0       	breq	.+8      	; 0x20e0 <modf+0x64>
    20d8:	20 83       	st	Z, r18
    20da:	31 83       	std	Z+1, r19	; 0x01
    20dc:	42 83       	std	Z+2, r20	; 0x02
    20de:	53 83       	std	Z+3, r21	; 0x03
    20e0:	08 95       	ret

000020e2 <__fp_mpack>:
    20e2:	9f 3f       	cpi	r25, 0xFF	; 255
    20e4:	31 f0       	breq	.+12     	; 0x20f2 <__fp_mpack_finite+0xc>

000020e6 <__fp_mpack_finite>:
    20e6:	91 50       	subi	r25, 0x01	; 1
    20e8:	20 f4       	brcc	.+8      	; 0x20f2 <__fp_mpack_finite+0xc>
    20ea:	87 95       	ror	r24
    20ec:	77 95       	ror	r23
    20ee:	67 95       	ror	r22
    20f0:	b7 95       	ror	r27
    20f2:	88 0f       	add	r24, r24
    20f4:	91 1d       	adc	r25, r1
    20f6:	96 95       	lsr	r25
    20f8:	87 95       	ror	r24
    20fa:	97 f9       	bld	r25, 7
    20fc:	08 95       	ret

000020fe <__mulsi3>:
    20fe:	db 01       	movw	r26, r22
    2100:	8f 93       	push	r24
    2102:	9f 93       	push	r25
    2104:	0e 94 e4 10 	call	0x21c8	; 0x21c8 <__muluhisi3>
    2108:	bf 91       	pop	r27
    210a:	af 91       	pop	r26
    210c:	a2 9f       	mul	r26, r18
    210e:	80 0d       	add	r24, r0
    2110:	91 1d       	adc	r25, r1
    2112:	a3 9f       	mul	r26, r19
    2114:	90 0d       	add	r25, r0
    2116:	b2 9f       	mul	r27, r18
    2118:	90 0d       	add	r25, r0
    211a:	11 24       	eor	r1, r1
    211c:	08 95       	ret

0000211e <__divmodhi4>:
    211e:	97 fb       	bst	r25, 7
    2120:	07 2e       	mov	r0, r23
    2122:	16 f4       	brtc	.+4      	; 0x2128 <__divmodhi4+0xa>
    2124:	00 94       	com	r0
    2126:	07 d0       	rcall	.+14     	; 0x2136 <__divmodhi4_neg1>
    2128:	77 fd       	sbrc	r23, 7
    212a:	09 d0       	rcall	.+18     	; 0x213e <__divmodhi4_neg2>
    212c:	0e 94 2e 11 	call	0x225c	; 0x225c <__udivmodhi4>
    2130:	07 fc       	sbrc	r0, 7
    2132:	05 d0       	rcall	.+10     	; 0x213e <__divmodhi4_neg2>
    2134:	3e f4       	brtc	.+14     	; 0x2144 <__divmodhi4_exit>

00002136 <__divmodhi4_neg1>:
    2136:	90 95       	com	r25
    2138:	81 95       	neg	r24
    213a:	9f 4f       	sbci	r25, 0xFF	; 255
    213c:	08 95       	ret

0000213e <__divmodhi4_neg2>:
    213e:	70 95       	com	r23
    2140:	61 95       	neg	r22
    2142:	7f 4f       	sbci	r23, 0xFF	; 255

00002144 <__divmodhi4_exit>:
    2144:	08 95       	ret

00002146 <__udivmodsi4>:
    2146:	a1 e2       	ldi	r26, 0x21	; 33
    2148:	1a 2e       	mov	r1, r26
    214a:	aa 1b       	sub	r26, r26
    214c:	bb 1b       	sub	r27, r27
    214e:	fd 01       	movw	r30, r26
    2150:	0d c0       	rjmp	.+26     	; 0x216c <__udivmodsi4_ep>

00002152 <__udivmodsi4_loop>:
    2152:	aa 1f       	adc	r26, r26
    2154:	bb 1f       	adc	r27, r27
    2156:	ee 1f       	adc	r30, r30
    2158:	ff 1f       	adc	r31, r31
    215a:	a2 17       	cp	r26, r18
    215c:	b3 07       	cpc	r27, r19
    215e:	e4 07       	cpc	r30, r20
    2160:	f5 07       	cpc	r31, r21
    2162:	20 f0       	brcs	.+8      	; 0x216c <__udivmodsi4_ep>
    2164:	a2 1b       	sub	r26, r18
    2166:	b3 0b       	sbc	r27, r19
    2168:	e4 0b       	sbc	r30, r20
    216a:	f5 0b       	sbc	r31, r21

0000216c <__udivmodsi4_ep>:
    216c:	66 1f       	adc	r22, r22
    216e:	77 1f       	adc	r23, r23
    2170:	88 1f       	adc	r24, r24
    2172:	99 1f       	adc	r25, r25
    2174:	1a 94       	dec	r1
    2176:	69 f7       	brne	.-38     	; 0x2152 <__udivmodsi4_loop>
    2178:	60 95       	com	r22
    217a:	70 95       	com	r23
    217c:	80 95       	com	r24
    217e:	90 95       	com	r25
    2180:	9b 01       	movw	r18, r22
    2182:	ac 01       	movw	r20, r24
    2184:	bd 01       	movw	r22, r26
    2186:	cf 01       	movw	r24, r30
    2188:	08 95       	ret

0000218a <__divmodsi4>:
    218a:	05 2e       	mov	r0, r21
    218c:	97 fb       	bst	r25, 7
    218e:	1e f4       	brtc	.+6      	; 0x2196 <__divmodsi4+0xc>
    2190:	00 94       	com	r0
    2192:	0e 94 dc 10 	call	0x21b8	; 0x21b8 <__negsi2>
    2196:	57 fd       	sbrc	r21, 7
    2198:	07 d0       	rcall	.+14     	; 0x21a8 <__divmodsi4_neg2>
    219a:	0e 94 a3 10 	call	0x2146	; 0x2146 <__udivmodsi4>
    219e:	07 fc       	sbrc	r0, 7
    21a0:	03 d0       	rcall	.+6      	; 0x21a8 <__divmodsi4_neg2>
    21a2:	4e f4       	brtc	.+18     	; 0x21b6 <__divmodsi4_exit>
    21a4:	0c 94 dc 10 	jmp	0x21b8	; 0x21b8 <__negsi2>

000021a8 <__divmodsi4_neg2>:
    21a8:	50 95       	com	r21
    21aa:	40 95       	com	r20
    21ac:	30 95       	com	r19
    21ae:	21 95       	neg	r18
    21b0:	3f 4f       	sbci	r19, 0xFF	; 255
    21b2:	4f 4f       	sbci	r20, 0xFF	; 255
    21b4:	5f 4f       	sbci	r21, 0xFF	; 255

000021b6 <__divmodsi4_exit>:
    21b6:	08 95       	ret

000021b8 <__negsi2>:
    21b8:	90 95       	com	r25
    21ba:	80 95       	com	r24
    21bc:	70 95       	com	r23
    21be:	61 95       	neg	r22
    21c0:	7f 4f       	sbci	r23, 0xFF	; 255
    21c2:	8f 4f       	sbci	r24, 0xFF	; 255
    21c4:	9f 4f       	sbci	r25, 0xFF	; 255
    21c6:	08 95       	ret

000021c8 <__muluhisi3>:
    21c8:	0e 94 42 11 	call	0x2284	; 0x2284 <__umulhisi3>
    21cc:	a5 9f       	mul	r26, r21
    21ce:	90 0d       	add	r25, r0
    21d0:	b4 9f       	mul	r27, r20
    21d2:	90 0d       	add	r25, r0
    21d4:	a4 9f       	mul	r26, r20
    21d6:	80 0d       	add	r24, r0
    21d8:	91 1d       	adc	r25, r1
    21da:	11 24       	eor	r1, r1
    21dc:	08 95       	ret

000021de <__mulshisi3>:
    21de:	b7 ff       	sbrs	r27, 7
    21e0:	0c 94 e4 10 	jmp	0x21c8	; 0x21c8 <__muluhisi3>

000021e4 <__mulohisi3>:
    21e4:	0e 94 e4 10 	call	0x21c8	; 0x21c8 <__muluhisi3>
    21e8:	82 1b       	sub	r24, r18
    21ea:	93 0b       	sbc	r25, r19
    21ec:	08 95       	ret

000021ee <__prologue_saves__>:
    21ee:	2f 92       	push	r2
    21f0:	3f 92       	push	r3
    21f2:	4f 92       	push	r4
    21f4:	5f 92       	push	r5
    21f6:	6f 92       	push	r6
    21f8:	7f 92       	push	r7
    21fa:	8f 92       	push	r8
    21fc:	9f 92       	push	r9
    21fe:	af 92       	push	r10
    2200:	bf 92       	push	r11
    2202:	cf 92       	push	r12
    2204:	df 92       	push	r13
    2206:	ef 92       	push	r14
    2208:	ff 92       	push	r15
    220a:	0f 93       	push	r16
    220c:	1f 93       	push	r17
    220e:	cf 93       	push	r28
    2210:	df 93       	push	r29
    2212:	cd b7       	in	r28, 0x3d	; 61
    2214:	de b7       	in	r29, 0x3e	; 62
    2216:	ca 1b       	sub	r28, r26
    2218:	db 0b       	sbc	r29, r27
    221a:	0f b6       	in	r0, 0x3f	; 63
    221c:	f8 94       	cli
    221e:	de bf       	out	0x3e, r29	; 62
    2220:	0f be       	out	0x3f, r0	; 63
    2222:	cd bf       	out	0x3d, r28	; 61
    2224:	09 94       	ijmp

00002226 <__epilogue_restores__>:
    2226:	2a 88       	ldd	r2, Y+18	; 0x12
    2228:	39 88       	ldd	r3, Y+17	; 0x11
    222a:	48 88       	ldd	r4, Y+16	; 0x10
    222c:	5f 84       	ldd	r5, Y+15	; 0x0f
    222e:	6e 84       	ldd	r6, Y+14	; 0x0e
    2230:	7d 84       	ldd	r7, Y+13	; 0x0d
    2232:	8c 84       	ldd	r8, Y+12	; 0x0c
    2234:	9b 84       	ldd	r9, Y+11	; 0x0b
    2236:	aa 84       	ldd	r10, Y+10	; 0x0a
    2238:	b9 84       	ldd	r11, Y+9	; 0x09
    223a:	c8 84       	ldd	r12, Y+8	; 0x08
    223c:	df 80       	ldd	r13, Y+7	; 0x07
    223e:	ee 80       	ldd	r14, Y+6	; 0x06
    2240:	fd 80       	ldd	r15, Y+5	; 0x05
    2242:	0c 81       	ldd	r16, Y+4	; 0x04
    2244:	1b 81       	ldd	r17, Y+3	; 0x03
    2246:	aa 81       	ldd	r26, Y+2	; 0x02
    2248:	b9 81       	ldd	r27, Y+1	; 0x01
    224a:	ce 0f       	add	r28, r30
    224c:	d1 1d       	adc	r29, r1
    224e:	0f b6       	in	r0, 0x3f	; 63
    2250:	f8 94       	cli
    2252:	de bf       	out	0x3e, r29	; 62
    2254:	0f be       	out	0x3f, r0	; 63
    2256:	cd bf       	out	0x3d, r28	; 61
    2258:	ed 01       	movw	r28, r26
    225a:	08 95       	ret

0000225c <__udivmodhi4>:
    225c:	aa 1b       	sub	r26, r26
    225e:	bb 1b       	sub	r27, r27
    2260:	51 e1       	ldi	r21, 0x11	; 17
    2262:	07 c0       	rjmp	.+14     	; 0x2272 <__udivmodhi4_ep>

00002264 <__udivmodhi4_loop>:
    2264:	aa 1f       	adc	r26, r26
    2266:	bb 1f       	adc	r27, r27
    2268:	a6 17       	cp	r26, r22
    226a:	b7 07       	cpc	r27, r23
    226c:	10 f0       	brcs	.+4      	; 0x2272 <__udivmodhi4_ep>
    226e:	a6 1b       	sub	r26, r22
    2270:	b7 0b       	sbc	r27, r23

00002272 <__udivmodhi4_ep>:
    2272:	88 1f       	adc	r24, r24
    2274:	99 1f       	adc	r25, r25
    2276:	5a 95       	dec	r21
    2278:	a9 f7       	brne	.-22     	; 0x2264 <__udivmodhi4_loop>
    227a:	80 95       	com	r24
    227c:	90 95       	com	r25
    227e:	bc 01       	movw	r22, r24
    2280:	cd 01       	movw	r24, r26
    2282:	08 95       	ret

00002284 <__umulhisi3>:
    2284:	a2 9f       	mul	r26, r18
    2286:	b0 01       	movw	r22, r0
    2288:	b3 9f       	mul	r27, r19
    228a:	c0 01       	movw	r24, r0
    228c:	a3 9f       	mul	r26, r19
    228e:	70 0d       	add	r23, r0
    2290:	81 1d       	adc	r24, r1
    2292:	11 24       	eor	r1, r1
    2294:	91 1d       	adc	r25, r1
    2296:	b2 9f       	mul	r27, r18
    2298:	70 0d       	add	r23, r0
    229a:	81 1d       	adc	r24, r1
    229c:	11 24       	eor	r1, r1
    229e:	91 1d       	adc	r25, r1
    22a0:	08 95       	ret

000022a2 <malloc>:
    22a2:	cf 93       	push	r28
    22a4:	df 93       	push	r29
    22a6:	82 30       	cpi	r24, 0x02	; 2
    22a8:	91 05       	cpc	r25, r1
    22aa:	10 f4       	brcc	.+4      	; 0x22b0 <malloc+0xe>
    22ac:	82 e0       	ldi	r24, 0x02	; 2
    22ae:	90 e0       	ldi	r25, 0x00	; 0
    22b0:	e0 91 22 03 	lds	r30, 0x0322
    22b4:	f0 91 23 03 	lds	r31, 0x0323
    22b8:	20 e0       	ldi	r18, 0x00	; 0
    22ba:	30 e0       	ldi	r19, 0x00	; 0
    22bc:	a0 e0       	ldi	r26, 0x00	; 0
    22be:	b0 e0       	ldi	r27, 0x00	; 0
    22c0:	30 97       	sbiw	r30, 0x00	; 0
    22c2:	39 f1       	breq	.+78     	; 0x2312 <malloc+0x70>
    22c4:	40 81       	ld	r20, Z
    22c6:	51 81       	ldd	r21, Z+1	; 0x01
    22c8:	48 17       	cp	r20, r24
    22ca:	59 07       	cpc	r21, r25
    22cc:	b8 f0       	brcs	.+46     	; 0x22fc <malloc+0x5a>
    22ce:	48 17       	cp	r20, r24
    22d0:	59 07       	cpc	r21, r25
    22d2:	71 f4       	brne	.+28     	; 0x22f0 <malloc+0x4e>
    22d4:	82 81       	ldd	r24, Z+2	; 0x02
    22d6:	93 81       	ldd	r25, Z+3	; 0x03
    22d8:	10 97       	sbiw	r26, 0x00	; 0
    22da:	29 f0       	breq	.+10     	; 0x22e6 <malloc+0x44>
    22dc:	13 96       	adiw	r26, 0x03	; 3
    22de:	9c 93       	st	X, r25
    22e0:	8e 93       	st	-X, r24
    22e2:	12 97       	sbiw	r26, 0x02	; 2
    22e4:	2c c0       	rjmp	.+88     	; 0x233e <malloc+0x9c>
    22e6:	90 93 23 03 	sts	0x0323, r25
    22ea:	80 93 22 03 	sts	0x0322, r24
    22ee:	27 c0       	rjmp	.+78     	; 0x233e <malloc+0x9c>
    22f0:	21 15       	cp	r18, r1
    22f2:	31 05       	cpc	r19, r1
    22f4:	31 f0       	breq	.+12     	; 0x2302 <malloc+0x60>
    22f6:	42 17       	cp	r20, r18
    22f8:	53 07       	cpc	r21, r19
    22fa:	18 f0       	brcs	.+6      	; 0x2302 <malloc+0x60>
    22fc:	a9 01       	movw	r20, r18
    22fe:	db 01       	movw	r26, r22
    2300:	01 c0       	rjmp	.+2      	; 0x2304 <malloc+0x62>
    2302:	ef 01       	movw	r28, r30
    2304:	9a 01       	movw	r18, r20
    2306:	bd 01       	movw	r22, r26
    2308:	df 01       	movw	r26, r30
    230a:	02 80       	ldd	r0, Z+2	; 0x02
    230c:	f3 81       	ldd	r31, Z+3	; 0x03
    230e:	e0 2d       	mov	r30, r0
    2310:	d7 cf       	rjmp	.-82     	; 0x22c0 <malloc+0x1e>
    2312:	21 15       	cp	r18, r1
    2314:	31 05       	cpc	r19, r1
    2316:	f9 f0       	breq	.+62     	; 0x2356 <malloc+0xb4>
    2318:	28 1b       	sub	r18, r24
    231a:	39 0b       	sbc	r19, r25
    231c:	24 30       	cpi	r18, 0x04	; 4
    231e:	31 05       	cpc	r19, r1
    2320:	80 f4       	brcc	.+32     	; 0x2342 <malloc+0xa0>
    2322:	8a 81       	ldd	r24, Y+2	; 0x02
    2324:	9b 81       	ldd	r25, Y+3	; 0x03
    2326:	61 15       	cp	r22, r1
    2328:	71 05       	cpc	r23, r1
    232a:	21 f0       	breq	.+8      	; 0x2334 <malloc+0x92>
    232c:	fb 01       	movw	r30, r22
    232e:	93 83       	std	Z+3, r25	; 0x03
    2330:	82 83       	std	Z+2, r24	; 0x02
    2332:	04 c0       	rjmp	.+8      	; 0x233c <malloc+0x9a>
    2334:	90 93 23 03 	sts	0x0323, r25
    2338:	80 93 22 03 	sts	0x0322, r24
    233c:	fe 01       	movw	r30, r28
    233e:	32 96       	adiw	r30, 0x02	; 2
    2340:	44 c0       	rjmp	.+136    	; 0x23ca <malloc+0x128>
    2342:	fe 01       	movw	r30, r28
    2344:	e2 0f       	add	r30, r18
    2346:	f3 1f       	adc	r31, r19
    2348:	81 93       	st	Z+, r24
    234a:	91 93       	st	Z+, r25
    234c:	22 50       	subi	r18, 0x02	; 2
    234e:	31 09       	sbc	r19, r1
    2350:	39 83       	std	Y+1, r19	; 0x01
    2352:	28 83       	st	Y, r18
    2354:	3a c0       	rjmp	.+116    	; 0x23ca <malloc+0x128>
    2356:	20 91 20 03 	lds	r18, 0x0320
    235a:	30 91 21 03 	lds	r19, 0x0321
    235e:	23 2b       	or	r18, r19
    2360:	41 f4       	brne	.+16     	; 0x2372 <malloc+0xd0>
    2362:	20 91 10 01 	lds	r18, 0x0110
    2366:	30 91 11 01 	lds	r19, 0x0111
    236a:	30 93 21 03 	sts	0x0321, r19
    236e:	20 93 20 03 	sts	0x0320, r18
    2372:	20 91 0e 01 	lds	r18, 0x010E
    2376:	30 91 0f 01 	lds	r19, 0x010F
    237a:	21 15       	cp	r18, r1
    237c:	31 05       	cpc	r19, r1
    237e:	41 f4       	brne	.+16     	; 0x2390 <malloc+0xee>
    2380:	2d b7       	in	r18, 0x3d	; 61
    2382:	3e b7       	in	r19, 0x3e	; 62
    2384:	40 91 12 01 	lds	r20, 0x0112
    2388:	50 91 13 01 	lds	r21, 0x0113
    238c:	24 1b       	sub	r18, r20
    238e:	35 0b       	sbc	r19, r21
    2390:	e0 91 20 03 	lds	r30, 0x0320
    2394:	f0 91 21 03 	lds	r31, 0x0321
    2398:	e2 17       	cp	r30, r18
    239a:	f3 07       	cpc	r31, r19
    239c:	a0 f4       	brcc	.+40     	; 0x23c6 <malloc+0x124>
    239e:	2e 1b       	sub	r18, r30
    23a0:	3f 0b       	sbc	r19, r31
    23a2:	28 17       	cp	r18, r24
    23a4:	39 07       	cpc	r19, r25
    23a6:	78 f0       	brcs	.+30     	; 0x23c6 <malloc+0x124>
    23a8:	ac 01       	movw	r20, r24
    23aa:	4e 5f       	subi	r20, 0xFE	; 254
    23ac:	5f 4f       	sbci	r21, 0xFF	; 255
    23ae:	24 17       	cp	r18, r20
    23b0:	35 07       	cpc	r19, r21
    23b2:	48 f0       	brcs	.+18     	; 0x23c6 <malloc+0x124>
    23b4:	4e 0f       	add	r20, r30
    23b6:	5f 1f       	adc	r21, r31
    23b8:	50 93 21 03 	sts	0x0321, r21
    23bc:	40 93 20 03 	sts	0x0320, r20
    23c0:	81 93       	st	Z+, r24
    23c2:	91 93       	st	Z+, r25
    23c4:	02 c0       	rjmp	.+4      	; 0x23ca <malloc+0x128>
    23c6:	e0 e0       	ldi	r30, 0x00	; 0
    23c8:	f0 e0       	ldi	r31, 0x00	; 0
    23ca:	cf 01       	movw	r24, r30
    23cc:	df 91       	pop	r29
    23ce:	cf 91       	pop	r28
    23d0:	08 95       	ret

000023d2 <free>:
    23d2:	cf 93       	push	r28
    23d4:	df 93       	push	r29
    23d6:	00 97       	sbiw	r24, 0x00	; 0
    23d8:	09 f4       	brne	.+2      	; 0x23dc <free+0xa>
    23da:	87 c0       	rjmp	.+270    	; 0x24ea <free+0x118>
    23dc:	fc 01       	movw	r30, r24
    23de:	32 97       	sbiw	r30, 0x02	; 2
    23e0:	13 82       	std	Z+3, r1	; 0x03
    23e2:	12 82       	std	Z+2, r1	; 0x02
    23e4:	c0 91 22 03 	lds	r28, 0x0322
    23e8:	d0 91 23 03 	lds	r29, 0x0323
    23ec:	20 97       	sbiw	r28, 0x00	; 0
    23ee:	81 f4       	brne	.+32     	; 0x2410 <free+0x3e>
    23f0:	20 81       	ld	r18, Z
    23f2:	31 81       	ldd	r19, Z+1	; 0x01
    23f4:	28 0f       	add	r18, r24
    23f6:	39 1f       	adc	r19, r25
    23f8:	80 91 20 03 	lds	r24, 0x0320
    23fc:	90 91 21 03 	lds	r25, 0x0321
    2400:	82 17       	cp	r24, r18
    2402:	93 07       	cpc	r25, r19
    2404:	79 f5       	brne	.+94     	; 0x2464 <free+0x92>
    2406:	f0 93 21 03 	sts	0x0321, r31
    240a:	e0 93 20 03 	sts	0x0320, r30
    240e:	6d c0       	rjmp	.+218    	; 0x24ea <free+0x118>
    2410:	de 01       	movw	r26, r28
    2412:	20 e0       	ldi	r18, 0x00	; 0
    2414:	30 e0       	ldi	r19, 0x00	; 0
    2416:	ae 17       	cp	r26, r30
    2418:	bf 07       	cpc	r27, r31
    241a:	50 f4       	brcc	.+20     	; 0x2430 <free+0x5e>
    241c:	12 96       	adiw	r26, 0x02	; 2
    241e:	4d 91       	ld	r20, X+
    2420:	5c 91       	ld	r21, X
    2422:	13 97       	sbiw	r26, 0x03	; 3
    2424:	9d 01       	movw	r18, r26
    2426:	41 15       	cp	r20, r1
    2428:	51 05       	cpc	r21, r1
    242a:	09 f1       	breq	.+66     	; 0x246e <free+0x9c>
    242c:	da 01       	movw	r26, r20
    242e:	f3 cf       	rjmp	.-26     	; 0x2416 <free+0x44>
    2430:	b3 83       	std	Z+3, r27	; 0x03
    2432:	a2 83       	std	Z+2, r26	; 0x02
    2434:	40 81       	ld	r20, Z
    2436:	51 81       	ldd	r21, Z+1	; 0x01
    2438:	84 0f       	add	r24, r20
    243a:	95 1f       	adc	r25, r21
    243c:	8a 17       	cp	r24, r26
    243e:	9b 07       	cpc	r25, r27
    2440:	71 f4       	brne	.+28     	; 0x245e <free+0x8c>
    2442:	8d 91       	ld	r24, X+
    2444:	9c 91       	ld	r25, X
    2446:	11 97       	sbiw	r26, 0x01	; 1
    2448:	84 0f       	add	r24, r20
    244a:	95 1f       	adc	r25, r21
    244c:	02 96       	adiw	r24, 0x02	; 2
    244e:	91 83       	std	Z+1, r25	; 0x01
    2450:	80 83       	st	Z, r24
    2452:	12 96       	adiw	r26, 0x02	; 2
    2454:	8d 91       	ld	r24, X+
    2456:	9c 91       	ld	r25, X
    2458:	13 97       	sbiw	r26, 0x03	; 3
    245a:	93 83       	std	Z+3, r25	; 0x03
    245c:	82 83       	std	Z+2, r24	; 0x02
    245e:	21 15       	cp	r18, r1
    2460:	31 05       	cpc	r19, r1
    2462:	29 f4       	brne	.+10     	; 0x246e <free+0x9c>
    2464:	f0 93 23 03 	sts	0x0323, r31
    2468:	e0 93 22 03 	sts	0x0322, r30
    246c:	3e c0       	rjmp	.+124    	; 0x24ea <free+0x118>
    246e:	d9 01       	movw	r26, r18
    2470:	13 96       	adiw	r26, 0x03	; 3
    2472:	fc 93       	st	X, r31
    2474:	ee 93       	st	-X, r30
    2476:	12 97       	sbiw	r26, 0x02	; 2
    2478:	4d 91       	ld	r20, X+
    247a:	5d 91       	ld	r21, X+
    247c:	a4 0f       	add	r26, r20
    247e:	b5 1f       	adc	r27, r21
    2480:	ea 17       	cp	r30, r26
    2482:	fb 07       	cpc	r31, r27
    2484:	79 f4       	brne	.+30     	; 0x24a4 <free+0xd2>
    2486:	80 81       	ld	r24, Z
    2488:	91 81       	ldd	r25, Z+1	; 0x01
    248a:	84 0f       	add	r24, r20
    248c:	95 1f       	adc	r25, r21
    248e:	02 96       	adiw	r24, 0x02	; 2
    2490:	d9 01       	movw	r26, r18
    2492:	11 96       	adiw	r26, 0x01	; 1
    2494:	9c 93       	st	X, r25
    2496:	8e 93       	st	-X, r24
    2498:	82 81       	ldd	r24, Z+2	; 0x02
    249a:	93 81       	ldd	r25, Z+3	; 0x03
    249c:	13 96       	adiw	r26, 0x03	; 3
    249e:	9c 93       	st	X, r25
    24a0:	8e 93       	st	-X, r24
    24a2:	12 97       	sbiw	r26, 0x02	; 2
    24a4:	e0 e0       	ldi	r30, 0x00	; 0
    24a6:	f0 e0       	ldi	r31, 0x00	; 0
    24a8:	8a 81       	ldd	r24, Y+2	; 0x02
    24aa:	9b 81       	ldd	r25, Y+3	; 0x03
    24ac:	00 97       	sbiw	r24, 0x00	; 0
    24ae:	19 f0       	breq	.+6      	; 0x24b6 <free+0xe4>
    24b0:	fe 01       	movw	r30, r28
    24b2:	ec 01       	movw	r28, r24
    24b4:	f9 cf       	rjmp	.-14     	; 0x24a8 <free+0xd6>
    24b6:	ce 01       	movw	r24, r28
    24b8:	02 96       	adiw	r24, 0x02	; 2
    24ba:	28 81       	ld	r18, Y
    24bc:	39 81       	ldd	r19, Y+1	; 0x01
    24be:	82 0f       	add	r24, r18
    24c0:	93 1f       	adc	r25, r19
    24c2:	20 91 20 03 	lds	r18, 0x0320
    24c6:	30 91 21 03 	lds	r19, 0x0321
    24ca:	28 17       	cp	r18, r24
    24cc:	39 07       	cpc	r19, r25
    24ce:	69 f4       	brne	.+26     	; 0x24ea <free+0x118>
    24d0:	30 97       	sbiw	r30, 0x00	; 0
    24d2:	29 f4       	brne	.+10     	; 0x24de <free+0x10c>
    24d4:	10 92 23 03 	sts	0x0323, r1
    24d8:	10 92 22 03 	sts	0x0322, r1
    24dc:	02 c0       	rjmp	.+4      	; 0x24e2 <free+0x110>
    24de:	13 82       	std	Z+3, r1	; 0x03
    24e0:	12 82       	std	Z+2, r1	; 0x02
    24e2:	d0 93 21 03 	sts	0x0321, r29
    24e6:	c0 93 20 03 	sts	0x0320, r28
    24ea:	df 91       	pop	r29
    24ec:	cf 91       	pop	r28
    24ee:	08 95       	ret

000024f0 <__ftoa_engine>:
    24f0:	28 30       	cpi	r18, 0x08	; 8
    24f2:	08 f0       	brcs	.+2      	; 0x24f6 <__ftoa_engine+0x6>
    24f4:	27 e0       	ldi	r18, 0x07	; 7
    24f6:	33 27       	eor	r19, r19
    24f8:	da 01       	movw	r26, r20
    24fa:	99 0f       	add	r25, r25
    24fc:	31 1d       	adc	r19, r1
    24fe:	87 fd       	sbrc	r24, 7
    2500:	91 60       	ori	r25, 0x01	; 1
    2502:	00 96       	adiw	r24, 0x00	; 0
    2504:	61 05       	cpc	r22, r1
    2506:	71 05       	cpc	r23, r1
    2508:	39 f4       	brne	.+14     	; 0x2518 <__ftoa_engine+0x28>
    250a:	32 60       	ori	r19, 0x02	; 2
    250c:	2e 5f       	subi	r18, 0xFE	; 254
    250e:	3d 93       	st	X+, r19
    2510:	30 e3       	ldi	r19, 0x30	; 48
    2512:	2a 95       	dec	r18
    2514:	e1 f7       	brne	.-8      	; 0x250e <__ftoa_engine+0x1e>
    2516:	08 95       	ret
    2518:	9f 3f       	cpi	r25, 0xFF	; 255
    251a:	30 f0       	brcs	.+12     	; 0x2528 <__ftoa_engine+0x38>
    251c:	80 38       	cpi	r24, 0x80	; 128
    251e:	71 05       	cpc	r23, r1
    2520:	61 05       	cpc	r22, r1
    2522:	09 f0       	breq	.+2      	; 0x2526 <__ftoa_engine+0x36>
    2524:	3c 5f       	subi	r19, 0xFC	; 252
    2526:	3c 5f       	subi	r19, 0xFC	; 252
    2528:	3d 93       	st	X+, r19
    252a:	91 30       	cpi	r25, 0x01	; 1
    252c:	08 f0       	brcs	.+2      	; 0x2530 <__ftoa_engine+0x40>
    252e:	80 68       	ori	r24, 0x80	; 128
    2530:	91 1d       	adc	r25, r1
    2532:	df 93       	push	r29
    2534:	cf 93       	push	r28
    2536:	1f 93       	push	r17
    2538:	0f 93       	push	r16
    253a:	ff 92       	push	r15
    253c:	ef 92       	push	r14
    253e:	19 2f       	mov	r17, r25
    2540:	98 7f       	andi	r25, 0xF8	; 248
    2542:	96 95       	lsr	r25
    2544:	e9 2f       	mov	r30, r25
    2546:	96 95       	lsr	r25
    2548:	96 95       	lsr	r25
    254a:	e9 0f       	add	r30, r25
    254c:	ff 27       	eor	r31, r31
    254e:	e4 5b       	subi	r30, 0xB4	; 180
    2550:	fe 4f       	sbci	r31, 0xFE	; 254
    2552:	99 27       	eor	r25, r25
    2554:	33 27       	eor	r19, r19
    2556:	ee 24       	eor	r14, r14
    2558:	ff 24       	eor	r15, r15
    255a:	a7 01       	movw	r20, r14
    255c:	e7 01       	movw	r28, r14
    255e:	05 90       	lpm	r0, Z+
    2560:	08 94       	sec
    2562:	07 94       	ror	r0
    2564:	28 f4       	brcc	.+10     	; 0x2570 <__ftoa_engine+0x80>
    2566:	36 0f       	add	r19, r22
    2568:	e7 1e       	adc	r14, r23
    256a:	f8 1e       	adc	r15, r24
    256c:	49 1f       	adc	r20, r25
    256e:	51 1d       	adc	r21, r1
    2570:	66 0f       	add	r22, r22
    2572:	77 1f       	adc	r23, r23
    2574:	88 1f       	adc	r24, r24
    2576:	99 1f       	adc	r25, r25
    2578:	06 94       	lsr	r0
    257a:	a1 f7       	brne	.-24     	; 0x2564 <__ftoa_engine+0x74>
    257c:	05 90       	lpm	r0, Z+
    257e:	07 94       	ror	r0
    2580:	28 f4       	brcc	.+10     	; 0x258c <__ftoa_engine+0x9c>
    2582:	e7 0e       	add	r14, r23
    2584:	f8 1e       	adc	r15, r24
    2586:	49 1f       	adc	r20, r25
    2588:	56 1f       	adc	r21, r22
    258a:	c1 1d       	adc	r28, r1
    258c:	77 0f       	add	r23, r23
    258e:	88 1f       	adc	r24, r24
    2590:	99 1f       	adc	r25, r25
    2592:	66 1f       	adc	r22, r22
    2594:	06 94       	lsr	r0
    2596:	a1 f7       	brne	.-24     	; 0x2580 <__ftoa_engine+0x90>
    2598:	05 90       	lpm	r0, Z+
    259a:	07 94       	ror	r0
    259c:	28 f4       	brcc	.+10     	; 0x25a8 <__ftoa_engine+0xb8>
    259e:	f8 0e       	add	r15, r24
    25a0:	49 1f       	adc	r20, r25
    25a2:	56 1f       	adc	r21, r22
    25a4:	c7 1f       	adc	r28, r23
    25a6:	d1 1d       	adc	r29, r1
    25a8:	88 0f       	add	r24, r24
    25aa:	99 1f       	adc	r25, r25
    25ac:	66 1f       	adc	r22, r22
    25ae:	77 1f       	adc	r23, r23
    25b0:	06 94       	lsr	r0
    25b2:	a1 f7       	brne	.-24     	; 0x259c <__ftoa_engine+0xac>
    25b4:	05 90       	lpm	r0, Z+
    25b6:	07 94       	ror	r0
    25b8:	20 f4       	brcc	.+8      	; 0x25c2 <__ftoa_engine+0xd2>
    25ba:	49 0f       	add	r20, r25
    25bc:	56 1f       	adc	r21, r22
    25be:	c7 1f       	adc	r28, r23
    25c0:	d8 1f       	adc	r29, r24
    25c2:	99 0f       	add	r25, r25
    25c4:	66 1f       	adc	r22, r22
    25c6:	77 1f       	adc	r23, r23
    25c8:	88 1f       	adc	r24, r24
    25ca:	06 94       	lsr	r0
    25cc:	a9 f7       	brne	.-22     	; 0x25b8 <__ftoa_engine+0xc8>
    25ce:	84 91       	lpm	r24, Z
    25d0:	10 95       	com	r17
    25d2:	17 70       	andi	r17, 0x07	; 7
    25d4:	41 f0       	breq	.+16     	; 0x25e6 <__ftoa_engine+0xf6>
    25d6:	d6 95       	lsr	r29
    25d8:	c7 95       	ror	r28
    25da:	57 95       	ror	r21
    25dc:	47 95       	ror	r20
    25de:	f7 94       	ror	r15
    25e0:	e7 94       	ror	r14
    25e2:	1a 95       	dec	r17
    25e4:	c1 f7       	brne	.-16     	; 0x25d6 <__ftoa_engine+0xe6>
    25e6:	e2 ef       	ldi	r30, 0xF2	; 242
    25e8:	f0 e0       	ldi	r31, 0x00	; 0
    25ea:	68 94       	set
    25ec:	15 90       	lpm	r1, Z+
    25ee:	15 91       	lpm	r17, Z+
    25f0:	35 91       	lpm	r19, Z+
    25f2:	65 91       	lpm	r22, Z+
    25f4:	95 91       	lpm	r25, Z+
    25f6:	05 90       	lpm	r0, Z+
    25f8:	7f e2       	ldi	r23, 0x2F	; 47
    25fa:	73 95       	inc	r23
    25fc:	e1 18       	sub	r14, r1
    25fe:	f1 0a       	sbc	r15, r17
    2600:	43 0b       	sbc	r20, r19
    2602:	56 0b       	sbc	r21, r22
    2604:	c9 0b       	sbc	r28, r25
    2606:	d0 09       	sbc	r29, r0
    2608:	c0 f7       	brcc	.-16     	; 0x25fa <__ftoa_engine+0x10a>
    260a:	e1 0c       	add	r14, r1
    260c:	f1 1e       	adc	r15, r17
    260e:	43 1f       	adc	r20, r19
    2610:	56 1f       	adc	r21, r22
    2612:	c9 1f       	adc	r28, r25
    2614:	d0 1d       	adc	r29, r0
    2616:	7e f4       	brtc	.+30     	; 0x2636 <__ftoa_engine+0x146>
    2618:	70 33       	cpi	r23, 0x30	; 48
    261a:	11 f4       	brne	.+4      	; 0x2620 <__ftoa_engine+0x130>
    261c:	8a 95       	dec	r24
    261e:	e6 cf       	rjmp	.-52     	; 0x25ec <__ftoa_engine+0xfc>
    2620:	e8 94       	clt
    2622:	01 50       	subi	r16, 0x01	; 1
    2624:	30 f0       	brcs	.+12     	; 0x2632 <__ftoa_engine+0x142>
    2626:	08 0f       	add	r16, r24
    2628:	0a f4       	brpl	.+2      	; 0x262c <__ftoa_engine+0x13c>
    262a:	00 27       	eor	r16, r16
    262c:	02 17       	cp	r16, r18
    262e:	08 f4       	brcc	.+2      	; 0x2632 <__ftoa_engine+0x142>
    2630:	20 2f       	mov	r18, r16
    2632:	23 95       	inc	r18
    2634:	02 2f       	mov	r16, r18
    2636:	7a 33       	cpi	r23, 0x3A	; 58
    2638:	28 f0       	brcs	.+10     	; 0x2644 <__ftoa_engine+0x154>
    263a:	79 e3       	ldi	r23, 0x39	; 57
    263c:	7d 93       	st	X+, r23
    263e:	2a 95       	dec	r18
    2640:	e9 f7       	brne	.-6      	; 0x263c <__ftoa_engine+0x14c>
    2642:	10 c0       	rjmp	.+32     	; 0x2664 <__ftoa_engine+0x174>
    2644:	7d 93       	st	X+, r23
    2646:	2a 95       	dec	r18
    2648:	89 f6       	brne	.-94     	; 0x25ec <__ftoa_engine+0xfc>
    264a:	06 94       	lsr	r0
    264c:	97 95       	ror	r25
    264e:	67 95       	ror	r22
    2650:	37 95       	ror	r19
    2652:	17 95       	ror	r17
    2654:	17 94       	ror	r1
    2656:	e1 18       	sub	r14, r1
    2658:	f1 0a       	sbc	r15, r17
    265a:	43 0b       	sbc	r20, r19
    265c:	56 0b       	sbc	r21, r22
    265e:	c9 0b       	sbc	r28, r25
    2660:	d0 09       	sbc	r29, r0
    2662:	98 f0       	brcs	.+38     	; 0x268a <__ftoa_engine+0x19a>
    2664:	23 95       	inc	r18
    2666:	7e 91       	ld	r23, -X
    2668:	73 95       	inc	r23
    266a:	7a 33       	cpi	r23, 0x3A	; 58
    266c:	08 f0       	brcs	.+2      	; 0x2670 <__ftoa_engine+0x180>
    266e:	70 e3       	ldi	r23, 0x30	; 48
    2670:	7c 93       	st	X, r23
    2672:	20 13       	cpse	r18, r16
    2674:	b8 f7       	brcc	.-18     	; 0x2664 <__ftoa_engine+0x174>
    2676:	7e 91       	ld	r23, -X
    2678:	70 61       	ori	r23, 0x10	; 16
    267a:	7d 93       	st	X+, r23
    267c:	30 f0       	brcs	.+12     	; 0x268a <__ftoa_engine+0x19a>
    267e:	83 95       	inc	r24
    2680:	71 e3       	ldi	r23, 0x31	; 49
    2682:	7d 93       	st	X+, r23
    2684:	70 e3       	ldi	r23, 0x30	; 48
    2686:	2a 95       	dec	r18
    2688:	e1 f7       	brne	.-8      	; 0x2682 <__ftoa_engine+0x192>
    268a:	11 24       	eor	r1, r1
    268c:	ef 90       	pop	r14
    268e:	ff 90       	pop	r15
    2690:	0f 91       	pop	r16
    2692:	1f 91       	pop	r17
    2694:	cf 91       	pop	r28
    2696:	df 91       	pop	r29
    2698:	99 27       	eor	r25, r25
    269a:	87 fd       	sbrc	r24, 7
    269c:	90 95       	com	r25
    269e:	08 95       	ret

000026a0 <strnlen_P>:
    26a0:	fc 01       	movw	r30, r24
    26a2:	05 90       	lpm	r0, Z+
    26a4:	61 50       	subi	r22, 0x01	; 1
    26a6:	70 40       	sbci	r23, 0x00	; 0
    26a8:	01 10       	cpse	r0, r1
    26aa:	d8 f7       	brcc	.-10     	; 0x26a2 <strnlen_P+0x2>
    26ac:	80 95       	com	r24
    26ae:	90 95       	com	r25
    26b0:	8e 0f       	add	r24, r30
    26b2:	9f 1f       	adc	r25, r31
    26b4:	08 95       	ret

000026b6 <strcpy>:
    26b6:	fb 01       	movw	r30, r22
    26b8:	dc 01       	movw	r26, r24
    26ba:	01 90       	ld	r0, Z+
    26bc:	0d 92       	st	X+, r0
    26be:	00 20       	and	r0, r0
    26c0:	e1 f7       	brne	.-8      	; 0x26ba <strcpy+0x4>
    26c2:	08 95       	ret

000026c4 <strnlen>:
    26c4:	fc 01       	movw	r30, r24
    26c6:	61 50       	subi	r22, 0x01	; 1
    26c8:	70 40       	sbci	r23, 0x00	; 0
    26ca:	01 90       	ld	r0, Z+
    26cc:	01 10       	cpse	r0, r1
    26ce:	d8 f7       	brcc	.-10     	; 0x26c6 <strnlen+0x2>
    26d0:	80 95       	com	r24
    26d2:	90 95       	com	r25
    26d4:	8e 0f       	add	r24, r30
    26d6:	9f 1f       	adc	r25, r31
    26d8:	08 95       	ret

000026da <strstr>:
    26da:	fb 01       	movw	r30, r22
    26dc:	51 91       	ld	r21, Z+
    26de:	55 23       	and	r21, r21
    26e0:	a9 f0       	breq	.+42     	; 0x270c <strstr+0x32>
    26e2:	bf 01       	movw	r22, r30
    26e4:	dc 01       	movw	r26, r24
    26e6:	4d 91       	ld	r20, X+
    26e8:	45 17       	cp	r20, r21
    26ea:	41 11       	cpse	r20, r1
    26ec:	e1 f7       	brne	.-8      	; 0x26e6 <strstr+0xc>
    26ee:	59 f4       	brne	.+22     	; 0x2706 <strstr+0x2c>
    26f0:	cd 01       	movw	r24, r26
    26f2:	01 90       	ld	r0, Z+
    26f4:	00 20       	and	r0, r0
    26f6:	49 f0       	breq	.+18     	; 0x270a <strstr+0x30>
    26f8:	4d 91       	ld	r20, X+
    26fa:	40 15       	cp	r20, r0
    26fc:	41 11       	cpse	r20, r1
    26fe:	c9 f3       	breq	.-14     	; 0x26f2 <strstr+0x18>
    2700:	fb 01       	movw	r30, r22
    2702:	41 11       	cpse	r20, r1
    2704:	ef cf       	rjmp	.-34     	; 0x26e4 <strstr+0xa>
    2706:	81 e0       	ldi	r24, 0x01	; 1
    2708:	90 e0       	ldi	r25, 0x00	; 0
    270a:	01 97       	sbiw	r24, 0x01	; 1
    270c:	08 95       	ret

0000270e <fputc>:
    270e:	0f 93       	push	r16
    2710:	1f 93       	push	r17
    2712:	cf 93       	push	r28
    2714:	df 93       	push	r29
    2716:	18 2f       	mov	r17, r24
    2718:	09 2f       	mov	r16, r25
    271a:	eb 01       	movw	r28, r22
    271c:	8b 81       	ldd	r24, Y+3	; 0x03
    271e:	81 fd       	sbrc	r24, 1
    2720:	03 c0       	rjmp	.+6      	; 0x2728 <fputc+0x1a>
    2722:	8f ef       	ldi	r24, 0xFF	; 255
    2724:	9f ef       	ldi	r25, 0xFF	; 255
    2726:	20 c0       	rjmp	.+64     	; 0x2768 <fputc+0x5a>
    2728:	82 ff       	sbrs	r24, 2
    272a:	10 c0       	rjmp	.+32     	; 0x274c <fputc+0x3e>
    272c:	4e 81       	ldd	r20, Y+6	; 0x06
    272e:	5f 81       	ldd	r21, Y+7	; 0x07
    2730:	2c 81       	ldd	r18, Y+4	; 0x04
    2732:	3d 81       	ldd	r19, Y+5	; 0x05
    2734:	42 17       	cp	r20, r18
    2736:	53 07       	cpc	r21, r19
    2738:	7c f4       	brge	.+30     	; 0x2758 <fputc+0x4a>
    273a:	e8 81       	ld	r30, Y
    273c:	f9 81       	ldd	r31, Y+1	; 0x01
    273e:	9f 01       	movw	r18, r30
    2740:	2f 5f       	subi	r18, 0xFF	; 255
    2742:	3f 4f       	sbci	r19, 0xFF	; 255
    2744:	39 83       	std	Y+1, r19	; 0x01
    2746:	28 83       	st	Y, r18
    2748:	10 83       	st	Z, r17
    274a:	06 c0       	rjmp	.+12     	; 0x2758 <fputc+0x4a>
    274c:	e8 85       	ldd	r30, Y+8	; 0x08
    274e:	f9 85       	ldd	r31, Y+9	; 0x09
    2750:	81 2f       	mov	r24, r17
    2752:	09 95       	icall
    2754:	89 2b       	or	r24, r25
    2756:	29 f7       	brne	.-54     	; 0x2722 <fputc+0x14>
    2758:	2e 81       	ldd	r18, Y+6	; 0x06
    275a:	3f 81       	ldd	r19, Y+7	; 0x07
    275c:	2f 5f       	subi	r18, 0xFF	; 255
    275e:	3f 4f       	sbci	r19, 0xFF	; 255
    2760:	3f 83       	std	Y+7, r19	; 0x07
    2762:	2e 83       	std	Y+6, r18	; 0x06
    2764:	81 2f       	mov	r24, r17
    2766:	90 2f       	mov	r25, r16
    2768:	df 91       	pop	r29
    276a:	cf 91       	pop	r28
    276c:	1f 91       	pop	r17
    276e:	0f 91       	pop	r16
    2770:	08 95       	ret

00002772 <printf>:
    2772:	a0 e0       	ldi	r26, 0x00	; 0
    2774:	b0 e0       	ldi	r27, 0x00	; 0
    2776:	ef eb       	ldi	r30, 0xBF	; 191
    2778:	f3 e1       	ldi	r31, 0x13	; 19
    277a:	0c 94 07 11 	jmp	0x220e	; 0x220e <__prologue_saves__+0x20>
    277e:	fe 01       	movw	r30, r28
    2780:	35 96       	adiw	r30, 0x05	; 5
    2782:	61 91       	ld	r22, Z+
    2784:	71 91       	ld	r23, Z+
    2786:	af 01       	movw	r20, r30
    2788:	80 91 26 03 	lds	r24, 0x0326
    278c:	90 91 27 03 	lds	r25, 0x0327
    2790:	0e 94 b0 09 	call	0x1360	; 0x1360 <vfprintf>
    2794:	e2 e0       	ldi	r30, 0x02	; 2
    2796:	0c 94 23 11 	jmp	0x2246	; 0x2246 <__epilogue_restores__+0x20>

0000279a <puts>:
    279a:	0f 93       	push	r16
    279c:	1f 93       	push	r17
    279e:	cf 93       	push	r28
    27a0:	df 93       	push	r29
    27a2:	e0 91 26 03 	lds	r30, 0x0326
    27a6:	f0 91 27 03 	lds	r31, 0x0327
    27aa:	23 81       	ldd	r18, Z+3	; 0x03
    27ac:	21 ff       	sbrs	r18, 1
    27ae:	1b c0       	rjmp	.+54     	; 0x27e6 <puts+0x4c>
    27b0:	ec 01       	movw	r28, r24
    27b2:	00 e0       	ldi	r16, 0x00	; 0
    27b4:	10 e0       	ldi	r17, 0x00	; 0
    27b6:	89 91       	ld	r24, Y+
    27b8:	60 91 26 03 	lds	r22, 0x0326
    27bc:	70 91 27 03 	lds	r23, 0x0327
    27c0:	db 01       	movw	r26, r22
    27c2:	18 96       	adiw	r26, 0x08	; 8
    27c4:	ed 91       	ld	r30, X+
    27c6:	fc 91       	ld	r31, X
    27c8:	19 97       	sbiw	r26, 0x09	; 9
    27ca:	88 23       	and	r24, r24
    27cc:	31 f0       	breq	.+12     	; 0x27da <puts+0x40>
    27ce:	09 95       	icall
    27d0:	89 2b       	or	r24, r25
    27d2:	89 f3       	breq	.-30     	; 0x27b6 <puts+0x1c>
    27d4:	0f ef       	ldi	r16, 0xFF	; 255
    27d6:	1f ef       	ldi	r17, 0xFF	; 255
    27d8:	ee cf       	rjmp	.-36     	; 0x27b6 <puts+0x1c>
    27da:	8a e0       	ldi	r24, 0x0A	; 10
    27dc:	09 95       	icall
    27de:	89 2b       	or	r24, r25
    27e0:	11 f4       	brne	.+4      	; 0x27e6 <puts+0x4c>
    27e2:	c8 01       	movw	r24, r16
    27e4:	02 c0       	rjmp	.+4      	; 0x27ea <puts+0x50>
    27e6:	8f ef       	ldi	r24, 0xFF	; 255
    27e8:	9f ef       	ldi	r25, 0xFF	; 255
    27ea:	df 91       	pop	r29
    27ec:	cf 91       	pop	r28
    27ee:	1f 91       	pop	r17
    27f0:	0f 91       	pop	r16
    27f2:	08 95       	ret

000027f4 <sprintf>:
    27f4:	ae e0       	ldi	r26, 0x0E	; 14
    27f6:	b0 e0       	ldi	r27, 0x00	; 0
    27f8:	e0 e0       	ldi	r30, 0x00	; 0
    27fa:	f4 e1       	ldi	r31, 0x14	; 20
    27fc:	0c 94 05 11 	jmp	0x220a	; 0x220a <__prologue_saves__+0x1c>
    2800:	0d 89       	ldd	r16, Y+21	; 0x15
    2802:	1e 89       	ldd	r17, Y+22	; 0x16
    2804:	86 e0       	ldi	r24, 0x06	; 6
    2806:	8c 83       	std	Y+4, r24	; 0x04
    2808:	1a 83       	std	Y+2, r17	; 0x02
    280a:	09 83       	std	Y+1, r16	; 0x01
    280c:	8f ef       	ldi	r24, 0xFF	; 255
    280e:	9f e7       	ldi	r25, 0x7F	; 127
    2810:	9e 83       	std	Y+6, r25	; 0x06
    2812:	8d 83       	std	Y+5, r24	; 0x05
    2814:	ae 01       	movw	r20, r28
    2816:	47 5e       	subi	r20, 0xE7	; 231
    2818:	5f 4f       	sbci	r21, 0xFF	; 255
    281a:	6f 89       	ldd	r22, Y+23	; 0x17
    281c:	78 8d       	ldd	r23, Y+24	; 0x18
    281e:	ce 01       	movw	r24, r28
    2820:	01 96       	adiw	r24, 0x01	; 1
    2822:	0e 94 b0 09 	call	0x1360	; 0x1360 <vfprintf>
    2826:	ef 81       	ldd	r30, Y+7	; 0x07
    2828:	f8 85       	ldd	r31, Y+8	; 0x08
    282a:	e0 0f       	add	r30, r16
    282c:	f1 1f       	adc	r31, r17
    282e:	10 82       	st	Z, r1
    2830:	2e 96       	adiw	r28, 0x0e	; 14
    2832:	e4 e0       	ldi	r30, 0x04	; 4
    2834:	0c 94 21 11 	jmp	0x2242	; 0x2242 <__epilogue_restores__+0x1c>

00002838 <sscanf>:
    2838:	ae e0       	ldi	r26, 0x0E	; 14
    283a:	b0 e0       	ldi	r27, 0x00	; 0
    283c:	e2 e2       	ldi	r30, 0x22	; 34
    283e:	f4 e1       	ldi	r31, 0x14	; 20
    2840:	0c 94 07 11 	jmp	0x220e	; 0x220e <__prologue_saves__+0x20>
    2844:	85 e0       	ldi	r24, 0x05	; 5
    2846:	8c 83       	std	Y+4, r24	; 0x04
    2848:	8b 89       	ldd	r24, Y+19	; 0x13
    284a:	9c 89       	ldd	r25, Y+20	; 0x14
    284c:	9a 83       	std	Y+2, r25	; 0x02
    284e:	89 83       	std	Y+1, r24	; 0x01
    2850:	ae 01       	movw	r20, r28
    2852:	49 5e       	subi	r20, 0xE9	; 233
    2854:	5f 4f       	sbci	r21, 0xFF	; 255
    2856:	6d 89       	ldd	r22, Y+21	; 0x15
    2858:	7e 89       	ldd	r23, Y+22	; 0x16
    285a:	ce 01       	movw	r24, r28
    285c:	01 96       	adiw	r24, 0x01	; 1
    285e:	0e 94 2d 16 	call	0x2c5a	; 0x2c5a <vfscanf>
    2862:	2e 96       	adiw	r28, 0x0e	; 14
    2864:	e2 e0       	ldi	r30, 0x02	; 2
    2866:	0c 94 23 11 	jmp	0x2246	; 0x2246 <__epilogue_restores__+0x20>

0000286a <vsprintf>:
    286a:	ae e0       	ldi	r26, 0x0E	; 14
    286c:	b0 e0       	ldi	r27, 0x00	; 0
    286e:	eb e3       	ldi	r30, 0x3B	; 59
    2870:	f4 e1       	ldi	r31, 0x14	; 20
    2872:	0c 94 05 11 	jmp	0x220a	; 0x220a <__prologue_saves__+0x1c>
    2876:	8c 01       	movw	r16, r24
    2878:	86 e0       	ldi	r24, 0x06	; 6
    287a:	8c 83       	std	Y+4, r24	; 0x04
    287c:	1a 83       	std	Y+2, r17	; 0x02
    287e:	09 83       	std	Y+1, r16	; 0x01
    2880:	8f ef       	ldi	r24, 0xFF	; 255
    2882:	9f e7       	ldi	r25, 0x7F	; 127
    2884:	9e 83       	std	Y+6, r25	; 0x06
    2886:	8d 83       	std	Y+5, r24	; 0x05
    2888:	ce 01       	movw	r24, r28
    288a:	01 96       	adiw	r24, 0x01	; 1
    288c:	0e 94 b0 09 	call	0x1360	; 0x1360 <vfprintf>
    2890:	ef 81       	ldd	r30, Y+7	; 0x07
    2892:	f8 85       	ldd	r31, Y+8	; 0x08
    2894:	e0 0f       	add	r30, r16
    2896:	f1 1f       	adc	r31, r17
    2898:	10 82       	st	Z, r1
    289a:	2e 96       	adiw	r28, 0x0e	; 14
    289c:	e4 e0       	ldi	r30, 0x04	; 4
    289e:	0c 94 21 11 	jmp	0x2242	; 0x2242 <__epilogue_restores__+0x1c>

000028a2 <__ultoa_invert>:
    28a2:	fa 01       	movw	r30, r20
    28a4:	aa 27       	eor	r26, r26
    28a6:	28 30       	cpi	r18, 0x08	; 8
    28a8:	51 f1       	breq	.+84     	; 0x28fe <__ultoa_invert+0x5c>
    28aa:	20 31       	cpi	r18, 0x10	; 16
    28ac:	81 f1       	breq	.+96     	; 0x290e <__ultoa_invert+0x6c>
    28ae:	e8 94       	clt
    28b0:	6f 93       	push	r22
    28b2:	6e 7f       	andi	r22, 0xFE	; 254
    28b4:	6e 5f       	subi	r22, 0xFE	; 254
    28b6:	7f 4f       	sbci	r23, 0xFF	; 255
    28b8:	8f 4f       	sbci	r24, 0xFF	; 255
    28ba:	9f 4f       	sbci	r25, 0xFF	; 255
    28bc:	af 4f       	sbci	r26, 0xFF	; 255
    28be:	b1 e0       	ldi	r27, 0x01	; 1
    28c0:	3e d0       	rcall	.+124    	; 0x293e <__ultoa_invert+0x9c>
    28c2:	b4 e0       	ldi	r27, 0x04	; 4
    28c4:	3c d0       	rcall	.+120    	; 0x293e <__ultoa_invert+0x9c>
    28c6:	67 0f       	add	r22, r23
    28c8:	78 1f       	adc	r23, r24
    28ca:	89 1f       	adc	r24, r25
    28cc:	9a 1f       	adc	r25, r26
    28ce:	a1 1d       	adc	r26, r1
    28d0:	68 0f       	add	r22, r24
    28d2:	79 1f       	adc	r23, r25
    28d4:	8a 1f       	adc	r24, r26
    28d6:	91 1d       	adc	r25, r1
    28d8:	a1 1d       	adc	r26, r1
    28da:	6a 0f       	add	r22, r26
    28dc:	71 1d       	adc	r23, r1
    28de:	81 1d       	adc	r24, r1
    28e0:	91 1d       	adc	r25, r1
    28e2:	a1 1d       	adc	r26, r1
    28e4:	20 d0       	rcall	.+64     	; 0x2926 <__ultoa_invert+0x84>
    28e6:	09 f4       	brne	.+2      	; 0x28ea <__ultoa_invert+0x48>
    28e8:	68 94       	set
    28ea:	3f 91       	pop	r19
    28ec:	2a e0       	ldi	r18, 0x0A	; 10
    28ee:	26 9f       	mul	r18, r22
    28f0:	11 24       	eor	r1, r1
    28f2:	30 19       	sub	r19, r0
    28f4:	30 5d       	subi	r19, 0xD0	; 208
    28f6:	31 93       	st	Z+, r19
    28f8:	de f6       	brtc	.-74     	; 0x28b0 <__ultoa_invert+0xe>
    28fa:	cf 01       	movw	r24, r30
    28fc:	08 95       	ret
    28fe:	46 2f       	mov	r20, r22
    2900:	47 70       	andi	r20, 0x07	; 7
    2902:	40 5d       	subi	r20, 0xD0	; 208
    2904:	41 93       	st	Z+, r20
    2906:	b3 e0       	ldi	r27, 0x03	; 3
    2908:	0f d0       	rcall	.+30     	; 0x2928 <__ultoa_invert+0x86>
    290a:	c9 f7       	brne	.-14     	; 0x28fe <__ultoa_invert+0x5c>
    290c:	f6 cf       	rjmp	.-20     	; 0x28fa <__ultoa_invert+0x58>
    290e:	46 2f       	mov	r20, r22
    2910:	4f 70       	andi	r20, 0x0F	; 15
    2912:	40 5d       	subi	r20, 0xD0	; 208
    2914:	4a 33       	cpi	r20, 0x3A	; 58
    2916:	18 f0       	brcs	.+6      	; 0x291e <__ultoa_invert+0x7c>
    2918:	49 5d       	subi	r20, 0xD9	; 217
    291a:	31 fd       	sbrc	r19, 1
    291c:	40 52       	subi	r20, 0x20	; 32
    291e:	41 93       	st	Z+, r20
    2920:	02 d0       	rcall	.+4      	; 0x2926 <__ultoa_invert+0x84>
    2922:	a9 f7       	brne	.-22     	; 0x290e <__ultoa_invert+0x6c>
    2924:	ea cf       	rjmp	.-44     	; 0x28fa <__ultoa_invert+0x58>
    2926:	b4 e0       	ldi	r27, 0x04	; 4
    2928:	a6 95       	lsr	r26
    292a:	97 95       	ror	r25
    292c:	87 95       	ror	r24
    292e:	77 95       	ror	r23
    2930:	67 95       	ror	r22
    2932:	ba 95       	dec	r27
    2934:	c9 f7       	brne	.-14     	; 0x2928 <__ultoa_invert+0x86>
    2936:	00 97       	sbiw	r24, 0x00	; 0
    2938:	61 05       	cpc	r22, r1
    293a:	71 05       	cpc	r23, r1
    293c:	08 95       	ret
    293e:	9b 01       	movw	r18, r22
    2940:	ac 01       	movw	r20, r24
    2942:	0a 2e       	mov	r0, r26
    2944:	06 94       	lsr	r0
    2946:	57 95       	ror	r21
    2948:	47 95       	ror	r20
    294a:	37 95       	ror	r19
    294c:	27 95       	ror	r18
    294e:	ba 95       	dec	r27
    2950:	c9 f7       	brne	.-14     	; 0x2944 <__ultoa_invert+0xa2>
    2952:	62 0f       	add	r22, r18
    2954:	73 1f       	adc	r23, r19
    2956:	84 1f       	adc	r24, r20
    2958:	95 1f       	adc	r25, r21
    295a:	a0 1d       	adc	r26, r0
    295c:	08 95       	ret

0000295e <putval>:
    295e:	20 fd       	sbrc	r18, 0
    2960:	09 c0       	rjmp	.+18     	; 0x2974 <putval+0x16>
    2962:	fc 01       	movw	r30, r24
    2964:	23 fd       	sbrc	r18, 3
    2966:	05 c0       	rjmp	.+10     	; 0x2972 <putval+0x14>
    2968:	22 ff       	sbrs	r18, 2
    296a:	02 c0       	rjmp	.+4      	; 0x2970 <putval+0x12>
    296c:	73 83       	std	Z+3, r23	; 0x03
    296e:	62 83       	std	Z+2, r22	; 0x02
    2970:	51 83       	std	Z+1, r21	; 0x01
    2972:	40 83       	st	Z, r20
    2974:	08 95       	ret

00002976 <mulacc>:
    2976:	44 fd       	sbrc	r20, 4
    2978:	10 c0       	rjmp	.+32     	; 0x299a <mulacc+0x24>
    297a:	46 fd       	sbrc	r20, 6
    297c:	10 c0       	rjmp	.+32     	; 0x299e <mulacc+0x28>
    297e:	db 01       	movw	r26, r22
    2980:	fc 01       	movw	r30, r24
    2982:	aa 0f       	add	r26, r26
    2984:	bb 1f       	adc	r27, r27
    2986:	ee 1f       	adc	r30, r30
    2988:	ff 1f       	adc	r31, r31
    298a:	10 94       	com	r1
    298c:	d1 f7       	brne	.-12     	; 0x2982 <mulacc+0xc>
    298e:	6a 0f       	add	r22, r26
    2990:	7b 1f       	adc	r23, r27
    2992:	8e 1f       	adc	r24, r30
    2994:	9f 1f       	adc	r25, r31
    2996:	31 e0       	ldi	r19, 0x01	; 1
    2998:	03 c0       	rjmp	.+6      	; 0x29a0 <mulacc+0x2a>
    299a:	33 e0       	ldi	r19, 0x03	; 3
    299c:	01 c0       	rjmp	.+2      	; 0x29a0 <mulacc+0x2a>
    299e:	34 e0       	ldi	r19, 0x04	; 4
    29a0:	66 0f       	add	r22, r22
    29a2:	77 1f       	adc	r23, r23
    29a4:	88 1f       	adc	r24, r24
    29a6:	99 1f       	adc	r25, r25
    29a8:	31 50       	subi	r19, 0x01	; 1
    29aa:	d1 f7       	brne	.-12     	; 0x29a0 <mulacc+0x2a>
    29ac:	62 0f       	add	r22, r18
    29ae:	71 1d       	adc	r23, r1
    29b0:	81 1d       	adc	r24, r1
    29b2:	91 1d       	adc	r25, r1
    29b4:	08 95       	ret

000029b6 <skip_spaces>:
    29b6:	0f 93       	push	r16
    29b8:	1f 93       	push	r17
    29ba:	cf 93       	push	r28
    29bc:	df 93       	push	r29
    29be:	8c 01       	movw	r16, r24
    29c0:	c8 01       	movw	r24, r16
    29c2:	0e 94 77 17 	call	0x2eee	; 0x2eee <fgetc>
    29c6:	ec 01       	movw	r28, r24
    29c8:	97 fd       	sbrc	r25, 7
    29ca:	08 c0       	rjmp	.+16     	; 0x29dc <skip_spaces+0x26>
    29cc:	0e 94 64 17 	call	0x2ec8	; 0x2ec8 <isspace>
    29d0:	89 2b       	or	r24, r25
    29d2:	b1 f7       	brne	.-20     	; 0x29c0 <skip_spaces+0xa>
    29d4:	b8 01       	movw	r22, r16
    29d6:	ce 01       	movw	r24, r28
    29d8:	0e 94 b5 17 	call	0x2f6a	; 0x2f6a <ungetc>
    29dc:	ce 01       	movw	r24, r28
    29de:	df 91       	pop	r29
    29e0:	cf 91       	pop	r28
    29e2:	1f 91       	pop	r17
    29e4:	0f 91       	pop	r16
    29e6:	08 95       	ret

000029e8 <conv_int>:
    29e8:	8f 92       	push	r8
    29ea:	9f 92       	push	r9
    29ec:	af 92       	push	r10
    29ee:	cf 92       	push	r12
    29f0:	df 92       	push	r13
    29f2:	ef 92       	push	r14
    29f4:	ff 92       	push	r15
    29f6:	0f 93       	push	r16
    29f8:	1f 93       	push	r17
    29fa:	cf 93       	push	r28
    29fc:	df 93       	push	r29
    29fe:	ec 01       	movw	r28, r24
    2a00:	a6 2e       	mov	r10, r22
    2a02:	4a 01       	movw	r8, r20
    2a04:	02 2f       	mov	r16, r18
    2a06:	0e 94 77 17 	call	0x2eee	; 0x2eee <fgetc>
    2a0a:	ac 01       	movw	r20, r24
    2a0c:	55 27       	eor	r21, r21
    2a0e:	4b 32       	cpi	r20, 0x2B	; 43
    2a10:	51 05       	cpc	r21, r1
    2a12:	21 f0       	breq	.+8      	; 0x2a1c <conv_int+0x34>
    2a14:	4d 32       	cpi	r20, 0x2D	; 45
    2a16:	51 05       	cpc	r21, r1
    2a18:	51 f4       	brne	.+20     	; 0x2a2e <conv_int+0x46>
    2a1a:	00 68       	ori	r16, 0x80	; 128
    2a1c:	aa 94       	dec	r10
    2a1e:	11 f4       	brne	.+4      	; 0x2a24 <conv_int+0x3c>
    2a20:	80 e0       	ldi	r24, 0x00	; 0
    2a22:	67 c0       	rjmp	.+206    	; 0x2af2 <conv_int+0x10a>
    2a24:	ce 01       	movw	r24, r28
    2a26:	0e 94 77 17 	call	0x2eee	; 0x2eee <fgetc>
    2a2a:	97 fd       	sbrc	r25, 7
    2a2c:	f9 cf       	rjmp	.-14     	; 0x2a20 <conv_int+0x38>
    2a2e:	10 2f       	mov	r17, r16
    2a30:	1d 7f       	andi	r17, 0xFD	; 253
    2a32:	30 2f       	mov	r19, r16
    2a34:	30 73       	andi	r19, 0x30	; 48
    2a36:	01 f5       	brne	.+64     	; 0x2a78 <conv_int+0x90>
    2a38:	80 33       	cpi	r24, 0x30	; 48
    2a3a:	f1 f4       	brne	.+60     	; 0x2a78 <conv_int+0x90>
    2a3c:	ff 24       	eor	r15, r15
    2a3e:	fa 94       	dec	r15
    2a40:	fa 0c       	add	r15, r10
    2a42:	09 f4       	brne	.+2      	; 0x2a46 <conv_int+0x5e>
    2a44:	42 c0       	rjmp	.+132    	; 0x2aca <conv_int+0xe2>
    2a46:	ce 01       	movw	r24, r28
    2a48:	0e 94 77 17 	call	0x2eee	; 0x2eee <fgetc>
    2a4c:	97 fd       	sbrc	r25, 7
    2a4e:	3d c0       	rjmp	.+122    	; 0x2aca <conv_int+0xe2>
    2a50:	38 2f       	mov	r19, r24
    2a52:	3f 7d       	andi	r19, 0xDF	; 223
    2a54:	38 35       	cpi	r19, 0x58	; 88
    2a56:	51 f4       	brne	.+20     	; 0x2a6c <conv_int+0x84>
    2a58:	12 64       	ori	r17, 0x42	; 66
    2a5a:	aa 94       	dec	r10
    2a5c:	aa 94       	dec	r10
    2a5e:	a9 f1       	breq	.+106    	; 0x2aca <conv_int+0xe2>
    2a60:	ce 01       	movw	r24, r28
    2a62:	0e 94 77 17 	call	0x2eee	; 0x2eee <fgetc>
    2a66:	97 ff       	sbrs	r25, 7
    2a68:	07 c0       	rjmp	.+14     	; 0x2a78 <conv_int+0x90>
    2a6a:	2f c0       	rjmp	.+94     	; 0x2aca <conv_int+0xe2>
    2a6c:	06 ff       	sbrs	r16, 6
    2a6e:	02 c0       	rjmp	.+4      	; 0x2a74 <conv_int+0x8c>
    2a70:	12 60       	ori	r17, 0x02	; 2
    2a72:	01 c0       	rjmp	.+2      	; 0x2a76 <conv_int+0x8e>
    2a74:	12 61       	ori	r17, 0x12	; 18
    2a76:	af 2c       	mov	r10, r15
    2a78:	c1 2c       	mov	r12, r1
    2a7a:	d1 2c       	mov	r13, r1
    2a7c:	76 01       	movw	r14, r12
    2a7e:	20 ed       	ldi	r18, 0xD0	; 208
    2a80:	28 0f       	add	r18, r24
    2a82:	28 30       	cpi	r18, 0x08	; 8
    2a84:	80 f0       	brcs	.+32     	; 0x2aa6 <conv_int+0xbe>
    2a86:	14 ff       	sbrs	r17, 4
    2a88:	04 c0       	rjmp	.+8      	; 0x2a92 <conv_int+0xaa>
    2a8a:	be 01       	movw	r22, r28
    2a8c:	0e 94 b5 17 	call	0x2f6a	; 0x2f6a <ungetc>
    2a90:	19 c0       	rjmp	.+50     	; 0x2ac4 <conv_int+0xdc>
    2a92:	2a 30       	cpi	r18, 0x0A	; 10
    2a94:	40 f0       	brcs	.+16     	; 0x2aa6 <conv_int+0xbe>
    2a96:	16 ff       	sbrs	r17, 6
    2a98:	f8 cf       	rjmp	.-16     	; 0x2a8a <conv_int+0xa2>
    2a9a:	2f 7d       	andi	r18, 0xDF	; 223
    2a9c:	3f ee       	ldi	r19, 0xEF	; 239
    2a9e:	32 0f       	add	r19, r18
    2aa0:	36 30       	cpi	r19, 0x06	; 6
    2aa2:	98 f7       	brcc	.-26     	; 0x2a8a <conv_int+0xa2>
    2aa4:	27 50       	subi	r18, 0x07	; 7
    2aa6:	41 2f       	mov	r20, r17
    2aa8:	c7 01       	movw	r24, r14
    2aaa:	b6 01       	movw	r22, r12
    2aac:	0e 94 bb 14 	call	0x2976	; 0x2976 <mulacc>
    2ab0:	6b 01       	movw	r12, r22
    2ab2:	7c 01       	movw	r14, r24
    2ab4:	12 60       	ori	r17, 0x02	; 2
    2ab6:	aa 94       	dec	r10
    2ab8:	59 f0       	breq	.+22     	; 0x2ad0 <conv_int+0xe8>
    2aba:	ce 01       	movw	r24, r28
    2abc:	0e 94 77 17 	call	0x2eee	; 0x2eee <fgetc>
    2ac0:	97 ff       	sbrs	r25, 7
    2ac2:	dd cf       	rjmp	.-70     	; 0x2a7e <conv_int+0x96>
    2ac4:	11 fd       	sbrc	r17, 1
    2ac6:	04 c0       	rjmp	.+8      	; 0x2ad0 <conv_int+0xe8>
    2ac8:	ab cf       	rjmp	.-170    	; 0x2a20 <conv_int+0x38>
    2aca:	c1 2c       	mov	r12, r1
    2acc:	d1 2c       	mov	r13, r1
    2ace:	76 01       	movw	r14, r12
    2ad0:	17 ff       	sbrs	r17, 7
    2ad2:	08 c0       	rjmp	.+16     	; 0x2ae4 <conv_int+0xfc>
    2ad4:	f0 94       	com	r15
    2ad6:	e0 94       	com	r14
    2ad8:	d0 94       	com	r13
    2ada:	c0 94       	com	r12
    2adc:	c1 1c       	adc	r12, r1
    2ade:	d1 1c       	adc	r13, r1
    2ae0:	e1 1c       	adc	r14, r1
    2ae2:	f1 1c       	adc	r15, r1
    2ae4:	21 2f       	mov	r18, r17
    2ae6:	b7 01       	movw	r22, r14
    2ae8:	a6 01       	movw	r20, r12
    2aea:	c4 01       	movw	r24, r8
    2aec:	0e 94 af 14 	call	0x295e	; 0x295e <putval>
    2af0:	81 e0       	ldi	r24, 0x01	; 1
    2af2:	df 91       	pop	r29
    2af4:	cf 91       	pop	r28
    2af6:	1f 91       	pop	r17
    2af8:	0f 91       	pop	r16
    2afa:	ff 90       	pop	r15
    2afc:	ef 90       	pop	r14
    2afe:	df 90       	pop	r13
    2b00:	cf 90       	pop	r12
    2b02:	af 90       	pop	r10
    2b04:	9f 90       	pop	r9
    2b06:	8f 90       	pop	r8
    2b08:	08 95       	ret

00002b0a <conv_brk>:
    2b0a:	a1 e2       	ldi	r26, 0x21	; 33
    2b0c:	b0 e0       	ldi	r27, 0x00	; 0
    2b0e:	eb e8       	ldi	r30, 0x8B	; 139
    2b10:	f5 e1       	ldi	r31, 0x15	; 21
    2b12:	0c 94 fc 10 	jmp	0x21f8	; 0x21f8 <__prologue_saves__+0xa>
    2b16:	5c 01       	movw	r10, r24
    2b18:	7a 01       	movw	r14, r20
    2b1a:	8e 01       	movw	r16, r28
    2b1c:	0f 5f       	subi	r16, 0xFF	; 255
    2b1e:	1f 4f       	sbci	r17, 0xFF	; 255
    2b20:	68 01       	movw	r12, r16
    2b22:	80 e2       	ldi	r24, 0x20	; 32
    2b24:	d8 01       	movw	r26, r16
    2b26:	1d 92       	st	X+, r1
    2b28:	8a 95       	dec	r24
    2b2a:	e9 f7       	brne	.-6      	; 0x2b26 <conv_brk+0x1c>
    2b2c:	f5 01       	movw	r30, r10
    2b2e:	73 80       	ldd	r7, Z+3	; 0x03
    2b30:	40 e0       	ldi	r20, 0x00	; 0
    2b32:	50 e0       	ldi	r21, 0x00	; 0
    2b34:	81 2c       	mov	r8, r1
    2b36:	b0 e0       	ldi	r27, 0x00	; 0
    2b38:	91 2c       	mov	r9, r1
    2b3a:	81 e0       	ldi	r24, 0x01	; 1
    2b3c:	90 e0       	ldi	r25, 0x00	; 0
    2b3e:	f9 01       	movw	r30, r18
    2b40:	73 fc       	sbrc	r7, 3
    2b42:	a5 91       	lpm	r26, Z+
    2b44:	73 fe       	sbrs	r7, 3
    2b46:	a1 91       	ld	r26, Z+
    2b48:	8f 01       	movw	r16, r30
    2b4a:	7a 2f       	mov	r23, r26
    2b4c:	9f 01       	movw	r18, r30
    2b4e:	a1 11       	cpse	r26, r1
    2b50:	03 c0       	rjmp	.+6      	; 0x2b58 <conv_brk+0x4e>
    2b52:	80 e0       	ldi	r24, 0x00	; 0
    2b54:	90 e0       	ldi	r25, 0x00	; 0
    2b56:	7d c0       	rjmp	.+250    	; 0x2c52 <conv_brk+0x148>
    2b58:	ae 35       	cpi	r26, 0x5E	; 94
    2b5a:	19 f4       	brne	.+6      	; 0x2b62 <conv_brk+0x58>
    2b5c:	41 15       	cp	r20, r1
    2b5e:	51 05       	cpc	r21, r1
    2b60:	59 f1       	breq	.+86     	; 0x2bb8 <conv_brk+0xae>
    2b62:	e9 2d       	mov	r30, r9
    2b64:	f0 e0       	ldi	r31, 0x00	; 0
    2b66:	e4 17       	cp	r30, r20
    2b68:	f5 07       	cpc	r31, r21
    2b6a:	3c f4       	brge	.+14     	; 0x2b7a <conv_brk+0x70>
    2b6c:	ad 35       	cpi	r26, 0x5D	; 93
    2b6e:	69 f1       	breq	.+90     	; 0x2bca <conv_brk+0xc0>
    2b70:	ad 32       	cpi	r26, 0x2D	; 45
    2b72:	19 f4       	brne	.+6      	; 0x2b7a <conv_brk+0x70>
    2b74:	bb 23       	and	r27, r27
    2b76:	19 f1       	breq	.+70     	; 0x2bbe <conv_brk+0xb4>
    2b78:	03 c0       	rjmp	.+6      	; 0x2b80 <conv_brk+0x76>
    2b7a:	b1 11       	cpse	r27, r1
    2b7c:	01 c0       	rjmp	.+2      	; 0x2b80 <conv_brk+0x76>
    2b7e:	8a 2e       	mov	r8, r26
    2b80:	e7 2f       	mov	r30, r23
    2b82:	e6 95       	lsr	r30
    2b84:	e6 95       	lsr	r30
    2b86:	e6 95       	lsr	r30
    2b88:	86 01       	movw	r16, r12
    2b8a:	0e 0f       	add	r16, r30
    2b8c:	11 1d       	adc	r17, r1
    2b8e:	f8 01       	movw	r30, r16
    2b90:	a7 2f       	mov	r26, r23
    2b92:	a7 70       	andi	r26, 0x07	; 7
    2b94:	8c 01       	movw	r16, r24
    2b96:	02 c0       	rjmp	.+4      	; 0x2b9c <conv_brk+0x92>
    2b98:	00 0f       	add	r16, r16
    2b9a:	11 1f       	adc	r17, r17
    2b9c:	aa 95       	dec	r26
    2b9e:	e2 f7       	brpl	.-8      	; 0x2b98 <conv_brk+0x8e>
    2ba0:	d8 01       	movw	r26, r16
    2ba2:	b0 81       	ld	r27, Z
    2ba4:	ba 2b       	or	r27, r26
    2ba6:	b0 83       	st	Z, r27
    2ba8:	78 15       	cp	r23, r8
    2baa:	59 f0       	breq	.+22     	; 0x2bc2 <conv_brk+0xb8>
    2bac:	78 15       	cp	r23, r8
    2bae:	10 f4       	brcc	.+4      	; 0x2bb4 <conv_brk+0xaa>
    2bb0:	7f 5f       	subi	r23, 0xFF	; 255
    2bb2:	e6 cf       	rjmp	.-52     	; 0x2b80 <conv_brk+0x76>
    2bb4:	71 50       	subi	r23, 0x01	; 1
    2bb6:	e4 cf       	rjmp	.-56     	; 0x2b80 <conv_brk+0x76>
    2bb8:	99 24       	eor	r9, r9
    2bba:	93 94       	inc	r9
    2bbc:	03 c0       	rjmp	.+6      	; 0x2bc4 <conv_brk+0xba>
    2bbe:	b1 e0       	ldi	r27, 0x01	; 1
    2bc0:	01 c0       	rjmp	.+2      	; 0x2bc4 <conv_brk+0xba>
    2bc2:	b0 e0       	ldi	r27, 0x00	; 0
    2bc4:	4f 5f       	subi	r20, 0xFF	; 255
    2bc6:	5f 4f       	sbci	r21, 0xFF	; 255
    2bc8:	ba cf       	rjmp	.-140    	; 0x2b3e <conv_brk+0x34>
    2bca:	bb 23       	and	r27, r27
    2bcc:	19 f0       	breq	.+6      	; 0x2bd4 <conv_brk+0xca>
    2bce:	8e 81       	ldd	r24, Y+6	; 0x06
    2bd0:	80 62       	ori	r24, 0x20	; 32
    2bd2:	8e 83       	std	Y+6, r24	; 0x06
    2bd4:	91 10       	cpse	r9, r1
    2bd6:	03 c0       	rjmp	.+6      	; 0x2bde <conv_brk+0xd4>
    2bd8:	99 24       	eor	r9, r9
    2bda:	93 94       	inc	r9
    2bdc:	15 c0       	rjmp	.+42     	; 0x2c08 <conv_brk+0xfe>
    2bde:	f6 01       	movw	r30, r12
    2be0:	ce 01       	movw	r24, r28
    2be2:	81 96       	adiw	r24, 0x21	; 33
    2be4:	20 81       	ld	r18, Z
    2be6:	20 95       	com	r18
    2be8:	21 93       	st	Z+, r18
    2bea:	e8 17       	cp	r30, r24
    2bec:	f9 07       	cpc	r31, r25
    2bee:	d1 f7       	brne	.-12     	; 0x2be4 <conv_brk+0xda>
    2bf0:	f3 cf       	rjmp	.-26     	; 0x2bd8 <conv_brk+0xce>
    2bf2:	e1 14       	cp	r14, r1
    2bf4:	f1 04       	cpc	r15, r1
    2bf6:	29 f0       	breq	.+10     	; 0x2c02 <conv_brk+0xf8>
    2bf8:	d7 01       	movw	r26, r14
    2bfa:	8c 93       	st	X, r24
    2bfc:	f7 01       	movw	r30, r14
    2bfe:	31 96       	adiw	r30, 0x01	; 1
    2c00:	7f 01       	movw	r14, r30
    2c02:	61 50       	subi	r22, 0x01	; 1
    2c04:	01 f1       	breq	.+64     	; 0x2c46 <conv_brk+0x13c>
    2c06:	91 2c       	mov	r9, r1
    2c08:	c5 01       	movw	r24, r10
    2c0a:	69 a3       	std	Y+33, r22	; 0x21
    2c0c:	0e 94 77 17 	call	0x2eee	; 0x2eee <fgetc>
    2c10:	69 a1       	ldd	r22, Y+33	; 0x21
    2c12:	97 fd       	sbrc	r25, 7
    2c14:	16 c0       	rjmp	.+44     	; 0x2c42 <conv_brk+0x138>
    2c16:	28 2f       	mov	r18, r24
    2c18:	26 95       	lsr	r18
    2c1a:	26 95       	lsr	r18
    2c1c:	26 95       	lsr	r18
    2c1e:	f6 01       	movw	r30, r12
    2c20:	e2 0f       	add	r30, r18
    2c22:	f1 1d       	adc	r31, r1
    2c24:	20 81       	ld	r18, Z
    2c26:	30 e0       	ldi	r19, 0x00	; 0
    2c28:	ac 01       	movw	r20, r24
    2c2a:	47 70       	andi	r20, 0x07	; 7
    2c2c:	55 27       	eor	r21, r21
    2c2e:	02 c0       	rjmp	.+4      	; 0x2c34 <conv_brk+0x12a>
    2c30:	35 95       	asr	r19
    2c32:	27 95       	ror	r18
    2c34:	4a 95       	dec	r20
    2c36:	e2 f7       	brpl	.-8      	; 0x2c30 <conv_brk+0x126>
    2c38:	20 fd       	sbrc	r18, 0
    2c3a:	db cf       	rjmp	.-74     	; 0x2bf2 <conv_brk+0xe8>
    2c3c:	b5 01       	movw	r22, r10
    2c3e:	0e 94 b5 17 	call	0x2f6a	; 0x2f6a <ungetc>
    2c42:	91 10       	cpse	r9, r1
    2c44:	86 cf       	rjmp	.-244    	; 0x2b52 <conv_brk+0x48>
    2c46:	e1 14       	cp	r14, r1
    2c48:	f1 04       	cpc	r15, r1
    2c4a:	11 f0       	breq	.+4      	; 0x2c50 <conv_brk+0x146>
    2c4c:	d7 01       	movw	r26, r14
    2c4e:	1c 92       	st	X, r1
    2c50:	c8 01       	movw	r24, r16
    2c52:	a1 96       	adiw	r28, 0x21	; 33
    2c54:	ed e0       	ldi	r30, 0x0D	; 13
    2c56:	0c 94 18 11 	jmp	0x2230	; 0x2230 <__epilogue_restores__+0xa>

00002c5a <vfscanf>:
    2c5a:	4f 92       	push	r4
    2c5c:	5f 92       	push	r5
    2c5e:	7f 92       	push	r7
    2c60:	8f 92       	push	r8
    2c62:	9f 92       	push	r9
    2c64:	af 92       	push	r10
    2c66:	bf 92       	push	r11
    2c68:	cf 92       	push	r12
    2c6a:	df 92       	push	r13
    2c6c:	ef 92       	push	r14
    2c6e:	ff 92       	push	r15
    2c70:	0f 93       	push	r16
    2c72:	1f 93       	push	r17
    2c74:	cf 93       	push	r28
    2c76:	df 93       	push	r29
    2c78:	1f 92       	push	r1
    2c7a:	cd b7       	in	r28, 0x3d	; 61
    2c7c:	de b7       	in	r29, 0x3e	; 62
    2c7e:	8c 01       	movw	r16, r24
    2c80:	2b 01       	movw	r4, r22
    2c82:	7a 01       	movw	r14, r20
    2c84:	fc 01       	movw	r30, r24
    2c86:	17 82       	std	Z+7, r1	; 0x07
    2c88:	16 82       	std	Z+6, r1	; 0x06
    2c8a:	a1 2c       	mov	r10, r1
    2c8c:	f8 01       	movw	r30, r16
    2c8e:	d3 80       	ldd	r13, Z+3	; 0x03
    2c90:	f2 01       	movw	r30, r4
    2c92:	d3 fc       	sbrc	r13, 3
    2c94:	85 91       	lpm	r24, Z+
    2c96:	d3 fe       	sbrs	r13, 3
    2c98:	81 91       	ld	r24, Z+
    2c9a:	38 2f       	mov	r19, r24
    2c9c:	2f 01       	movw	r4, r30
    2c9e:	88 23       	and	r24, r24
    2ca0:	09 f4       	brne	.+2      	; 0x2ca4 <vfscanf+0x4a>
    2ca2:	fc c0       	rjmp	.+504    	; 0x2e9c <vfscanf+0x242>
    2ca4:	90 e0       	ldi	r25, 0x00	; 0
    2ca6:	39 83       	std	Y+1, r19	; 0x01
    2ca8:	0e 94 64 17 	call	0x2ec8	; 0x2ec8 <isspace>
    2cac:	39 81       	ldd	r19, Y+1	; 0x01
    2cae:	89 2b       	or	r24, r25
    2cb0:	21 f0       	breq	.+8      	; 0x2cba <vfscanf+0x60>
    2cb2:	c8 01       	movw	r24, r16
    2cb4:	0e 94 db 14 	call	0x29b6	; 0x29b6 <skip_spaces>
    2cb8:	e9 cf       	rjmp	.-46     	; 0x2c8c <vfscanf+0x32>
    2cba:	35 32       	cpi	r19, 0x25	; 37
    2cbc:	41 f4       	brne	.+16     	; 0x2cce <vfscanf+0x74>
    2cbe:	f2 01       	movw	r30, r4
    2cc0:	d3 fc       	sbrc	r13, 3
    2cc2:	35 91       	lpm	r19, Z+
    2cc4:	d3 fe       	sbrs	r13, 3
    2cc6:	31 91       	ld	r19, Z+
    2cc8:	2f 01       	movw	r4, r30
    2cca:	35 32       	cpi	r19, 0x25	; 37
    2ccc:	69 f4       	brne	.+26     	; 0x2ce8 <vfscanf+0x8e>
    2cce:	c8 01       	movw	r24, r16
    2cd0:	39 83       	std	Y+1, r19	; 0x01
    2cd2:	0e 94 77 17 	call	0x2eee	; 0x2eee <fgetc>
    2cd6:	39 81       	ldd	r19, Y+1	; 0x01
    2cd8:	97 fd       	sbrc	r25, 7
    2cda:	de c0       	rjmp	.+444    	; 0x2e98 <vfscanf+0x23e>
    2cdc:	38 17       	cp	r19, r24
    2cde:	b1 f2       	breq	.-84     	; 0x2c8c <vfscanf+0x32>
    2ce0:	b8 01       	movw	r22, r16
    2ce2:	0e 94 b5 17 	call	0x2f6a	; 0x2f6a <ungetc>
    2ce6:	da c0       	rjmp	.+436    	; 0x2e9c <vfscanf+0x242>
    2ce8:	3a 32       	cpi	r19, 0x2A	; 42
    2cea:	41 f4       	brne	.+16     	; 0x2cfc <vfscanf+0xa2>
    2cec:	d3 fc       	sbrc	r13, 3
    2cee:	35 91       	lpm	r19, Z+
    2cf0:	d3 fe       	sbrs	r13, 3
    2cf2:	31 91       	ld	r19, Z+
    2cf4:	2f 01       	movw	r4, r30
    2cf6:	bb 24       	eor	r11, r11
    2cf8:	b3 94       	inc	r11
    2cfa:	01 c0       	rjmp	.+2      	; 0x2cfe <vfscanf+0xa4>
    2cfc:	b1 2c       	mov	r11, r1
    2cfe:	71 2c       	mov	r7, r1
    2d00:	20 ed       	ldi	r18, 0xD0	; 208
    2d02:	23 0f       	add	r18, r19
    2d04:	2a 30       	cpi	r18, 0x0A	; 10
    2d06:	90 f4       	brcc	.+36     	; 0x2d2c <vfscanf+0xd2>
    2d08:	fb 2d       	mov	r31, r11
    2d0a:	f2 60       	ori	r31, 0x02	; 2
    2d0c:	bf 2e       	mov	r11, r31
    2d0e:	67 2d       	mov	r22, r7
    2d10:	70 e0       	ldi	r23, 0x00	; 0
    2d12:	80 e0       	ldi	r24, 0x00	; 0
    2d14:	90 e0       	ldi	r25, 0x00	; 0
    2d16:	40 e2       	ldi	r20, 0x20	; 32
    2d18:	0e 94 bb 14 	call	0x2976	; 0x2976 <mulacc>
    2d1c:	76 2e       	mov	r7, r22
    2d1e:	f2 01       	movw	r30, r4
    2d20:	d3 fc       	sbrc	r13, 3
    2d22:	35 91       	lpm	r19, Z+
    2d24:	d3 fe       	sbrs	r13, 3
    2d26:	31 91       	ld	r19, Z+
    2d28:	2f 01       	movw	r4, r30
    2d2a:	ea cf       	rjmp	.-44     	; 0x2d00 <vfscanf+0xa6>
    2d2c:	b1 fe       	sbrs	r11, 1
    2d2e:	03 c0       	rjmp	.+6      	; 0x2d36 <vfscanf+0xdc>
    2d30:	71 10       	cpse	r7, r1
    2d32:	03 c0       	rjmp	.+6      	; 0x2d3a <vfscanf+0xe0>
    2d34:	b3 c0       	rjmp	.+358    	; 0x2e9c <vfscanf+0x242>
    2d36:	77 24       	eor	r7, r7
    2d38:	7a 94       	dec	r7
    2d3a:	38 36       	cpi	r19, 0x68	; 104
    2d3c:	19 f0       	breq	.+6      	; 0x2d44 <vfscanf+0xea>
    2d3e:	3c 36       	cpi	r19, 0x6C	; 108
    2d40:	61 f0       	breq	.+24     	; 0x2d5a <vfscanf+0x100>
    2d42:	14 c0       	rjmp	.+40     	; 0x2d6c <vfscanf+0x112>
    2d44:	f2 01       	movw	r30, r4
    2d46:	d3 fc       	sbrc	r13, 3
    2d48:	35 91       	lpm	r19, Z+
    2d4a:	d3 fe       	sbrs	r13, 3
    2d4c:	31 91       	ld	r19, Z+
    2d4e:	2f 01       	movw	r4, r30
    2d50:	38 36       	cpi	r19, 0x68	; 104
    2d52:	61 f4       	brne	.+24     	; 0x2d6c <vfscanf+0x112>
    2d54:	fb 2d       	mov	r31, r11
    2d56:	f8 60       	ori	r31, 0x08	; 8
    2d58:	bf 2e       	mov	r11, r31
    2d5a:	8b 2d       	mov	r24, r11
    2d5c:	84 60       	ori	r24, 0x04	; 4
    2d5e:	b8 2e       	mov	r11, r24
    2d60:	f2 01       	movw	r30, r4
    2d62:	d3 fc       	sbrc	r13, 3
    2d64:	35 91       	lpm	r19, Z+
    2d66:	d3 fe       	sbrs	r13, 3
    2d68:	31 91       	ld	r19, Z+
    2d6a:	2f 01       	movw	r4, r30
    2d6c:	33 23       	and	r19, r19
    2d6e:	09 f4       	brne	.+2      	; 0x2d72 <vfscanf+0x118>
    2d70:	95 c0       	rjmp	.+298    	; 0x2e9c <vfscanf+0x242>
    2d72:	63 2f       	mov	r22, r19
    2d74:	70 e0       	ldi	r23, 0x00	; 0
    2d76:	8c ee       	ldi	r24, 0xEC	; 236
    2d78:	91 e0       	ldi	r25, 0x01	; 1
    2d7a:	39 83       	std	Y+1, r19	; 0x01
    2d7c:	0e 94 6c 17 	call	0x2ed8	; 0x2ed8 <strchr_P>
    2d80:	39 81       	ldd	r19, Y+1	; 0x01
    2d82:	89 2b       	or	r24, r25
    2d84:	09 f4       	brne	.+2      	; 0x2d88 <vfscanf+0x12e>
    2d86:	8a c0       	rjmp	.+276    	; 0x2e9c <vfscanf+0x242>
    2d88:	b0 fc       	sbrc	r11, 0
    2d8a:	07 c0       	rjmp	.+14     	; 0x2d9a <vfscanf+0x140>
    2d8c:	f7 01       	movw	r30, r14
    2d8e:	c0 80       	ld	r12, Z
    2d90:	d1 80       	ldd	r13, Z+1	; 0x01
    2d92:	c7 01       	movw	r24, r14
    2d94:	02 96       	adiw	r24, 0x02	; 2
    2d96:	7c 01       	movw	r14, r24
    2d98:	02 c0       	rjmp	.+4      	; 0x2d9e <vfscanf+0x144>
    2d9a:	c1 2c       	mov	r12, r1
    2d9c:	d1 2c       	mov	r13, r1
    2d9e:	3e 36       	cpi	r19, 0x6E	; 110
    2da0:	51 f4       	brne	.+20     	; 0x2db6 <vfscanf+0x15c>
    2da2:	f8 01       	movw	r30, r16
    2da4:	46 81       	ldd	r20, Z+6	; 0x06
    2da6:	57 81       	ldd	r21, Z+7	; 0x07
    2da8:	60 e0       	ldi	r22, 0x00	; 0
    2daa:	70 e0       	ldi	r23, 0x00	; 0
    2dac:	2b 2d       	mov	r18, r11
    2dae:	c6 01       	movw	r24, r12
    2db0:	0e 94 af 14 	call	0x295e	; 0x295e <putval>
    2db4:	6b cf       	rjmp	.-298    	; 0x2c8c <vfscanf+0x32>
    2db6:	33 36       	cpi	r19, 0x63	; 99
    2db8:	a1 f4       	brne	.+40     	; 0x2de2 <vfscanf+0x188>
    2dba:	b1 fc       	sbrc	r11, 1
    2dbc:	02 c0       	rjmp	.+4      	; 0x2dc2 <vfscanf+0x168>
    2dbe:	77 24       	eor	r7, r7
    2dc0:	73 94       	inc	r7
    2dc2:	c8 01       	movw	r24, r16
    2dc4:	0e 94 77 17 	call	0x2eee	; 0x2eee <fgetc>
    2dc8:	97 fd       	sbrc	r25, 7
    2dca:	66 c0       	rjmp	.+204    	; 0x2e98 <vfscanf+0x23e>
    2dcc:	c1 14       	cp	r12, r1
    2dce:	d1 04       	cpc	r13, r1
    2dd0:	29 f0       	breq	.+10     	; 0x2ddc <vfscanf+0x182>
    2dd2:	f6 01       	movw	r30, r12
    2dd4:	80 83       	st	Z, r24
    2dd6:	c6 01       	movw	r24, r12
    2dd8:	01 96       	adiw	r24, 0x01	; 1
    2dda:	6c 01       	movw	r12, r24
    2ddc:	7a 94       	dec	r7
    2dde:	89 f7       	brne	.-30     	; 0x2dc2 <vfscanf+0x168>
    2de0:	57 c0       	rjmp	.+174    	; 0x2e90 <vfscanf+0x236>
    2de2:	3b 35       	cpi	r19, 0x5B	; 91
    2de4:	59 f4       	brne	.+22     	; 0x2dfc <vfscanf+0x1a2>
    2de6:	92 01       	movw	r18, r4
    2de8:	a6 01       	movw	r20, r12
    2dea:	67 2d       	mov	r22, r7
    2dec:	c8 01       	movw	r24, r16
    2dee:	0e 94 85 15 	call	0x2b0a	; 0x2b0a <conv_brk>
    2df2:	2c 01       	movw	r4, r24
    2df4:	00 97       	sbiw	r24, 0x00	; 0
    2df6:	09 f0       	breq	.+2      	; 0x2dfa <vfscanf+0x1a0>
    2df8:	4b c0       	rjmp	.+150    	; 0x2e90 <vfscanf+0x236>
    2dfa:	45 c0       	rjmp	.+138    	; 0x2e86 <vfscanf+0x22c>
    2dfc:	c8 01       	movw	r24, r16
    2dfe:	39 83       	std	Y+1, r19	; 0x01
    2e00:	0e 94 db 14 	call	0x29b6	; 0x29b6 <skip_spaces>
    2e04:	39 81       	ldd	r19, Y+1	; 0x01
    2e06:	97 fd       	sbrc	r25, 7
    2e08:	47 c0       	rjmp	.+142    	; 0x2e98 <vfscanf+0x23e>
    2e0a:	3f 36       	cpi	r19, 0x6F	; 111
    2e0c:	69 f1       	breq	.+90     	; 0x2e68 <vfscanf+0x20e>
    2e0e:	28 f4       	brcc	.+10     	; 0x2e1a <vfscanf+0x1c0>
    2e10:	34 36       	cpi	r19, 0x64	; 100
    2e12:	31 f1       	breq	.+76     	; 0x2e60 <vfscanf+0x206>
    2e14:	39 36       	cpi	r19, 0x69	; 105
    2e16:	79 f1       	breq	.+94     	; 0x2e76 <vfscanf+0x21c>
    2e18:	2b c0       	rjmp	.+86     	; 0x2e70 <vfscanf+0x216>
    2e1a:	33 37       	cpi	r19, 0x73	; 115
    2e1c:	69 f0       	breq	.+26     	; 0x2e38 <vfscanf+0x1de>
    2e1e:	35 37       	cpi	r19, 0x75	; 117
    2e20:	f9 f0       	breq	.+62     	; 0x2e60 <vfscanf+0x206>
    2e22:	26 c0       	rjmp	.+76     	; 0x2e70 <vfscanf+0x216>
    2e24:	c1 14       	cp	r12, r1
    2e26:	d1 04       	cpc	r13, r1
    2e28:	29 f0       	breq	.+10     	; 0x2e34 <vfscanf+0x1da>
    2e2a:	f6 01       	movw	r30, r12
    2e2c:	80 82       	st	Z, r8
    2e2e:	c6 01       	movw	r24, r12
    2e30:	01 96       	adiw	r24, 0x01	; 1
    2e32:	6c 01       	movw	r12, r24
    2e34:	7a 94       	dec	r7
    2e36:	71 f0       	breq	.+28     	; 0x2e54 <vfscanf+0x1fa>
    2e38:	c8 01       	movw	r24, r16
    2e3a:	0e 94 77 17 	call	0x2eee	; 0x2eee <fgetc>
    2e3e:	4c 01       	movw	r8, r24
    2e40:	97 fd       	sbrc	r25, 7
    2e42:	08 c0       	rjmp	.+16     	; 0x2e54 <vfscanf+0x1fa>
    2e44:	0e 94 64 17 	call	0x2ec8	; 0x2ec8 <isspace>
    2e48:	89 2b       	or	r24, r25
    2e4a:	61 f3       	breq	.-40     	; 0x2e24 <vfscanf+0x1ca>
    2e4c:	b8 01       	movw	r22, r16
    2e4e:	c4 01       	movw	r24, r8
    2e50:	0e 94 b5 17 	call	0x2f6a	; 0x2f6a <ungetc>
    2e54:	c1 14       	cp	r12, r1
    2e56:	d1 04       	cpc	r13, r1
    2e58:	d9 f0       	breq	.+54     	; 0x2e90 <vfscanf+0x236>
    2e5a:	f6 01       	movw	r30, r12
    2e5c:	10 82       	st	Z, r1
    2e5e:	18 c0       	rjmp	.+48     	; 0x2e90 <vfscanf+0x236>
    2e60:	fb 2d       	mov	r31, r11
    2e62:	f0 62       	ori	r31, 0x20	; 32
    2e64:	bf 2e       	mov	r11, r31
    2e66:	07 c0       	rjmp	.+14     	; 0x2e76 <vfscanf+0x21c>
    2e68:	8b 2d       	mov	r24, r11
    2e6a:	80 61       	ori	r24, 0x10	; 16
    2e6c:	b8 2e       	mov	r11, r24
    2e6e:	03 c0       	rjmp	.+6      	; 0x2e76 <vfscanf+0x21c>
    2e70:	9b 2d       	mov	r25, r11
    2e72:	90 64       	ori	r25, 0x40	; 64
    2e74:	b9 2e       	mov	r11, r25
    2e76:	2b 2d       	mov	r18, r11
    2e78:	a6 01       	movw	r20, r12
    2e7a:	67 2d       	mov	r22, r7
    2e7c:	c8 01       	movw	r24, r16
    2e7e:	0e 94 f4 14 	call	0x29e8	; 0x29e8 <conv_int>
    2e82:	81 11       	cpse	r24, r1
    2e84:	05 c0       	rjmp	.+10     	; 0x2e90 <vfscanf+0x236>
    2e86:	f8 01       	movw	r30, r16
    2e88:	83 81       	ldd	r24, Z+3	; 0x03
    2e8a:	80 73       	andi	r24, 0x30	; 48
    2e8c:	29 f4       	brne	.+10     	; 0x2e98 <vfscanf+0x23e>
    2e8e:	06 c0       	rjmp	.+12     	; 0x2e9c <vfscanf+0x242>
    2e90:	b0 fc       	sbrc	r11, 0
    2e92:	fc ce       	rjmp	.-520    	; 0x2c8c <vfscanf+0x32>
    2e94:	a3 94       	inc	r10
    2e96:	fa ce       	rjmp	.-524    	; 0x2c8c <vfscanf+0x32>
    2e98:	aa 20       	and	r10, r10
    2e9a:	19 f0       	breq	.+6      	; 0x2ea2 <vfscanf+0x248>
    2e9c:	8a 2d       	mov	r24, r10
    2e9e:	90 e0       	ldi	r25, 0x00	; 0
    2ea0:	02 c0       	rjmp	.+4      	; 0x2ea6 <vfscanf+0x24c>
    2ea2:	8f ef       	ldi	r24, 0xFF	; 255
    2ea4:	9f ef       	ldi	r25, 0xFF	; 255
    2ea6:	0f 90       	pop	r0
    2ea8:	df 91       	pop	r29
    2eaa:	cf 91       	pop	r28
    2eac:	1f 91       	pop	r17
    2eae:	0f 91       	pop	r16
    2eb0:	ff 90       	pop	r15
    2eb2:	ef 90       	pop	r14
    2eb4:	df 90       	pop	r13
    2eb6:	cf 90       	pop	r12
    2eb8:	bf 90       	pop	r11
    2eba:	af 90       	pop	r10
    2ebc:	9f 90       	pop	r9
    2ebe:	8f 90       	pop	r8
    2ec0:	7f 90       	pop	r7
    2ec2:	5f 90       	pop	r5
    2ec4:	4f 90       	pop	r4
    2ec6:	08 95       	ret

00002ec8 <isspace>:
    2ec8:	91 11       	cpse	r25, r1
    2eca:	68 c0       	rjmp	.+208    	; 0x2f9c <__ctype_isfalse>
    2ecc:	80 32       	cpi	r24, 0x20	; 32
    2ece:	19 f0       	breq	.+6      	; 0x2ed6 <isspace+0xe>
    2ed0:	89 50       	subi	r24, 0x09	; 9
    2ed2:	85 50       	subi	r24, 0x05	; 5
    2ed4:	d0 f7       	brcc	.-12     	; 0x2eca <isspace+0x2>
    2ed6:	08 95       	ret

00002ed8 <strchr_P>:
    2ed8:	fc 01       	movw	r30, r24
    2eda:	05 90       	lpm	r0, Z+
    2edc:	06 16       	cp	r0, r22
    2ede:	21 f0       	breq	.+8      	; 0x2ee8 <strchr_P+0x10>
    2ee0:	00 20       	and	r0, r0
    2ee2:	d9 f7       	brne	.-10     	; 0x2eda <strchr_P+0x2>
    2ee4:	c0 01       	movw	r24, r0
    2ee6:	08 95       	ret
    2ee8:	31 97       	sbiw	r30, 0x01	; 1
    2eea:	cf 01       	movw	r24, r30
    2eec:	08 95       	ret

00002eee <fgetc>:
    2eee:	cf 93       	push	r28
    2ef0:	df 93       	push	r29
    2ef2:	ec 01       	movw	r28, r24
    2ef4:	2b 81       	ldd	r18, Y+3	; 0x03
    2ef6:	20 ff       	sbrs	r18, 0
    2ef8:	33 c0       	rjmp	.+102    	; 0x2f60 <fgetc+0x72>
    2efa:	26 ff       	sbrs	r18, 6
    2efc:	0a c0       	rjmp	.+20     	; 0x2f12 <fgetc+0x24>
    2efe:	2f 7b       	andi	r18, 0xBF	; 191
    2f00:	2b 83       	std	Y+3, r18	; 0x03
    2f02:	8e 81       	ldd	r24, Y+6	; 0x06
    2f04:	9f 81       	ldd	r25, Y+7	; 0x07
    2f06:	01 96       	adiw	r24, 0x01	; 1
    2f08:	9f 83       	std	Y+7, r25	; 0x07
    2f0a:	8e 83       	std	Y+6, r24	; 0x06
    2f0c:	8a 81       	ldd	r24, Y+2	; 0x02
    2f0e:	90 e0       	ldi	r25, 0x00	; 0
    2f10:	29 c0       	rjmp	.+82     	; 0x2f64 <fgetc+0x76>
    2f12:	22 ff       	sbrs	r18, 2
    2f14:	0f c0       	rjmp	.+30     	; 0x2f34 <fgetc+0x46>
    2f16:	e8 81       	ld	r30, Y
    2f18:	f9 81       	ldd	r31, Y+1	; 0x01
    2f1a:	80 81       	ld	r24, Z
    2f1c:	99 27       	eor	r25, r25
    2f1e:	87 fd       	sbrc	r24, 7
    2f20:	90 95       	com	r25
    2f22:	00 97       	sbiw	r24, 0x00	; 0
    2f24:	19 f4       	brne	.+6      	; 0x2f2c <fgetc+0x3e>
    2f26:	20 62       	ori	r18, 0x20	; 32
    2f28:	2b 83       	std	Y+3, r18	; 0x03
    2f2a:	1a c0       	rjmp	.+52     	; 0x2f60 <fgetc+0x72>
    2f2c:	31 96       	adiw	r30, 0x01	; 1
    2f2e:	f9 83       	std	Y+1, r31	; 0x01
    2f30:	e8 83       	st	Y, r30
    2f32:	0e c0       	rjmp	.+28     	; 0x2f50 <fgetc+0x62>
    2f34:	ea 85       	ldd	r30, Y+10	; 0x0a
    2f36:	fb 85       	ldd	r31, Y+11	; 0x0b
    2f38:	09 95       	icall
    2f3a:	97 ff       	sbrs	r25, 7
    2f3c:	09 c0       	rjmp	.+18     	; 0x2f50 <fgetc+0x62>
    2f3e:	2b 81       	ldd	r18, Y+3	; 0x03
    2f40:	01 96       	adiw	r24, 0x01	; 1
    2f42:	11 f4       	brne	.+4      	; 0x2f48 <fgetc+0x5a>
    2f44:	80 e1       	ldi	r24, 0x10	; 16
    2f46:	01 c0       	rjmp	.+2      	; 0x2f4a <fgetc+0x5c>
    2f48:	80 e2       	ldi	r24, 0x20	; 32
    2f4a:	82 2b       	or	r24, r18
    2f4c:	8b 83       	std	Y+3, r24	; 0x03
    2f4e:	08 c0       	rjmp	.+16     	; 0x2f60 <fgetc+0x72>
    2f50:	2e 81       	ldd	r18, Y+6	; 0x06
    2f52:	3f 81       	ldd	r19, Y+7	; 0x07
    2f54:	2f 5f       	subi	r18, 0xFF	; 255
    2f56:	3f 4f       	sbci	r19, 0xFF	; 255
    2f58:	3f 83       	std	Y+7, r19	; 0x07
    2f5a:	2e 83       	std	Y+6, r18	; 0x06
    2f5c:	99 27       	eor	r25, r25
    2f5e:	02 c0       	rjmp	.+4      	; 0x2f64 <fgetc+0x76>
    2f60:	8f ef       	ldi	r24, 0xFF	; 255
    2f62:	9f ef       	ldi	r25, 0xFF	; 255
    2f64:	df 91       	pop	r29
    2f66:	cf 91       	pop	r28
    2f68:	08 95       	ret

00002f6a <ungetc>:
    2f6a:	fb 01       	movw	r30, r22
    2f6c:	23 81       	ldd	r18, Z+3	; 0x03
    2f6e:	20 ff       	sbrs	r18, 0
    2f70:	12 c0       	rjmp	.+36     	; 0x2f96 <ungetc+0x2c>
    2f72:	26 fd       	sbrc	r18, 6
    2f74:	10 c0       	rjmp	.+32     	; 0x2f96 <ungetc+0x2c>
    2f76:	8f 3f       	cpi	r24, 0xFF	; 255
    2f78:	3f ef       	ldi	r19, 0xFF	; 255
    2f7a:	93 07       	cpc	r25, r19
    2f7c:	61 f0       	breq	.+24     	; 0x2f96 <ungetc+0x2c>
    2f7e:	82 83       	std	Z+2, r24	; 0x02
    2f80:	2f 7d       	andi	r18, 0xDF	; 223
    2f82:	20 64       	ori	r18, 0x40	; 64
    2f84:	23 83       	std	Z+3, r18	; 0x03
    2f86:	26 81       	ldd	r18, Z+6	; 0x06
    2f88:	37 81       	ldd	r19, Z+7	; 0x07
    2f8a:	21 50       	subi	r18, 0x01	; 1
    2f8c:	31 09       	sbc	r19, r1
    2f8e:	37 83       	std	Z+7, r19	; 0x07
    2f90:	26 83       	std	Z+6, r18	; 0x06
    2f92:	99 27       	eor	r25, r25
    2f94:	08 95       	ret
    2f96:	8f ef       	ldi	r24, 0xFF	; 255
    2f98:	9f ef       	ldi	r25, 0xFF	; 255
    2f9a:	08 95       	ret

00002f9c <__ctype_isfalse>:
    2f9c:	99 27       	eor	r25, r25
    2f9e:	88 27       	eor	r24, r24

00002fa0 <__ctype_istrue>:
    2fa0:	08 95       	ret

00002fa2 <_exit>:
    2fa2:	f8 94       	cli

00002fa4 <__stop_program>:
    2fa4:	ff cf       	rjmp	.-2      	; 0x2fa4 <__stop_program>
