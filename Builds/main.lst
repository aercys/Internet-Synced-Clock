   1               		.file	"main.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
 122               	.global	__vector_9
 124               	__vector_9:
   1:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c **** #include <stdio.h>
   2:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c **** #include <avr/io.h>
   3:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c **** #include <avr/interrupt.h>
   4:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c **** #include <util/delay.h>
   5:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c **** #include <stdlib.h>
   6:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c **** 
   7:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c **** #include "uart.h"
   8:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c **** #include "lcd.h"
   9:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c **** #include "bmp180.h"
  10:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c **** #include "rtc.h"
  11:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c **** #include "espwifi.h"
  12:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c **** 
  13:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c **** 
  14:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c **** FILE uart_output = FDEV_SETUP_STREAM(send_uart_char, NULL, _FDEV_SETUP_WRITE);
  15:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c **** 
  16:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c **** volatile second_ticks = 0;
  17:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c **** 
  18:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c **** ISR(TIMER2_OVF_vect) {
 126               	.LM0:
 127               	.LFBB1:
 128 0000 1F92      		push r1
 129 0002 0F92      		push r0
 130 0004 0FB6      		in r0,__SREG__
 131 0006 0F92      		push r0
 132 0008 1124      		clr __zero_reg__
 133 000a 2F93      		push r18
 134 000c 3F93      		push r19
 135 000e 4F93      		push r20
 136 0010 5F93      		push r21
 137 0012 6F93      		push r22
 138 0014 7F93      		push r23
 139 0016 8F93      		push r24
 140 0018 9F93      		push r25
 141 001a AF93      		push r26
 142 001c BF93      		push r27
 143 001e EF93      		push r30
 144 0020 FF93      		push r31
 145               	/* prologue: Signal */
 146               	/* frame size = 0 */
 147               	/* stack size = 15 */
 148               	.L__stack_usage = 15
  19:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     update_rtc();
 150               	.LM1:
 151 0022 0E94 0000 		call update_rtc
  20:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     if (second_ticks++ == 5) {
 153               	.LM2:
 154 0026 8091 0000 		lds r24,second_ticks
 155 002a 9091 0000 		lds r25,second_ticks+1
 156 002e 9C01      		movw r18,r24
 157 0030 2F5F      		subi r18,-1
 158 0032 3F4F      		sbci r19,-1
 159 0034 3093 0000 		sts second_ticks+1,r19
 160 0038 2093 0000 		sts second_ticks,r18
 161 003c 0597      		sbiw r24,5
 162 003e 01F4      		brne .L1
  21:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****         second_ticks = 0;
 164               	.LM3:
 165 0040 1092 0000 		sts second_ticks+1,__zero_reg__
 166 0044 1092 0000 		sts second_ticks,__zero_reg__
 167               	.L1:
 168               	/* epilogue start */
  22:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     }
  23:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c **** }
 170               	.LM4:
 171 0048 FF91      		pop r31
 172 004a EF91      		pop r30
 173 004c BF91      		pop r27
 174 004e AF91      		pop r26
 175 0050 9F91      		pop r25
 176 0052 8F91      		pop r24
 177 0054 7F91      		pop r23
 178 0056 6F91      		pop r22
 179 0058 5F91      		pop r21
 180 005a 4F91      		pop r20
 181 005c 3F91      		pop r19
 182 005e 2F91      		pop r18
 183 0060 0F90      		pop r0
 184 0062 0FBE      		out __SREG__,r0
 185 0064 0F90      		pop r0
 186 0066 1F90      		pop r1
 187 0068 1895      		reti
 189               	.Lscope1:
 190               		.section	.rodata
 191               	.LC0:
 192 0000 20        		.byte	32
 193 0001 20        		.byte	32
 194 0002 20        		.byte	32
 195 0003 20        		.byte	32
 196 0004 20        		.byte	32
 197 0005 20        		.byte	32
 198 0006 20        		.byte	32
 199 0007 20        		.byte	32
 200 0008 20        		.byte	32
 201 0009 20        		.byte	32
 202 000a 20        		.byte	32
 203 000b 20        		.byte	32
 204 000c 20        		.byte	32
 205 000d 20        		.byte	32
 206 000e 00        		.byte	0
 207               		.text
 211               	.global	lcd_msg
 213               	lcd_msg:
  24:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c **** 
  25:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c **** 
  26:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c **** void lcd_msg(unsigned char *fmt, uint8_t line, ...) {
 215               	.LM5:
 216               	.LFBB2:
 217 006a FF92      		push r15
 218 006c 0F93      		push r16
 219 006e 1F93      		push r17
 220 0070 CF93      		push r28
 221 0072 DF93      		push r29
 222 0074 CDB7      		in r28,__SP_L__
 223 0076 DEB7      		in r29,__SP_H__
 224 0078 2F97      		sbiw r28,15
 225 007a 0FB6      		in __tmp_reg__,__SREG__
 226 007c F894      		cli
 227 007e DEBF      		out __SP_H__,r29
 228 0080 0FBE      		out __SREG__,__tmp_reg__
 229 0082 CDBF      		out __SP_L__,r28
 230               	/* prologue: function */
 231               	/* frame size = 15 */
 232               	/* stack size = 20 */
 233               	.L__stack_usage = 20
 234 0084 F98C      		ldd r15,Y+25
  27:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     va_list aptr;
  28:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     unsigned char *lcd_buffer = malloc(sizeof(unsigned char *) * 20);
 236               	.LM6:
 237 0086 88E2      		ldi r24,lo8(40)
 238 0088 90E0      		ldi r25,0
 239 008a 0E94 0000 		call malloc
 240 008e 8C01      		movw r16,r24
  29:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     
  30:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     unsigned char padding[15] = {0x20, 0x20, 0x20, 0x20, 0x20,
 242               	.LM7:
 243 0090 8FE0      		ldi r24,lo8(15)
 244 0092 E0E0      		ldi r30,lo8(.LC0)
 245 0094 F0E0      		ldi r31,hi8(.LC0)
 246 0096 DE01      		movw r26,r28
 247 0098 1196      		adiw r26,1
 248               		0:
 249 009a 0190      		ld r0,Z+
 250 009c 0D92      		st X+,r0
 251 009e 8A95      		dec r24
 252 00a0 01F4      		brne 0b
  31:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****                                 0x20, 0x20, 0x20, 0x20, 0x20,
  32:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****                                 0x20, 0x20, 0x20, 0x20, '\0'};
  33:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     
  34:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     if (line < 1) line = 1;
 254               	.LM8:
 255 00a2 F110      		cpse r15,__zero_reg__
 256 00a4 00C0      		rjmp .L5
 257 00a6 FF24      		clr r15
 258 00a8 F394      		inc r15
 259               	.L5:
  35:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     
  36:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     va_start(aptr, fmt);
  37:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     vsprintf(lcd_buffer, fmt, aptr);
 261               	.LM9:
 262 00aa AE01      		movw r20,r28
 263 00ac 465E      		subi r20,-26
 264 00ae 5F4F      		sbci r21,-1
 265 00b0 6F89      		ldd r22,Y+23
 266 00b2 788D      		ldd r23,Y+24
 267 00b4 C801      		movw r24,r16
 268 00b6 0E94 0000 		call vsprintf
  38:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     lcd_gotoxy(0, line - 1);
 270               	.LM10:
 271 00ba FA94      		dec r15
 272 00bc 6F2D      		mov r22,r15
 273 00be 80E0      		ldi r24,0
 274 00c0 0E94 0000 		call lcd_gotoxy
  39:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     lcd_puts((unsigned char *) padding);
 276               	.LM11:
 277 00c4 CE01      		movw r24,r28
 278 00c6 0196      		adiw r24,1
 279 00c8 0E94 0000 		call lcd_puts
  40:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     lcd_gotoxy(0, line - 1);
 281               	.LM12:
 282 00cc 6F2D      		mov r22,r15
 283 00ce 80E0      		ldi r24,0
 284 00d0 0E94 0000 		call lcd_gotoxy
  41:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     lcd_puts(lcd_buffer);
 286               	.LM13:
 287 00d4 C801      		movw r24,r16
 288 00d6 0E94 0000 		call lcd_puts
  42:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     free(lcd_buffer);
 290               	.LM14:
 291 00da C801      		movw r24,r16
 292 00dc 0E94 0000 		call free
 293               	/* epilogue start */
  43:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c **** }
 295               	.LM15:
 296 00e0 2F96      		adiw r28,15
 297 00e2 0FB6      		in __tmp_reg__,__SREG__
 298 00e4 F894      		cli
 299 00e6 DEBF      		out __SP_H__,r29
 300 00e8 0FBE      		out __SREG__,__tmp_reg__
 301 00ea CDBF      		out __SP_L__,r28
 302 00ec DF91      		pop r29
 303 00ee CF91      		pop r28
 304 00f0 1F91      		pop r17
 305 00f2 0F91      		pop r16
 306 00f4 FF90      		pop r15
 307 00f6 0895      		ret
 314               	.Lscope2:
 315               		.section	.rodata.str1.1,"aMS",@progbits,1
 316               	.LC1:
 317 0000 252E 3266 		.string	"%.2f %cC %02d:%02d"
 317      2025 6343 
 317      2025 3032 
 317      643A 2530 
 317      3264 00
 318               	.LC2:
 319 0013 2530 3264 		.string	"%02d/%02d/%02d"
 319      2F25 3032 
 319      642F 2530 
 319      3264 00
 320               		.text
 322               	.global	update_display
 324               	update_display:
  44:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c **** 
  45:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c **** void update_display() {
 326               	.LM16:
 327               	.LFBB3:
 328 00f8 0F93      		push r16
 329 00fa 1F93      		push r17
 330 00fc CF93      		push r28
 331 00fe DF93      		push r29
 332               	/* prologue: function */
 333               	/* frame size = 0 */
 334               	/* stack size = 4 */
 335               	.L__stack_usage = 4
  46:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     calculate();
 337               	.LM17:
 338 0100 0E94 0000 		call calculate
  47:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     lcd_clrscr();
 340               	.LM18:
 341 0104 0E94 0000 		call lcd_clrscr
  48:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     lcd_msg("%.2f %cC %02d:%02d", 1, (float) get_temperature(), (char) 223, get_hour(), get_minute(
 343               	.LM19:
 344 0108 0E94 0000 		call get_minute
 345 010c 182F      		mov r17,r24
 346 010e 092F      		mov r16,r25
 347 0110 0E94 0000 		call get_hour
 348 0114 EC01      		movw r28,r24
 349 0116 0E94 0000 		call get_temperature
 350 011a 0F93      		push r16
 351 011c 1F93      		push r17
 352 011e DF93      		push r29
 353 0120 CF93      		push r28
 354 0122 1F92      		push __zero_reg__
 355 0124 2FED      		ldi r18,lo8(-33)
 356 0126 2F93      		push r18
 357 0128 9F93      		push r25
 358 012a 8F93      		push r24
 359 012c 7F93      		push r23
 360 012e 6F93      		push r22
 361 0130 81E0      		ldi r24,lo8(1)
 362 0132 8F93      		push r24
 363 0134 80E0      		ldi r24,lo8(.LC1)
 364 0136 90E0      		ldi r25,hi8(.LC1)
 365 0138 9F93      		push r25
 366 013a 8F93      		push r24
 367 013c 0E94 0000 		call lcd_msg
  49:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     lcd_msg("%02d/%02d/%02d", 2, get_day(), get_month(), get_year());
 369               	.LM20:
 370 0140 0E94 0000 		call get_year
 371 0144 182F      		mov r17,r24
 372 0146 092F      		mov r16,r25
 373 0148 0E94 0000 		call get_month
 374 014c EC01      		movw r28,r24
 375 014e 0E94 0000 		call get_day
 376 0152 0F93      		push r16
 377 0154 1F93      		push r17
 378 0156 DF93      		push r29
 379 0158 CF93      		push r28
 380 015a 9F93      		push r25
 381 015c 8F93      		push r24
 382 015e 82E0      		ldi r24,lo8(2)
 383 0160 8F93      		push r24
 384 0162 80E0      		ldi r24,lo8(.LC2)
 385 0164 90E0      		ldi r25,hi8(.LC2)
 386 0166 9F93      		push r25
 387 0168 8F93      		push r24
 388 016a 0E94 0000 		call lcd_msg
 389               	.LBB6:
 390               	.LBB7:
 392               	.Ltext1:
   1:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    All rights reserved.
   5:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
   6:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Redistribution and use in source and binary forms, with or without
   7:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    modification, are permitted provided that the following conditions are met:
   8:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
   9:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    * Redistributions of source code must retain the above copyright
  10:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer.
  11:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  12:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer in
  14:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****      the documentation and/or other materials provided with the
  15:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****      distribution.
  16:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  17:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    * Neither the name of the copyright holders nor the names of
  18:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****      contributors may be used to endorse or promote products derived
  19:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****      from this software without specific prior written permission.
  20:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  21:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  33:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** /* $Id$ */
  34:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  35:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #ifndef _UTIL_DELAY_H_
  36:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #define _UTIL_DELAY_H_ 1
  37:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  38:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #ifndef __HAS_DELAY_CYCLES
  39:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #define __HAS_DELAY_CYCLES 1
  40:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #endif
  41:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  42:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #include <inttypes.h>
  43:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #include <util/delay_basic.h>
  44:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #include <math.h>
  45:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  46:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** /** \file */
  47:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  48:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     \code
  49:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  50:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     //#define F_CPU 14.7456E6
  51:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     #include <util/delay.h>
  52:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     \endcode
  53:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  54:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     \note As an alternative method, it is possible to pass the
  55:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     F_CPU macro down to the compiler from the Makefile.
  56:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     Obviously, in that case, no \c \#define statement should be
  57:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     used.
  58:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  59:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     The functions in this header file are wrappers around the basic
  60:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  61:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     convenience functions where actual time values can be specified
  62:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  63:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     that compile-time constant expressions will be eliminated by
  64:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     compiler optimization so floating-point expressions can be used
  65:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     to calculate the number of delay cycles needed based on the CPU
  66:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     frequency passed by the macro F_CPU.
  67:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  68:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     \note In order for these functions to work as intended, compiler
  69:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  70:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     <em>must</em> be an expression that is a known constant at
  71:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     compile-time.  If these requirements are not met, the resulting
  72:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     delay will be much longer (and basically unpredictable), and
  73:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     applications that otherwise do not use floating-point calculations
  74:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     will experience severe code bloat by the floating-point library
  75:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     routines linked into the application.
  76:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  77:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     The functions available allow the specification of microsecond, and
  78:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     millisecond delays directly, using the application-supplied macro
  79:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  80:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  81:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** */
  82:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  83:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #if !defined(__DOXYGEN__)
  84:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** static inline void _delay_us(double __us) __attribute__((always_inline));
  85:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** static inline void _delay_ms(double __ms) __attribute__((always_inline));
  86:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #endif
  87:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  88:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #ifndef F_CPU
  89:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** /* prevent compiler error by supplying a default */
  90:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  91:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** # define F_CPU 1000000UL
  92:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #endif
  93:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  94:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #ifndef __OPTIMIZE__
  95:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
  96:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #endif
  97:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  98:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
  99:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 100:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   __STDC_HOSTED__
 101:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #  include <math.h>
 102:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #endif
 103:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 104:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** /**
 105:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    \ingroup util_delay
 106:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 107:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 108:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 109:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 110:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 111:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 112:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 113:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 114:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    When the user request delay which exceed the maximum possible one,
 115:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 116:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 117:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 118:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    user will not be informed about decreased resolution.
 119:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 120:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles(unsigned long)
 121:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For
 122:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    values greater than the maximal possible delay, overflows results in
 123:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    no delay i.e., 0ms.
 124:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 125:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Conversion of __us into clock cycles may not always result in integer.
 126:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    By default, the clock cycles rounded up to next integer. This ensures that
 127:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    the user gets atleast __us microseconds of delay.
 128:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 129:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Alternatively, user can define __DELAY_ROUND_DOWN__ and __DELAY_ROUND_CLOSEST__
 130:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    to round down and round to closest integer.
 131:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 132:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Note: The new implementation of _delay_ms(double __ms) with 
 133:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     __builtin_avr_delay_cycles(unsigned long) support is not backward compatible. 
 134:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    User can define __DELAY_BACKWARD_COMPATIBLE__ to get a backward compatible delay.
 135:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Also, the backward compatible
 136:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    algorithm will be chosen if the code is compiled in a <em>freestanding
 137:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    environment</em> (GCC option \c -ffreestanding), as the math functions
 138:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    required for rounding are not available to the compiler then.
 139:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 140:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****  */
 141:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** void
 142:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** _delay_ms(double __ms)
 143:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** {
 144:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	double __tmp ; 
 145:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 146:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 147:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   __STDC_HOSTED__
 148:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	uint32_t __ticks_dc;
 149:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 150:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 151:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 152:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 153:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 154:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 155:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 156:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 157:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 158:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	#else
 159:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 		//round up by default
 160:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 161:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	#endif
 162:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 163:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 394               	.LM21:
 395 016e 2FEF      		ldi r18,lo8(1599999)
 396 0170 89E6      		ldi r24,hi8(1599999)
 397 0172 98E1      		ldi r25,hlo8(1599999)
 398 0174 2150      		1: subi r18,1
 399 0176 8040      		sbci r24,0
 400 0178 9040      		sbci r25,0
 401 017a 01F4      		brne 1b
 402 017c 00C0      		rjmp .
 403 017e 0000      		nop
 404 0180 8DB7      		in r24,__SP_L__
 405 0182 9EB7      		in r25,__SP_H__
 406 0184 4696      		adiw r24,22
 407 0186 0FB6      		in __tmp_reg__,__SREG__
 408 0188 F894      		cli
 409 018a 9EBF      		out __SP_H__,r25
 410 018c 0FBE      		out __SREG__,__tmp_reg__
 411 018e 8DBF      		out __SP_L__,r24
 412               	/* epilogue start */
 413               	.LBE7:
 414               	.LBE6:
 416               	.Ltext2:
  50:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     _delay_ms(1000);
  51:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c **** }
 418               	.LM22:
 419 0190 DF91      		pop r29
 420 0192 CF91      		pop r28
 421 0194 1F91      		pop r17
 422 0196 0F91      		pop r16
 423 0198 0895      		ret
 425               	.Lscope3:
 426               		.section	.rodata.str1.1
 427               	.LC3:
 428 0022 496E 6974 		.string	"Init System!\n"
 428      2053 7973 
 428      7465 6D21 
 428      0A00 
 429               	.LC4:
 430 0030 5B49 6E69 		.string	"[Init]"
 430      745D 00
 431               	.LC5:
 432 0037 5769 6669 		.string	"Wifi: %s\n"
 432      3A20 2573 
 432      0A00 
 433               	.LC6:
 434 0041 5B4F 6B5D 		.string	"[Ok]"
 434      00
 435               	.LC7:
 436 0046 5769 6669 		.string	"Wifi: %s"
 436      3A20 2573 
 436      00
 437               	.LC8:
 438 004f 5B46 6169 		.string	"[Fail]"
 438      6C5D 00
 439               	.LC9:
 440 0056 5B42 7573 		.string	"[Busy]"
 440      795D 00
 441               	.LC10:
 442 005d 5365 6E73 		.string	"Sensor: %s"
 442      6F72 3A20 
 442      2573 00
 443               	.LC11:
 444 0068 5469 6D65 		.string	"Timer: %s"
 444      723A 2025 
 444      7300 
 445               	.LC12:
 446 0072 5379 7374 		.string	"System started!"
 446      656D 2073 
 446      7461 7274 
 446      6564 2100 
 447               		.text
 449               	.global	system_init
 451               	system_init:
  52:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c **** 
  53:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c **** void system_init() {
 453               	.LM23:
 454               	.LFBB4:
 455 019a FF92      		push r15
 456 019c 0F93      		push r16
 457 019e 1F93      		push r17
 458 01a0 CF93      		push r28
 459 01a2 DF93      		push r29
 460               	/* prologue: function */
 461               	/* frame size = 0 */
 462               	/* stack size = 5 */
 463               	.L__stack_usage = 5
  54:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     
  55:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     lcd_init(LCD_DISP_ON);
 465               	.LM24:
 466 01a4 8CE0      		ldi r24,lo8(12)
 467 01a6 0E94 0000 		call lcd_init
  56:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     lcd_clrscr();
 469               	.LM25:
 470 01aa 0E94 0000 		call lcd_clrscr
  57:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     lcd_puts("Init System!\n");
 472               	.LM26:
 473 01ae 80E0      		ldi r24,lo8(.LC3)
 474 01b0 90E0      		ldi r25,hi8(.LC3)
 475 01b2 0E94 0000 		call lcd_puts
  58:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     lcd_msg("Wifi: %s\n", 2, "[Init]");
 477               	.LM27:
 478 01b6 80E0      		ldi r24,lo8(.LC4)
 479 01b8 90E0      		ldi r25,hi8(.LC4)
 480 01ba 9F93      		push r25
 481 01bc 8F93      		push r24
 482 01be C2E0      		ldi r28,lo8(2)
 483 01c0 CF93      		push r28
 484 01c2 80E0      		ldi r24,lo8(.LC5)
 485 01c4 90E0      		ldi r25,hi8(.LC5)
 486 01c6 9F93      		push r25
 487 01c8 8F93      		push r24
 488 01ca 0E94 0000 		call lcd_msg
  59:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     if (init_wifi_module())
 490               	.LM28:
 491 01ce 0E94 0000 		call init_wifi_module
 492 01d2 0F90      		pop __tmp_reg__
 493 01d4 0F90      		pop __tmp_reg__
 494 01d6 0F90      		pop __tmp_reg__
 495 01d8 0F90      		pop __tmp_reg__
 496 01da 0F90      		pop __tmp_reg__
 497 01dc 892B      		or r24,r25
 498 01de 01F0      		breq .L9
  60:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     lcd_msg("Wifi: %s", 2, "[Ok]");
 500               	.LM29:
 501 01e0 80E0      		ldi r24,lo8(.LC6)
 502 01e2 90E0      		ldi r25,hi8(.LC6)
 503 01e4 00C0      		rjmp .L11
 504               	.L9:
  61:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     else
  62:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     lcd_msg("Wifi: %s", 2, "[Fail]");
 506               	.LM30:
 507 01e6 80E0      		ldi r24,lo8(.LC8)
 508 01e8 90E0      		ldi r25,hi8(.LC8)
 509               	.L11:
 510 01ea 9F93      		push r25
 511 01ec 8F93      		push r24
 512 01ee CF93      		push r28
 513 01f0 80E0      		ldi r24,lo8(.LC7)
 514 01f2 90E0      		ldi r25,hi8(.LC7)
 515 01f4 9F93      		push r25
 516 01f6 8F93      		push r24
 517 01f8 0E94 0000 		call lcd_msg
 518 01fc 0F90      		pop __tmp_reg__
 519 01fe 0F90      		pop __tmp_reg__
 520 0200 0F90      		pop __tmp_reg__
 521 0202 0F90      		pop __tmp_reg__
 522 0204 0F90      		pop __tmp_reg__
  63:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     lcd_msg("Sensor: %s", 2, "[Busy]");
 524               	.LM31:
 525 0206 C0E0      		ldi r28,lo8(.LC9)
 526 0208 D0E0      		ldi r29,hi8(.LC9)
 527 020a DF93      		push r29
 528 020c CF93      		push r28
 529 020e 82E0      		ldi r24,lo8(2)
 530 0210 F82E      		mov r15,r24
 531 0212 FF92      		push r15
 532 0214 00E0      		ldi r16,lo8(.LC10)
 533 0216 10E0      		ldi r17,hi8(.LC10)
 534 0218 1F93      		push r17
 535 021a 0F93      		push r16
 536 021c 0E94 0000 		call lcd_msg
  64:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     init_sensor(bmp180_mode_0);
 538               	.LM32:
 539 0220 80E0      		ldi r24,0
 540 0222 90E0      		ldi r25,0
 541 0224 0E94 0000 		call init_sensor
  65:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     lcd_msg("Sensor: %s", 2, "[Ok]");
 543               	.LM33:
 544 0228 80E0      		ldi r24,lo8(.LC6)
 545 022a 90E0      		ldi r25,hi8(.LC6)
 546 022c 9F93      		push r25
 547 022e 8F93      		push r24
 548 0230 FF92      		push r15
 549 0232 1F93      		push r17
 550 0234 0F93      		push r16
 551 0236 0E94 0000 		call lcd_msg
  66:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     lcd_msg("Timer: %s", 2, "[Busy]");
 553               	.LM34:
 554 023a DF93      		push r29
 555 023c CF93      		push r28
 556 023e FF92      		push r15
 557 0240 80E0      		ldi r24,lo8(.LC11)
 558 0242 90E0      		ldi r25,hi8(.LC11)
 559 0244 9F93      		push r25
 560 0246 8F93      		push r24
 561 0248 0E94 0000 		call lcd_msg
  67:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     init_timer();
 563               	.LM35:
 564 024c 0E94 0000 		call init_timer
  68:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     sei();
 566               	.LM36:
 567               	/* #APP */
 568               	 ;  68 "/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c" 1
 569 0250 7894      		sei
 570               	 ;  0 "" 2
  69:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     lcd_msg("Timer: %s", 2, "[Ok]");
 572               	.LM37:
 573               	/* #NOAPP */
 574 0252 80E0      		ldi r24,lo8(.LC6)
 575 0254 90E0      		ldi r25,hi8(.LC6)
 576 0256 9F93      		push r25
 577 0258 8F93      		push r24
 578 025a 82E0      		ldi r24,lo8(2)
 579 025c 8F93      		push r24
 580 025e 80E0      		ldi r24,lo8(.LC11)
 581 0260 90E0      		ldi r25,hi8(.LC11)
 582 0262 9F93      		push r25
 583 0264 8F93      		push r24
 584 0266 0E94 0000 		call lcd_msg
  70:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     lcd_clrscr();
 586               	.LM38:
 587 026a 0E94 0000 		call lcd_clrscr
  71:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     lcd_msg("System started!", 1);
 589               	.LM39:
 590 026e 81E0      		ldi r24,lo8(1)
 591 0270 8F93      		push r24
 592 0272 80E0      		ldi r24,lo8(.LC12)
 593 0274 90E0      		ldi r25,hi8(.LC12)
 594 0276 9F93      		push r25
 595 0278 8F93      		push r24
 596 027a 0E94 0000 		call lcd_msg
 597 027e 8DB7      		in r24,__SP_L__
 598 0280 9EB7      		in r25,__SP_H__
 599 0282 4796      		adiw r24,23
 600 0284 0FB6      		in __tmp_reg__,__SREG__
 601 0286 F894      		cli
 602 0288 9EBF      		out __SP_H__,r25
 603 028a 0FBE      		out __SREG__,__tmp_reg__
 604 028c 8DBF      		out __SP_L__,r24
 605               	/* epilogue start */
  72:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c **** }
 607               	.LM40:
 608 028e DF91      		pop r29
 609 0290 CF91      		pop r28
 610 0292 1F91      		pop r17
 611 0294 0F91      		pop r16
 612 0296 FF90      		pop r15
 613 0298 0895      		ret
 615               	.Lscope4:
 616               		.section	.text.startup,"ax",@progbits
 618               	.global	main
 620               	main:
  73:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c **** 
  74:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c **** 
  75:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c **** 
  76:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c **** int main(void) {
 622               	.LM41:
 623               	.LFBB5:
 624               	/* prologue: function */
 625               	/* frame size = 0 */
 626               	/* stack size = 0 */
 627               	.L__stack_usage = 0
  77:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     
  78:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     stdout = &uart_output;
 629               	.LM42:
 630 0000 80E0      		ldi r24,lo8(uart_output)
 631 0002 90E0      		ldi r25,hi8(uart_output)
 632 0004 9093 0000 		sts __iob+2+1,r25
 633 0008 8093 0000 		sts __iob+2,r24
  79:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     
  80:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     system_init();
 635               	.LM43:
 636 000c 0E94 0000 		call system_init
 637               	.L13:
  81:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     
  82:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     while (1) {
  83:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****         update_display();
 639               	.LM44:
 640 0010 0E94 0000 		call update_display
 641               	.LBB8:
 642               	.LBB9:
 644               	.Ltext3:
 646               	.LM45:
 647 0014 2FEF      		ldi r18,lo8(799999)
 648 0016 84E3      		ldi r24,hi8(799999)
 649 0018 9CE0      		ldi r25,hlo8(799999)
 650 001a 2150      		1: subi r18,1
 651 001c 8040      		sbci r24,0
 652 001e 9040      		sbci r25,0
 653 0020 01F4      		brne 1b
 654 0022 00C0      		rjmp .
 655 0024 0000      		nop
 656 0026 00C0      		rjmp .L13
 657               	.LBE9:
 658               	.LBE8:
 660               	.Lscope5:
 661               	.global	second_ticks
 662               		.section .bss
 665               	second_ticks:
 666 0000 0000      		.zero	2
 667               	.global	uart_output
 668               		.data
 671               	uart_output:
 672 0000 0000 00   		.zero	3
 673 0003 02        		.byte	2
 674 0004 0000 0000 		.zero	4
 675 0008 0000      		.word	gs(send_uart_char)
 676 000a 0000      		.word	0
 677 000c 0000      		.word	0
 680               		.text
 682               	.Letext0:
 683               		.ident	"GCC: (GNU) 4.8.1"
 684               	.global __do_copy_data
 685               	.global __do_clear_bss
DEFINED SYMBOLS
                            *ABS*:00000000 main.c
/var/folders/2t/x0mw6nss4_z3npyvmny7gnnm0000gn/T//ccLx3UBU.s:2      *ABS*:0000003e __SP_H__
/var/folders/2t/x0mw6nss4_z3npyvmny7gnnm0000gn/T//ccLx3UBU.s:3      *ABS*:0000003d __SP_L__
/var/folders/2t/x0mw6nss4_z3npyvmny7gnnm0000gn/T//ccLx3UBU.s:4      *ABS*:0000003f __SREG__
/var/folders/2t/x0mw6nss4_z3npyvmny7gnnm0000gn/T//ccLx3UBU.s:5      *ABS*:00000000 __tmp_reg__
/var/folders/2t/x0mw6nss4_z3npyvmny7gnnm0000gn/T//ccLx3UBU.s:6      *ABS*:00000001 __zero_reg__
/var/folders/2t/x0mw6nss4_z3npyvmny7gnnm0000gn/T//ccLx3UBU.s:124    .text:00000000 __vector_9
/var/folders/2t/x0mw6nss4_z3npyvmny7gnnm0000gn/T//ccLx3UBU.s:665    .bss:00000000 second_ticks
/var/folders/2t/x0mw6nss4_z3npyvmny7gnnm0000gn/T//ccLx3UBU.s:213    .text:0000006a lcd_msg
/var/folders/2t/x0mw6nss4_z3npyvmny7gnnm0000gn/T//ccLx3UBU.s:324    .text:000000f8 update_display
/var/folders/2t/x0mw6nss4_z3npyvmny7gnnm0000gn/T//ccLx3UBU.s:451    .text:0000019a system_init
/var/folders/2t/x0mw6nss4_z3npyvmny7gnnm0000gn/T//ccLx3UBU.s:620    .text.startup:00000000 main
/var/folders/2t/x0mw6nss4_z3npyvmny7gnnm0000gn/T//ccLx3UBU.s:671    .data:00000000 uart_output

UNDEFINED SYMBOLS
update_rtc
malloc
vsprintf
lcd_gotoxy
lcd_puts
free
calculate
lcd_clrscr
get_minute
get_hour
get_temperature
get_year
get_month
get_day
lcd_init
init_wifi_module
init_sensor
init_timer
__iob
send_uart_char
__do_copy_data
__do_clear_bss
