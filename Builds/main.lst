   1               		.file	"main.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
 122               	.global	__vector_9
 124               	__vector_9:
   1:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c **** #include <stdio.h>
   2:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c **** #include <avr/io.h>
   3:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c **** #include <avr/interrupt.h>
   4:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c **** #include <util/delay.h>
   5:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c **** #include <stdlib.h>
   6:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c **** 
   7:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c **** 
   8:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c **** #include "uart.h"
   9:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c **** #include "lcd.h"
  10:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c **** #include "bmp180.h"
  11:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c **** #include "rtc.h"
  12:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c **** #include "espwifi.h"
  13:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c **** 
  14:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c **** 
  15:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c **** FILE uart_output = FDEV_SETUP_STREAM(send_uart_char, NULL, _FDEV_SETUP_WRITE);
  16:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c **** 
  17:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c **** char *lcd_buffer;
  18:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c **** 
  19:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c **** ISR(TIMER2_OVF_vect) {
 126               	.LM0:
 127               	.LFBB1:
 128 0000 1F92      		push r1
 129 0002 0F92      		push r0
 130 0004 0FB6      		in r0,__SREG__
 131 0006 0F92      		push r0
 132 0008 1124      		clr __zero_reg__
 133 000a 2F93      		push r18
 134 000c 3F93      		push r19
 135 000e 4F93      		push r20
 136 0010 5F93      		push r21
 137 0012 6F93      		push r22
 138 0014 7F93      		push r23
 139 0016 8F93      		push r24
 140 0018 9F93      		push r25
 141 001a AF93      		push r26
 142 001c BF93      		push r27
 143 001e EF93      		push r30
 144 0020 FF93      		push r31
 145               	/* prologue: Signal */
 146               	/* frame size = 0 */
 147               	/* stack size = 15 */
 148               	.L__stack_usage = 15
  20:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     update_rtc();
 150               	.LM1:
 151 0022 0E94 0000 		call update_rtc
  21:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     TCNT2 = 0x00;
 153               	.LM2:
 154 0026 1092 B200 		sts 178,__zero_reg__
 155               	/* epilogue start */
  22:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c **** }
 157               	.LM3:
 158 002a FF91      		pop r31
 159 002c EF91      		pop r30
 160 002e BF91      		pop r27
 161 0030 AF91      		pop r26
 162 0032 9F91      		pop r25
 163 0034 8F91      		pop r24
 164 0036 7F91      		pop r23
 165 0038 6F91      		pop r22
 166 003a 5F91      		pop r21
 167 003c 4F91      		pop r20
 168 003e 3F91      		pop r19
 169 0040 2F91      		pop r18
 170 0042 0F90      		pop r0
 171 0044 0FBE      		out __SREG__,r0
 172 0046 0F90      		pop r0
 173 0048 1F90      		pop r1
 174 004a 1895      		reti
 176               	.Lscope1:
 177               		.section	.rodata.str1.1,"aMS",@progbits,1
 178               	.LC0:
 179 0000 252E 3266 		.string	"%.2f %cC"
 179      2025 6343 
 179      00
 180               	.LC1:
 181 0009 2530 3264 		.string	"%02d:%02d"
 181      3A25 3032 
 181      6400 
 182               	.LC2:
 183 0013 2530 3264 		.string	"%02d/%02d/%02d"
 183      2F25 3032 
 183      642F 2530 
 183      3264 00
 184               		.text
 186               	.global	update_display
 188               	update_display:
  23:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c **** 
  24:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c **** 
  25:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c **** void update_display() {
 190               	.LM4:
 191               	.LFBB2:
 192 004c 0F93      		push r16
 193 004e 1F93      		push r17
 194 0050 CF93      		push r28
 195 0052 DF93      		push r29
 196               	/* prologue: function */
 197               	/* frame size = 0 */
 198               	/* stack size = 4 */
 199               	.L__stack_usage = 4
  26:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     
  27:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     calculate();
 201               	.LM5:
 202 0054 0E94 0000 		call calculate
  28:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     
  29:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     lcd_gotoxy(0, 0);
 204               	.LM6:
 205 0058 60E0      		ldi r22,0
 206 005a 80E0      		ldi r24,0
 207 005c 0E94 0000 		call lcd_gotoxy
  30:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     sprintf(lcd_buffer, "%.2f %cC",  (float) get_temperature(), (char) 223);
 209               	.LM7:
 210 0060 0E94 0000 		call get_temperature
 211 0064 1F92      		push __zero_reg__
 212 0066 2FED      		ldi r18,lo8(-33)
 213 0068 2F93      		push r18
 214 006a 9F93      		push r25
 215 006c 8F93      		push r24
 216 006e 7F93      		push r23
 217 0070 6F93      		push r22
 218 0072 80E0      		ldi r24,lo8(.LC0)
 219 0074 90E0      		ldi r25,hi8(.LC0)
 220 0076 9F93      		push r25
 221 0078 8F93      		push r24
 222 007a 8091 0000 		lds r24,lcd_buffer+1
 223 007e 8F93      		push r24
 224 0080 8091 0000 		lds r24,lcd_buffer
 225 0084 8F93      		push r24
 226 0086 0E94 0000 		call sprintf
  31:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     lcd_puts(lcd_buffer);
 228               	.LM8:
 229 008a 8091 0000 		lds r24,lcd_buffer
 230 008e 9091 0000 		lds r25,lcd_buffer+1
 231 0092 0E94 0000 		call lcd_puts
  32:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     
  33:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     sprintf(lcd_buffer, "%02d:%02d", get_hour(), get_minute());
 233               	.LM9:
 234 0096 0E94 0000 		call get_minute
 235 009a EC01      		movw r28,r24
 236 009c 0E94 0000 		call get_hour
 237 00a0 DF93      		push r29
 238 00a2 CF93      		push r28
 239 00a4 9F93      		push r25
 240 00a6 8F93      		push r24
 241 00a8 80E0      		ldi r24,lo8(.LC1)
 242 00aa 90E0      		ldi r25,hi8(.LC1)
 243 00ac 9F93      		push r25
 244 00ae 8F93      		push r24
 245 00b0 8091 0000 		lds r24,lcd_buffer+1
 246 00b4 8F93      		push r24
 247 00b6 8091 0000 		lds r24,lcd_buffer
 248 00ba 8F93      		push r24
 249 00bc 0E94 0000 		call sprintf
  34:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     lcd_gotoxy(11, 0);
 251               	.LM10:
 252 00c0 60E0      		ldi r22,0
 253 00c2 8BE0      		ldi r24,lo8(11)
 254 00c4 0E94 0000 		call lcd_gotoxy
  35:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     lcd_puts(lcd_buffer);
 256               	.LM11:
 257 00c8 8091 0000 		lds r24,lcd_buffer
 258 00cc 9091 0000 		lds r25,lcd_buffer+1
 259 00d0 0E94 0000 		call lcd_puts
  36:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     
  37:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     sprintf(lcd_buffer, "%02d/%02d/%02d", get_day(), get_month(), get_year());
 261               	.LM12:
 262 00d4 0E94 0000 		call get_year
 263 00d8 182F      		mov r17,r24
 264 00da 092F      		mov r16,r25
 265 00dc 0E94 0000 		call get_month
 266 00e0 EC01      		movw r28,r24
 267 00e2 0E94 0000 		call get_day
 268 00e6 0F93      		push r16
 269 00e8 1F93      		push r17
 270 00ea DF93      		push r29
 271 00ec CF93      		push r28
 272 00ee 9F93      		push r25
 273 00f0 8F93      		push r24
 274 00f2 80E0      		ldi r24,lo8(.LC2)
 275 00f4 90E0      		ldi r25,hi8(.LC2)
 276 00f6 9F93      		push r25
 277 00f8 8F93      		push r24
 278 00fa 8091 0000 		lds r24,lcd_buffer+1
 279 00fe 8F93      		push r24
 280 0100 8091 0000 		lds r24,lcd_buffer
 281 0104 8F93      		push r24
 282 0106 0E94 0000 		call sprintf
  38:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     lcd_gotoxy(0, 1);
 284               	.LM13:
 285 010a 61E0      		ldi r22,lo8(1)
 286 010c 80E0      		ldi r24,0
 287 010e 0E94 0000 		call lcd_gotoxy
  39:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     lcd_puts(lcd_buffer);
 289               	.LM14:
 290 0112 8091 0000 		lds r24,lcd_buffer
 291 0116 9091 0000 		lds r25,lcd_buffer+1
 292 011a 0E94 0000 		call lcd_puts
 293               	.LBB6:
 294               	.LBB7:
 296               	.Ltext1:
   1:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    All rights reserved.
   5:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
   6:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Redistribution and use in source and binary forms, with or without
   7:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    modification, are permitted provided that the following conditions are met:
   8:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
   9:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    * Redistributions of source code must retain the above copyright
  10:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer.
  11:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  12:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer in
  14:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****      the documentation and/or other materials provided with the
  15:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****      distribution.
  16:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  17:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    * Neither the name of the copyright holders nor the names of
  18:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****      contributors may be used to endorse or promote products derived
  19:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****      from this software without specific prior written permission.
  20:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  21:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  33:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** /* $Id$ */
  34:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  35:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #ifndef _UTIL_DELAY_H_
  36:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #define _UTIL_DELAY_H_ 1
  37:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  38:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #ifndef __HAS_DELAY_CYCLES
  39:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #define __HAS_DELAY_CYCLES 1
  40:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #endif
  41:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  42:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #include <inttypes.h>
  43:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #include <util/delay_basic.h>
  44:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #include <math.h>
  45:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  46:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** /** \file */
  47:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  48:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     \code
  49:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  50:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     //#define F_CPU 14.7456E6
  51:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     #include <util/delay.h>
  52:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     \endcode
  53:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  54:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     \note As an alternative method, it is possible to pass the
  55:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     F_CPU macro down to the compiler from the Makefile.
  56:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     Obviously, in that case, no \c \#define statement should be
  57:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     used.
  58:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  59:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     The functions in this header file are wrappers around the basic
  60:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  61:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     convenience functions where actual time values can be specified
  62:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  63:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     that compile-time constant expressions will be eliminated by
  64:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     compiler optimization so floating-point expressions can be used
  65:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     to calculate the number of delay cycles needed based on the CPU
  66:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     frequency passed by the macro F_CPU.
  67:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  68:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     \note In order for these functions to work as intended, compiler
  69:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  70:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     <em>must</em> be an expression that is a known constant at
  71:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     compile-time.  If these requirements are not met, the resulting
  72:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     delay will be much longer (and basically unpredictable), and
  73:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     applications that otherwise do not use floating-point calculations
  74:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     will experience severe code bloat by the floating-point library
  75:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     routines linked into the application.
  76:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  77:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     The functions available allow the specification of microsecond, and
  78:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     millisecond delays directly, using the application-supplied macro
  79:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  80:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  81:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** */
  82:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  83:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #if !defined(__DOXYGEN__)
  84:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** static inline void _delay_us(double __us) __attribute__((always_inline));
  85:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** static inline void _delay_ms(double __ms) __attribute__((always_inline));
  86:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #endif
  87:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  88:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #ifndef F_CPU
  89:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** /* prevent compiler error by supplying a default */
  90:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  91:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** # define F_CPU 1000000UL
  92:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #endif
  93:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  94:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #ifndef __OPTIMIZE__
  95:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
  96:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #endif
  97:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  98:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
  99:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 100:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   __STDC_HOSTED__
 101:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #  include <math.h>
 102:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #endif
 103:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 104:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** /**
 105:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    \ingroup util_delay
 106:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 107:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 108:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 109:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 110:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 111:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 112:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 113:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 114:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    When the user request delay which exceed the maximum possible one,
 115:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 116:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 117:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 118:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    user will not be informed about decreased resolution.
 119:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 120:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles(unsigned long)
 121:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For
 122:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    values greater than the maximal possible delay, overflows results in
 123:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    no delay i.e., 0ms.
 124:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 125:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Conversion of __us into clock cycles may not always result in integer.
 126:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    By default, the clock cycles rounded up to next integer. This ensures that
 127:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    the user gets atleast __us microseconds of delay.
 128:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 129:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Alternatively, user can define __DELAY_ROUND_DOWN__ and __DELAY_ROUND_CLOSEST__
 130:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    to round down and round to closest integer.
 131:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 132:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Note: The new implementation of _delay_ms(double __ms) with 
 133:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     __builtin_avr_delay_cycles(unsigned long) support is not backward compatible. 
 134:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    User can define __DELAY_BACKWARD_COMPATIBLE__ to get a backward compatible delay.
 135:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Also, the backward compatible
 136:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    algorithm will be chosen if the code is compiled in a <em>freestanding
 137:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    environment</em> (GCC option \c -ffreestanding), as the math functions
 138:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    required for rounding are not available to the compiler then.
 139:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 140:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****  */
 141:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** void
 142:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** _delay_ms(double __ms)
 143:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** {
 144:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	double __tmp ; 
 145:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 146:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 147:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   __STDC_HOSTED__
 148:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	uint32_t __ticks_dc;
 149:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 150:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 151:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 152:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 153:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 154:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 155:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 156:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 157:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 158:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	#else
 159:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 		//round up by default
 160:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 161:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	#endif
 162:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 163:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 298               	.LM15:
 299 011e 2FEF      		ldi r18,lo8(1599999)
 300 0120 89E6      		ldi r24,hi8(1599999)
 301 0122 98E1      		ldi r25,hlo8(1599999)
 302 0124 2150      		1: subi r18,1
 303 0126 8040      		sbci r24,0
 304 0128 9040      		sbci r25,0
 305 012a 01F4      		brne 1b
 306 012c 00C0      		rjmp .
 307 012e 0000      		nop
 308 0130 8DB7      		in r24,__SP_L__
 309 0132 9EB7      		in r25,__SP_H__
 310 0134 4C96      		adiw r24,28
 311 0136 0FB6      		in __tmp_reg__,__SREG__
 312 0138 F894      		cli
 313 013a 9EBF      		out __SP_H__,r25
 314 013c 0FBE      		out __SREG__,__tmp_reg__
 315 013e 8DBF      		out __SP_L__,r24
 316               	/* epilogue start */
 317               	.LBE7:
 318               	.LBE6:
 320               	.Ltext2:
  40:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     
  41:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     _delay_ms(1000);
  42:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c **** }
 322               	.LM16:
 323 0140 DF91      		pop r29
 324 0142 CF91      		pop r28
 325 0144 1F91      		pop r17
 326 0146 0F91      		pop r16
 327 0148 0895      		ret
 329               	.Lscope2:
 330               		.section	.rodata.str1.1
 331               	.LC3:
 332 0022 436F 6E6E 		.string	"Connecting..."
 332      6563 7469 
 332      6E67 2E2E 
 332      2E00 
 333               	.LC4:
 334 0030 506C 6561 		.string	"Please wait"
 334      7365 2077 
 334      6169 7400 
 335               	.LC5:
 336 003c 5769 6669 		.string	"Wifi Error"
 336      2045 7272 
 336      6F72 00
 337               	.LC6:
 338 0047 5379 7374 		.string	"System Init"
 338      656D 2049 
 338      6E69 7400 
 339               	.LC7:
 340 0053 5375 6363 		.string	"Succesful"
 340      6573 6675 
 340      6C00 
 341               		.text
 343               	.global	system_init
 345               	system_init:
  43:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c **** 
  44:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c **** void system_init() {
 347               	.LM17:
 348               	.LFBB3:
 349               	/* prologue: function */
 350               	/* frame size = 0 */
 351               	/* stack size = 0 */
 352               	.L__stack_usage = 0
  45:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     
  46:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     lcd_init(LCD_DISP_ON);
 354               	.LM18:
 355 014a 8CE0      		ldi r24,lo8(12)
 356 014c 0E94 0000 		call lcd_init
  47:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     lcd_clrscr();
 358               	.LM19:
 359 0150 0E94 0000 		call lcd_clrscr
  48:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     
  49:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     lcd_gotoxy(0, 0);
 361               	.LM20:
 362 0154 60E0      		ldi r22,0
 363 0156 80E0      		ldi r24,0
 364 0158 0E94 0000 		call lcd_gotoxy
  50:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     lcd_puts("Connecting...");
 366               	.LM21:
 367 015c 80E0      		ldi r24,lo8(.LC3)
 368 015e 90E0      		ldi r25,hi8(.LC3)
 369 0160 0E94 0000 		call lcd_puts
  51:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     
  52:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     lcd_gotoxy(0, 1);
 371               	.LM22:
 372 0164 61E0      		ldi r22,lo8(1)
 373 0166 80E0      		ldi r24,0
 374 0168 0E94 0000 		call lcd_gotoxy
  53:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     lcd_puts("Please wait");
 376               	.LM23:
 377 016c 80E0      		ldi r24,lo8(.LC4)
 378 016e 90E0      		ldi r25,hi8(.LC4)
 379 0170 0E94 0000 		call lcd_puts
  54:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     
  55:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     if (!init_wifi_module()) {
 381               	.LM24:
 382 0174 0E94 0000 		call init_wifi_module
 383 0178 892B      		or r24,r25
 384 017a 01F4      		brne .L4
  56:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****         lcd_clrscr();
 386               	.LM25:
 387 017c 0E94 0000 		call lcd_clrscr
  57:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****         lcd_gotoxy(0, 0);
 389               	.LM26:
 390 0180 60E0      		ldi r22,0
 391 0182 80E0      		ldi r24,0
 392 0184 0E94 0000 		call lcd_gotoxy
  58:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****         lcd_puts("Wifi Error");
 394               	.LM27:
 395 0188 80E0      		ldi r24,lo8(.LC5)
 396 018a 90E0      		ldi r25,hi8(.LC5)
 397 018c 0E94 0000 		call lcd_puts
 398               	.L4:
  59:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     }
  60:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     
  61:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     init_sensor(bmp180_mode_0);
 400               	.LM28:
 401 0190 80E0      		ldi r24,0
 402 0192 90E0      		ldi r25,0
 403 0194 0E94 0000 		call init_sensor
  62:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     init_timer();
 405               	.LM29:
 406 0198 0E94 0000 		call init_timer
  63:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     
  64:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     sei();
 408               	.LM30:
 409               	/* #APP */
 410               	 ;  64 "/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c" 1
 411 019c 7894      		sei
 412               	 ;  0 "" 2
  65:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     
  66:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     lcd_clrscr();
 414               	.LM31:
 415               	/* #NOAPP */
 416 019e 0E94 0000 		call lcd_clrscr
  67:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     lcd_gotoxy(0, 0);
 418               	.LM32:
 419 01a2 60E0      		ldi r22,0
 420 01a4 80E0      		ldi r24,0
 421 01a6 0E94 0000 		call lcd_gotoxy
  68:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     lcd_puts("System Init");
 423               	.LM33:
 424 01aa 80E0      		ldi r24,lo8(.LC6)
 425 01ac 90E0      		ldi r25,hi8(.LC6)
 426 01ae 0E94 0000 		call lcd_puts
  69:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     lcd_gotoxy(0, 1);
 428               	.LM34:
 429 01b2 61E0      		ldi r22,lo8(1)
 430 01b4 80E0      		ldi r24,0
 431 01b6 0E94 0000 		call lcd_gotoxy
  70:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     lcd_puts("Succesful");
 433               	.LM35:
 434 01ba 80E0      		ldi r24,lo8(.LC7)
 435 01bc 90E0      		ldi r25,hi8(.LC7)
 436 01be 0E94 0000 		call lcd_puts
 437               	.LBB8:
 438               	.LBB9:
 440               	.Ltext3:
 442               	.LM36:
 443 01c2 2FEF      		ldi r18,lo8(159999)
 444 01c4 80E7      		ldi r24,hi8(159999)
 445 01c6 92E0      		ldi r25,hlo8(159999)
 446 01c8 2150      		1: subi r18,1
 447 01ca 8040      		sbci r24,0
 448 01cc 9040      		sbci r25,0
 449 01ce 01F4      		brne 1b
 450 01d0 00C0      		rjmp .
 451 01d2 0000      		nop
 452               	.LBE9:
 453               	.LBE8:
 455               	.Ltext4:
  71:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     
  72:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     _delay_ms(100);
  73:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     lcd_clrscr();
 457               	.LM37:
 458 01d4 0C94 0000 		jmp lcd_clrscr
 460               	.Lscope3:
 461               		.section	.text.startup,"ax",@progbits
 463               	.global	main
 465               	main:
  74:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     
  75:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c **** }
  76:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c **** 
  77:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c **** 
  78:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c **** 
  79:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c **** int main(void) {
 467               	.LM38:
 468               	.LFBB4:
 469               	/* prologue: function */
 470               	/* frame size = 0 */
 471               	/* stack size = 0 */
 472               	.L__stack_usage = 0
  80:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     
  81:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     stdout = &uart_output;
 474               	.LM39:
 475 0000 80E0      		ldi r24,lo8(uart_output)
 476 0002 90E0      		ldi r25,hi8(uart_output)
 477 0004 9093 0000 		sts __iob+2+1,r25
 478 0008 8093 0000 		sts __iob+2,r24
  82:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     
  83:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     lcd_buffer = malloc(sizeof(char *) * 20);
 480               	.LM40:
 481 000c 88E2      		ldi r24,lo8(40)
 482 000e 90E0      		ldi r25,0
 483 0010 0E94 0000 		call malloc
 484 0014 9093 0000 		sts lcd_buffer+1,r25
 485 0018 8093 0000 		sts lcd_buffer,r24
  84:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     
  85:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     system_init();
 487               	.LM41:
 488 001c 0E94 0000 		call system_init
 489               	.L7:
  86:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     
  87:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     while (1) {
  88:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****         update_display();
 491               	.LM42:
 492 0020 0E94 0000 		call update_display
 493 0024 00C0      		rjmp .L7
 495               	.Lscope4:
 496               		.comm	lcd_buffer,2,1
 497               	.global	uart_output
 498               		.data
 501               	uart_output:
 502 0000 0000 00   		.zero	3
 503 0003 02        		.byte	2
 504 0004 0000 0000 		.zero	4
 505 0008 0000      		.word	gs(send_uart_char)
 506 000a 0000      		.word	0
 507 000c 0000      		.word	0
 510               		.text
 512               	.Letext0:
 513               		.ident	"GCC: (GNU) 4.8.1"
 514               	.global __do_copy_data
 515               	.global __do_clear_bss
DEFINED SYMBOLS
                            *ABS*:00000000 main.c
/var/folders/2t/x0mw6nss4_z3npyvmny7gnnm0000gn/T//ccmV3DK4.s:2      *ABS*:0000003e __SP_H__
/var/folders/2t/x0mw6nss4_z3npyvmny7gnnm0000gn/T//ccmV3DK4.s:3      *ABS*:0000003d __SP_L__
/var/folders/2t/x0mw6nss4_z3npyvmny7gnnm0000gn/T//ccmV3DK4.s:4      *ABS*:0000003f __SREG__
/var/folders/2t/x0mw6nss4_z3npyvmny7gnnm0000gn/T//ccmV3DK4.s:5      *ABS*:00000000 __tmp_reg__
/var/folders/2t/x0mw6nss4_z3npyvmny7gnnm0000gn/T//ccmV3DK4.s:6      *ABS*:00000001 __zero_reg__
/var/folders/2t/x0mw6nss4_z3npyvmny7gnnm0000gn/T//ccmV3DK4.s:124    .text:00000000 __vector_9
/var/folders/2t/x0mw6nss4_z3npyvmny7gnnm0000gn/T//ccmV3DK4.s:188    .text:0000004c update_display
                            *COM*:00000002 lcd_buffer
/var/folders/2t/x0mw6nss4_z3npyvmny7gnnm0000gn/T//ccmV3DK4.s:345    .text:0000014a system_init
/var/folders/2t/x0mw6nss4_z3npyvmny7gnnm0000gn/T//ccmV3DK4.s:465    .text.startup:00000000 main
/var/folders/2t/x0mw6nss4_z3npyvmny7gnnm0000gn/T//ccmV3DK4.s:501    .data:00000000 uart_output

UNDEFINED SYMBOLS
update_rtc
calculate
lcd_gotoxy
get_temperature
sprintf
lcd_puts
get_minute
get_hour
get_year
get_month
get_day
lcd_init
lcd_clrscr
init_wifi_module
init_sensor
init_timer
__iob
malloc
send_uart_char
__do_copy_data
__do_clear_bss
