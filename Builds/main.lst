   1               		.file	"main.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
 122               	.global	__vector_9
 124               	__vector_9:
   1:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c **** #include <stdio.h>
   2:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c **** #include <avr/io.h>
   3:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c **** #include <avr/interrupt.h>
   4:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c **** #include <util/delay.h>
   5:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c **** #include <stdlib.h>
   6:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c **** 
   7:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c **** #include "uart.h"
   8:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c **** #include "lcd.h"
   9:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c **** #include "bmp180.h"
  10:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c **** #include "rtc.h"
  11:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c **** #include "espwifi.h"
  12:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c **** 
  13:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c **** 
  14:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c **** FILE uart_output = FDEV_SETUP_STREAM(send_uart_char, NULL, _FDEV_SETUP_WRITE);
  15:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c **** 
  16:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c **** volatile second_ticks = 0;
  17:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c **** 
  18:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c **** ISR(TIMER2_OVF_vect) {
 126               	.LM0:
 127               	.LFBB1:
 128 0000 1F92      		push r1
 129 0002 0F92      		push r0
 130 0004 0FB6      		in r0,__SREG__
 131 0006 0F92      		push r0
 132 0008 1124      		clr __zero_reg__
 133 000a 2F93      		push r18
 134 000c 3F93      		push r19
 135 000e 4F93      		push r20
 136 0010 5F93      		push r21
 137 0012 6F93      		push r22
 138 0014 7F93      		push r23
 139 0016 8F93      		push r24
 140 0018 9F93      		push r25
 141 001a AF93      		push r26
 142 001c BF93      		push r27
 143 001e EF93      		push r30
 144 0020 FF93      		push r31
 145               	/* prologue: Signal */
 146               	/* frame size = 0 */
 147               	/* stack size = 15 */
 148               	.L__stack_usage = 15
  19:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     update_rtc();
 150               	.LM1:
 151 0022 0E94 0000 		call update_rtc
  20:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     TCNT2 = 0x00;
 153               	.LM2:
 154 0026 1092 B200 		sts 178,__zero_reg__
 155               	/* epilogue start */
  21:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c **** }
 157               	.LM3:
 158 002a FF91      		pop r31
 159 002c EF91      		pop r30
 160 002e BF91      		pop r27
 161 0030 AF91      		pop r26
 162 0032 9F91      		pop r25
 163 0034 8F91      		pop r24
 164 0036 7F91      		pop r23
 165 0038 6F91      		pop r22
 166 003a 5F91      		pop r21
 167 003c 4F91      		pop r20
 168 003e 3F91      		pop r19
 169 0040 2F91      		pop r18
 170 0042 0F90      		pop r0
 171 0044 0FBE      		out __SREG__,r0
 172 0046 0F90      		pop r0
 173 0048 1F90      		pop r1
 174 004a 1895      		reti
 176               	.Lscope1:
 177               		.section	.rodata
 178               	.LC0:
 179 0000 20        		.byte	32
 180 0001 20        		.byte	32
 181 0002 20        		.byte	32
 182 0003 20        		.byte	32
 183 0004 20        		.byte	32
 184 0005 20        		.byte	32
 185 0006 20        		.byte	32
 186 0007 20        		.byte	32
 187 0008 20        		.byte	32
 188 0009 20        		.byte	32
 189 000a 20        		.byte	32
 190 000b 20        		.byte	32
 191 000c 20        		.byte	32
 192 000d 20        		.byte	32
 193 000e 00        		.byte	0
 194               		.text
 198               	.global	lcd_msg
 200               	lcd_msg:
  22:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c **** 
  23:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c **** 
  24:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c **** void lcd_msg(unsigned char *fmt, uint8_t line, ...) {
 202               	.LM4:
 203               	.LFBB2:
 204 004c FF92      		push r15
 205 004e 0F93      		push r16
 206 0050 1F93      		push r17
 207 0052 CF93      		push r28
 208 0054 DF93      		push r29
 209 0056 CDB7      		in r28,__SP_L__
 210 0058 DEB7      		in r29,__SP_H__
 211 005a 2F97      		sbiw r28,15
 212 005c 0FB6      		in __tmp_reg__,__SREG__
 213 005e F894      		cli
 214 0060 DEBF      		out __SP_H__,r29
 215 0062 0FBE      		out __SREG__,__tmp_reg__
 216 0064 CDBF      		out __SP_L__,r28
 217               	/* prologue: function */
 218               	/* frame size = 15 */
 219               	/* stack size = 20 */
 220               	.L__stack_usage = 20
 221 0066 F98C      		ldd r15,Y+25
  25:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     va_list aptr;
  26:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     unsigned char *lcd_buffer = malloc(sizeof(unsigned char *) * 20);
 223               	.LM5:
 224 0068 88E2      		ldi r24,lo8(40)
 225 006a 90E0      		ldi r25,0
 226 006c 0E94 0000 		call malloc
 227 0070 8C01      		movw r16,r24
  27:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     
  28:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     unsigned char padding[15] = {0x20, 0x20, 0x20, 0x20, 0x20,
 229               	.LM6:
 230 0072 8FE0      		ldi r24,lo8(15)
 231 0074 E0E0      		ldi r30,lo8(.LC0)
 232 0076 F0E0      		ldi r31,hi8(.LC0)
 233 0078 DE01      		movw r26,r28
 234 007a 1196      		adiw r26,1
 235               		0:
 236 007c 0190      		ld r0,Z+
 237 007e 0D92      		st X+,r0
 238 0080 8A95      		dec r24
 239 0082 01F4      		brne 0b
  29:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****                                 0x20, 0x20, 0x20, 0x20, 0x20,
  30:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****                                 0x20, 0x20, 0x20, 0x20, '\0'};
  31:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     
  32:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     if (line < 1) line = 1;
 241               	.LM7:
 242 0084 F110      		cpse r15,__zero_reg__
 243 0086 00C0      		rjmp .L3
 244 0088 FF24      		clr r15
 245 008a F394      		inc r15
 246               	.L3:
  33:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     
  34:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     va_start(aptr, fmt);
  35:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     vsprintf(lcd_buffer, fmt, aptr);
 248               	.LM8:
 249 008c AE01      		movw r20,r28
 250 008e 465E      		subi r20,-26
 251 0090 5F4F      		sbci r21,-1
 252 0092 6F89      		ldd r22,Y+23
 253 0094 788D      		ldd r23,Y+24
 254 0096 C801      		movw r24,r16
 255 0098 0E94 0000 		call vsprintf
  36:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     lcd_gotoxy(0, line - 1);
 257               	.LM9:
 258 009c FA94      		dec r15
 259 009e 6F2D      		mov r22,r15
 260 00a0 80E0      		ldi r24,0
 261 00a2 0E94 0000 		call lcd_gotoxy
  37:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     lcd_puts((unsigned char *) padding);
 263               	.LM10:
 264 00a6 CE01      		movw r24,r28
 265 00a8 0196      		adiw r24,1
 266 00aa 0E94 0000 		call lcd_puts
  38:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     lcd_gotoxy(0, line - 1);
 268               	.LM11:
 269 00ae 6F2D      		mov r22,r15
 270 00b0 80E0      		ldi r24,0
 271 00b2 0E94 0000 		call lcd_gotoxy
  39:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     lcd_puts(lcd_buffer);
 273               	.LM12:
 274 00b6 C801      		movw r24,r16
 275 00b8 0E94 0000 		call lcd_puts
  40:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     free(lcd_buffer);
 277               	.LM13:
 278 00bc C801      		movw r24,r16
 279 00be 0E94 0000 		call free
 280               	/* epilogue start */
  41:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c **** }
 282               	.LM14:
 283 00c2 2F96      		adiw r28,15
 284 00c4 0FB6      		in __tmp_reg__,__SREG__
 285 00c6 F894      		cli
 286 00c8 DEBF      		out __SP_H__,r29
 287 00ca 0FBE      		out __SREG__,__tmp_reg__
 288 00cc CDBF      		out __SP_L__,r28
 289 00ce DF91      		pop r29
 290 00d0 CF91      		pop r28
 291 00d2 1F91      		pop r17
 292 00d4 0F91      		pop r16
 293 00d6 FF90      		pop r15
 294 00d8 0895      		ret
 301               	.Lscope2:
 302               		.section	.rodata.str1.1,"aMS",@progbits,1
 303               	.LC1:
 304 0000 252E 3266 		.string	"%.2f %cC %02d:%02d"
 304      2025 6343 
 304      2025 3032 
 304      643A 2530 
 304      3264 00
 305               	.LC2:
 306 0013 2530 3264 		.string	"%02d/%02d/%02d"
 306      2F25 3032 
 306      642F 2530 
 306      3264 00
 307               		.text
 309               	.global	update_display
 311               	update_display:
  42:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c **** 
  43:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c **** void update_display() {
 313               	.LM15:
 314               	.LFBB3:
 315 00da 0F93      		push r16
 316 00dc 1F93      		push r17
 317 00de CF93      		push r28
 318 00e0 DF93      		push r29
 319               	/* prologue: function */
 320               	/* frame size = 0 */
 321               	/* stack size = 4 */
 322               	.L__stack_usage = 4
  44:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     calculate();
 324               	.LM16:
 325 00e2 0E94 0000 		call calculate
  45:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     lcd_clrscr();
 327               	.LM17:
 328 00e6 0E94 0000 		call lcd_clrscr
  46:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     lcd_msg("%.2f %cC %02d:%02d", 1, (float) get_temperature(), (char) 223, get_hour(), get_minute(
 330               	.LM18:
 331 00ea 0E94 0000 		call get_minute
 332 00ee 182F      		mov r17,r24
 333 00f0 092F      		mov r16,r25
 334 00f2 0E94 0000 		call get_hour
 335 00f6 EC01      		movw r28,r24
 336 00f8 0E94 0000 		call get_temperature
 337 00fc 0F93      		push r16
 338 00fe 1F93      		push r17
 339 0100 DF93      		push r29
 340 0102 CF93      		push r28
 341 0104 1F92      		push __zero_reg__
 342 0106 2FED      		ldi r18,lo8(-33)
 343 0108 2F93      		push r18
 344 010a 9F93      		push r25
 345 010c 8F93      		push r24
 346 010e 7F93      		push r23
 347 0110 6F93      		push r22
 348 0112 81E0      		ldi r24,lo8(1)
 349 0114 8F93      		push r24
 350 0116 80E0      		ldi r24,lo8(.LC1)
 351 0118 90E0      		ldi r25,hi8(.LC1)
 352 011a 9F93      		push r25
 353 011c 8F93      		push r24
 354 011e 0E94 0000 		call lcd_msg
  47:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     lcd_msg("%02d/%02d/%02d", 2, get_day(), get_month(), get_year());
 356               	.LM19:
 357 0122 0E94 0000 		call get_year
 358 0126 182F      		mov r17,r24
 359 0128 092F      		mov r16,r25
 360 012a 0E94 0000 		call get_month
 361 012e EC01      		movw r28,r24
 362 0130 0E94 0000 		call get_day
 363 0134 0F93      		push r16
 364 0136 1F93      		push r17
 365 0138 DF93      		push r29
 366 013a CF93      		push r28
 367 013c 9F93      		push r25
 368 013e 8F93      		push r24
 369 0140 82E0      		ldi r24,lo8(2)
 370 0142 8F93      		push r24
 371 0144 80E0      		ldi r24,lo8(.LC2)
 372 0146 90E0      		ldi r25,hi8(.LC2)
 373 0148 9F93      		push r25
 374 014a 8F93      		push r24
 375 014c 0E94 0000 		call lcd_msg
 376               	.LBB6:
 377               	.LBB7:
 379               	.Ltext1:
   1:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    All rights reserved.
   5:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
   6:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Redistribution and use in source and binary forms, with or without
   7:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    modification, are permitted provided that the following conditions are met:
   8:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
   9:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    * Redistributions of source code must retain the above copyright
  10:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer.
  11:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  12:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer in
  14:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****      the documentation and/or other materials provided with the
  15:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****      distribution.
  16:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  17:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    * Neither the name of the copyright holders nor the names of
  18:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****      contributors may be used to endorse or promote products derived
  19:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****      from this software without specific prior written permission.
  20:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  21:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  33:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** /* $Id$ */
  34:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  35:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #ifndef _UTIL_DELAY_H_
  36:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #define _UTIL_DELAY_H_ 1
  37:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  38:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #ifndef __HAS_DELAY_CYCLES
  39:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #define __HAS_DELAY_CYCLES 1
  40:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #endif
  41:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  42:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #include <inttypes.h>
  43:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #include <util/delay_basic.h>
  44:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #include <math.h>
  45:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  46:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** /** \file */
  47:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  48:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     \code
  49:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  50:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     //#define F_CPU 14.7456E6
  51:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     #include <util/delay.h>
  52:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     \endcode
  53:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  54:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     \note As an alternative method, it is possible to pass the
  55:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     F_CPU macro down to the compiler from the Makefile.
  56:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     Obviously, in that case, no \c \#define statement should be
  57:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     used.
  58:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  59:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     The functions in this header file are wrappers around the basic
  60:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  61:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     convenience functions where actual time values can be specified
  62:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  63:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     that compile-time constant expressions will be eliminated by
  64:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     compiler optimization so floating-point expressions can be used
  65:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     to calculate the number of delay cycles needed based on the CPU
  66:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     frequency passed by the macro F_CPU.
  67:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  68:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     \note In order for these functions to work as intended, compiler
  69:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  70:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     <em>must</em> be an expression that is a known constant at
  71:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     compile-time.  If these requirements are not met, the resulting
  72:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     delay will be much longer (and basically unpredictable), and
  73:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     applications that otherwise do not use floating-point calculations
  74:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     will experience severe code bloat by the floating-point library
  75:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     routines linked into the application.
  76:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  77:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     The functions available allow the specification of microsecond, and
  78:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     millisecond delays directly, using the application-supplied macro
  79:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  80:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  81:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** */
  82:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  83:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #if !defined(__DOXYGEN__)
  84:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** static inline void _delay_us(double __us) __attribute__((always_inline));
  85:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** static inline void _delay_ms(double __ms) __attribute__((always_inline));
  86:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #endif
  87:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  88:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #ifndef F_CPU
  89:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** /* prevent compiler error by supplying a default */
  90:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  91:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** # define F_CPU 1000000UL
  92:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #endif
  93:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  94:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #ifndef __OPTIMIZE__
  95:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
  96:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #endif
  97:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  98:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
  99:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 100:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   __STDC_HOSTED__
 101:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #  include <math.h>
 102:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #endif
 103:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 104:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** /**
 105:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    \ingroup util_delay
 106:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 107:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 108:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 109:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 110:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 111:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 112:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 113:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 114:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    When the user request delay which exceed the maximum possible one,
 115:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 116:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 117:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 118:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    user will not be informed about decreased resolution.
 119:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 120:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles(unsigned long)
 121:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For
 122:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    values greater than the maximal possible delay, overflows results in
 123:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    no delay i.e., 0ms.
 124:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 125:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Conversion of __us into clock cycles may not always result in integer.
 126:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    By default, the clock cycles rounded up to next integer. This ensures that
 127:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    the user gets atleast __us microseconds of delay.
 128:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 129:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Alternatively, user can define __DELAY_ROUND_DOWN__ and __DELAY_ROUND_CLOSEST__
 130:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    to round down and round to closest integer.
 131:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 132:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Note: The new implementation of _delay_ms(double __ms) with 
 133:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     __builtin_avr_delay_cycles(unsigned long) support is not backward compatible. 
 134:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    User can define __DELAY_BACKWARD_COMPATIBLE__ to get a backward compatible delay.
 135:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Also, the backward compatible
 136:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    algorithm will be chosen if the code is compiled in a <em>freestanding
 137:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    environment</em> (GCC option \c -ffreestanding), as the math functions
 138:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    required for rounding are not available to the compiler then.
 139:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 140:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****  */
 141:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** void
 142:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** _delay_ms(double __ms)
 143:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** {
 144:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	double __tmp ; 
 145:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 146:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 147:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   __STDC_HOSTED__
 148:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	uint32_t __ticks_dc;
 149:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 150:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 151:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 152:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 153:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 154:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 155:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 156:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 157:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 158:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	#else
 159:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 		//round up by default
 160:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 161:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	#endif
 162:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 163:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 381               	.LM20:
 382 0150 2FEF      		ldi r18,lo8(1599999)
 383 0152 89E6      		ldi r24,hi8(1599999)
 384 0154 98E1      		ldi r25,hlo8(1599999)
 385 0156 2150      		1: subi r18,1
 386 0158 8040      		sbci r24,0
 387 015a 9040      		sbci r25,0
 388 015c 01F4      		brne 1b
 389 015e 00C0      		rjmp .
 390 0160 0000      		nop
 391 0162 8DB7      		in r24,__SP_L__
 392 0164 9EB7      		in r25,__SP_H__
 393 0166 4696      		adiw r24,22
 394 0168 0FB6      		in __tmp_reg__,__SREG__
 395 016a F894      		cli
 396 016c 9EBF      		out __SP_H__,r25
 397 016e 0FBE      		out __SREG__,__tmp_reg__
 398 0170 8DBF      		out __SP_L__,r24
 399               	/* epilogue start */
 400               	.LBE7:
 401               	.LBE6:
 403               	.Ltext2:
  48:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     _delay_ms(1000);
  49:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c **** }
 405               	.LM21:
 406 0172 DF91      		pop r29
 407 0174 CF91      		pop r28
 408 0176 1F91      		pop r17
 409 0178 0F91      		pop r16
 410 017a 0895      		ret
 412               	.Lscope3:
 413               		.section	.rodata.str1.1
 414               	.LC3:
 415 0022 496E 6974 		.string	"Init System!\n"
 415      2053 7973 
 415      7465 6D21 
 415      0A00 
 416               	.LC4:
 417 0030 5B49 6E69 		.string	"[Init]"
 417      745D 00
 418               	.LC5:
 419 0037 5769 6669 		.string	"Wifi: %s\n"
 419      3A20 2573 
 419      0A00 
 420               	.LC6:
 421 0041 5B4F 6B5D 		.string	"[Ok]"
 421      00
 422               	.LC7:
 423 0046 5769 6669 		.string	"Wifi: %s"
 423      3A20 2573 
 423      00
 424               	.LC8:
 425 004f 5B46 6169 		.string	"[Fail]"
 425      6C5D 00
 426               	.LC9:
 427 0056 5B42 7573 		.string	"[Busy]"
 427      795D 00
 428               	.LC10:
 429 005d 5365 6E73 		.string	"Sensor: %s"
 429      6F72 3A20 
 429      2573 00
 430               	.LC11:
 431 0068 5469 6D65 		.string	"Timer: %s"
 431      723A 2025 
 431      7300 
 432               	.LC12:
 433 0072 5379 7374 		.string	"System started!"
 433      656D 2073 
 433      7461 7274 
 433      6564 2100 
 434               		.text
 436               	.global	system_init
 438               	system_init:
  50:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c **** 
  51:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c **** void system_init() {
 440               	.LM22:
 441               	.LFBB4:
 442 017c FF92      		push r15
 443 017e 0F93      		push r16
 444 0180 1F93      		push r17
 445 0182 CF93      		push r28
 446 0184 DF93      		push r29
 447               	/* prologue: function */
 448               	/* frame size = 0 */
 449               	/* stack size = 5 */
 450               	.L__stack_usage = 5
  52:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     
  53:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     lcd_init(LCD_DISP_ON);
 452               	.LM23:
 453 0186 8CE0      		ldi r24,lo8(12)
 454 0188 0E94 0000 		call lcd_init
  54:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     lcd_clrscr();
 456               	.LM24:
 457 018c 0E94 0000 		call lcd_clrscr
  55:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     lcd_puts("Init System!\n");
 459               	.LM25:
 460 0190 80E0      		ldi r24,lo8(.LC3)
 461 0192 90E0      		ldi r25,hi8(.LC3)
 462 0194 0E94 0000 		call lcd_puts
  56:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     lcd_msg("Wifi: %s\n", 2, "[Init]");
 464               	.LM26:
 465 0198 80E0      		ldi r24,lo8(.LC4)
 466 019a 90E0      		ldi r25,hi8(.LC4)
 467 019c 9F93      		push r25
 468 019e 8F93      		push r24
 469 01a0 C2E0      		ldi r28,lo8(2)
 470 01a2 CF93      		push r28
 471 01a4 80E0      		ldi r24,lo8(.LC5)
 472 01a6 90E0      		ldi r25,hi8(.LC5)
 473 01a8 9F93      		push r25
 474 01aa 8F93      		push r24
 475 01ac 0E94 0000 		call lcd_msg
  57:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     if (init_wifi_module())
 477               	.LM27:
 478 01b0 0E94 0000 		call init_wifi_module
 479 01b4 0F90      		pop __tmp_reg__
 480 01b6 0F90      		pop __tmp_reg__
 481 01b8 0F90      		pop __tmp_reg__
 482 01ba 0F90      		pop __tmp_reg__
 483 01bc 0F90      		pop __tmp_reg__
 484 01be 892B      		or r24,r25
 485 01c0 01F0      		breq .L8
  58:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     lcd_msg("Wifi: %s", 2, "[Ok]");
 487               	.LM28:
 488 01c2 80E0      		ldi r24,lo8(.LC6)
 489 01c4 90E0      		ldi r25,hi8(.LC6)
 490 01c6 00C0      		rjmp .L10
 491               	.L8:
  59:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     else
  60:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     lcd_msg("Wifi: %s", 2, "[Fail]");
 493               	.LM29:
 494 01c8 80E0      		ldi r24,lo8(.LC8)
 495 01ca 90E0      		ldi r25,hi8(.LC8)
 496               	.L10:
 497 01cc 9F93      		push r25
 498 01ce 8F93      		push r24
 499 01d0 CF93      		push r28
 500 01d2 80E0      		ldi r24,lo8(.LC7)
 501 01d4 90E0      		ldi r25,hi8(.LC7)
 502 01d6 9F93      		push r25
 503 01d8 8F93      		push r24
 504 01da 0E94 0000 		call lcd_msg
 505 01de 0F90      		pop __tmp_reg__
 506 01e0 0F90      		pop __tmp_reg__
 507 01e2 0F90      		pop __tmp_reg__
 508 01e4 0F90      		pop __tmp_reg__
 509 01e6 0F90      		pop __tmp_reg__
  61:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     lcd_msg("Sensor: %s", 2, "[Busy]");
 511               	.LM30:
 512 01e8 C0E0      		ldi r28,lo8(.LC9)
 513 01ea D0E0      		ldi r29,hi8(.LC9)
 514 01ec DF93      		push r29
 515 01ee CF93      		push r28
 516 01f0 82E0      		ldi r24,lo8(2)
 517 01f2 F82E      		mov r15,r24
 518 01f4 FF92      		push r15
 519 01f6 00E0      		ldi r16,lo8(.LC10)
 520 01f8 10E0      		ldi r17,hi8(.LC10)
 521 01fa 1F93      		push r17
 522 01fc 0F93      		push r16
 523 01fe 0E94 0000 		call lcd_msg
  62:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     init_sensor(bmp180_mode_0);
 525               	.LM31:
 526 0202 80E0      		ldi r24,0
 527 0204 90E0      		ldi r25,0
 528 0206 0E94 0000 		call init_sensor
  63:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     lcd_msg("Sensor: %s", 2, "[Ok]");
 530               	.LM32:
 531 020a 80E0      		ldi r24,lo8(.LC6)
 532 020c 90E0      		ldi r25,hi8(.LC6)
 533 020e 9F93      		push r25
 534 0210 8F93      		push r24
 535 0212 FF92      		push r15
 536 0214 1F93      		push r17
 537 0216 0F93      		push r16
 538 0218 0E94 0000 		call lcd_msg
  64:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     lcd_msg("Timer: %s", 2, "[Busy]");
 540               	.LM33:
 541 021c DF93      		push r29
 542 021e CF93      		push r28
 543 0220 FF92      		push r15
 544 0222 80E0      		ldi r24,lo8(.LC11)
 545 0224 90E0      		ldi r25,hi8(.LC11)
 546 0226 9F93      		push r25
 547 0228 8F93      		push r24
 548 022a 0E94 0000 		call lcd_msg
  65:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     init_timer();
 550               	.LM34:
 551 022e 0E94 0000 		call init_timer
  66:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     sei();
 553               	.LM35:
 554               	/* #APP */
 555               	 ;  66 "/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c" 1
 556 0232 7894      		sei
 557               	 ;  0 "" 2
  67:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     lcd_msg("Timer: %s", 2, "[Ok]");
 559               	.LM36:
 560               	/* #NOAPP */
 561 0234 80E0      		ldi r24,lo8(.LC6)
 562 0236 90E0      		ldi r25,hi8(.LC6)
 563 0238 9F93      		push r25
 564 023a 8F93      		push r24
 565 023c 82E0      		ldi r24,lo8(2)
 566 023e 8F93      		push r24
 567 0240 80E0      		ldi r24,lo8(.LC11)
 568 0242 90E0      		ldi r25,hi8(.LC11)
 569 0244 9F93      		push r25
 570 0246 8F93      		push r24
 571 0248 0E94 0000 		call lcd_msg
  68:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     lcd_clrscr();
 573               	.LM37:
 574 024c 0E94 0000 		call lcd_clrscr
  69:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     lcd_msg("System started!", 1);
 576               	.LM38:
 577 0250 81E0      		ldi r24,lo8(1)
 578 0252 8F93      		push r24
 579 0254 80E0      		ldi r24,lo8(.LC12)
 580 0256 90E0      		ldi r25,hi8(.LC12)
 581 0258 9F93      		push r25
 582 025a 8F93      		push r24
 583 025c 0E94 0000 		call lcd_msg
 584 0260 8DB7      		in r24,__SP_L__
 585 0262 9EB7      		in r25,__SP_H__
 586 0264 4796      		adiw r24,23
 587 0266 0FB6      		in __tmp_reg__,__SREG__
 588 0268 F894      		cli
 589 026a 9EBF      		out __SP_H__,r25
 590 026c 0FBE      		out __SREG__,__tmp_reg__
 591 026e 8DBF      		out __SP_L__,r24
 592               	/* epilogue start */
  70:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c **** }
 594               	.LM39:
 595 0270 DF91      		pop r29
 596 0272 CF91      		pop r28
 597 0274 1F91      		pop r17
 598 0276 0F91      		pop r16
 599 0278 FF90      		pop r15
 600 027a 0895      		ret
 602               	.Lscope4:
 603               		.section	.text.startup,"ax",@progbits
 605               	.global	main
 607               	main:
  71:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c **** 
  72:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c **** 
  73:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c **** 
  74:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c **** int main(void) {
 609               	.LM40:
 610               	.LFBB5:
 611               	/* prologue: function */
 612               	/* frame size = 0 */
 613               	/* stack size = 0 */
 614               	.L__stack_usage = 0
  75:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     
  76:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     stdout = &uart_output;
 616               	.LM41:
 617 0000 80E0      		ldi r24,lo8(uart_output)
 618 0002 90E0      		ldi r25,hi8(uart_output)
 619 0004 9093 0000 		sts __iob+2+1,r25
 620 0008 8093 0000 		sts __iob+2,r24
  77:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     
  78:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     system_init();
 622               	.LM42:
 623 000c 0E94 0000 		call system_init
 624               	.L12:
  79:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     
  80:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****     while (1) {
  81:/Users/atakane/Documents/Electronics/IoClock/IoClock/main.c ****         update_display();
 626               	.LM43:
 627 0010 0E94 0000 		call update_display
 628               	.LBB8:
 629               	.LBB9:
 631               	.Ltext3:
 633               	.LM44:
 634 0014 2FEF      		ldi r18,lo8(799999)
 635 0016 84E3      		ldi r24,hi8(799999)
 636 0018 9CE0      		ldi r25,hlo8(799999)
 637 001a 2150      		1: subi r18,1
 638 001c 8040      		sbci r24,0
 639 001e 9040      		sbci r25,0
 640 0020 01F4      		brne 1b
 641 0022 00C0      		rjmp .
 642 0024 0000      		nop
 643 0026 00C0      		rjmp .L12
 644               	.LBE9:
 645               	.LBE8:
 647               	.Lscope5:
 648               	.global	second_ticks
 649               		.section .bss
 652               	second_ticks:
 653 0000 0000      		.zero	2
 654               	.global	uart_output
 655               		.data
 658               	uart_output:
 659 0000 0000 00   		.zero	3
 660 0003 02        		.byte	2
 661 0004 0000 0000 		.zero	4
 662 0008 0000      		.word	gs(send_uart_char)
 663 000a 0000      		.word	0
 664 000c 0000      		.word	0
 667               		.text
 669               	.Letext0:
 670               		.ident	"GCC: (GNU) 4.8.1"
 671               	.global __do_copy_data
 672               	.global __do_clear_bss
DEFINED SYMBOLS
                            *ABS*:00000000 main.c
/var/folders/2t/x0mw6nss4_z3npyvmny7gnnm0000gn/T//ccPiwRZU.s:2      *ABS*:0000003e __SP_H__
/var/folders/2t/x0mw6nss4_z3npyvmny7gnnm0000gn/T//ccPiwRZU.s:3      *ABS*:0000003d __SP_L__
/var/folders/2t/x0mw6nss4_z3npyvmny7gnnm0000gn/T//ccPiwRZU.s:4      *ABS*:0000003f __SREG__
/var/folders/2t/x0mw6nss4_z3npyvmny7gnnm0000gn/T//ccPiwRZU.s:5      *ABS*:00000000 __tmp_reg__
/var/folders/2t/x0mw6nss4_z3npyvmny7gnnm0000gn/T//ccPiwRZU.s:6      *ABS*:00000001 __zero_reg__
/var/folders/2t/x0mw6nss4_z3npyvmny7gnnm0000gn/T//ccPiwRZU.s:124    .text:00000000 __vector_9
/var/folders/2t/x0mw6nss4_z3npyvmny7gnnm0000gn/T//ccPiwRZU.s:200    .text:0000004c lcd_msg
/var/folders/2t/x0mw6nss4_z3npyvmny7gnnm0000gn/T//ccPiwRZU.s:311    .text:000000da update_display
/var/folders/2t/x0mw6nss4_z3npyvmny7gnnm0000gn/T//ccPiwRZU.s:438    .text:0000017c system_init
/var/folders/2t/x0mw6nss4_z3npyvmny7gnnm0000gn/T//ccPiwRZU.s:607    .text.startup:00000000 main
/var/folders/2t/x0mw6nss4_z3npyvmny7gnnm0000gn/T//ccPiwRZU.s:658    .data:00000000 uart_output
/var/folders/2t/x0mw6nss4_z3npyvmny7gnnm0000gn/T//ccPiwRZU.s:652    .bss:00000000 second_ticks

UNDEFINED SYMBOLS
update_rtc
malloc
vsprintf
lcd_gotoxy
lcd_puts
free
calculate
lcd_clrscr
get_minute
get_hour
get_temperature
get_year
get_month
get_day
lcd_init
init_wifi_module
init_sensor
init_timer
__iob
send_uart_char
__do_copy_data
__do_clear_bss
